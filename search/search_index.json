{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About Me","text":"<ul> <li>Undergraduate student in software engineering</li> <li>edwardwq301@gmail.com</li> <li>hobbies: read science fiction, acgn, play game</li> </ul>"},{"location":"guide/","title":"Guide","text":"<p>\u9690\u85cf\u4fa7\u8fb9\u680f \u5bf9\u4e8e\u5177\u6709\u524d\u8a00\u5c5e\u6027\u7684\u6587\u6863\uff0c\u53ef\u4ee5\u9690\u85cf\u5bfc\u822a\u548c/\u6216\u76ee\u5f55\u4fa7\u8fb9\u680f\u3002\u5728 Markdown \u6587\u4ef6\u7684\u9876\u90e8\u6dfb\u52a0\u4ee5\u4e0b <pre><code>---\nhide:\n  - navigation\n  - toc\n  - path\n---\n</code></pre></p> <p>Phasellus posuere in sem ut cursus</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <ul> <li>note</li> <li>abstract</li> <li>info</li> <li>tip</li> <li>success</li> <li>question</li> <li>warning</li> <li>failure</li> <li>danger</li> <li>bug</li> <li>example</li> <li>quote</li> </ul> CC++ <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>"},{"location":"backend/Java/","title":"Java","text":""},{"location":"backend/Java/#_1","title":"\u5b89\u88c5","text":"<p>vscode\u7684\u8bdd\u76f4\u63a5\u628ajdk\u5b89\u88c5\uff08\u4e00\u76f4\u4e0b\u4e00\u6b65\u5c31\u6ca1\u51fa\u9519\uff0c\u88c5\u5230\u6307\u5b9a\u7684\u6587\u4ef6\u5939\u5c31\u603b\u6709\u95ee\u9898\ud83d\ude05\uff09\uff0c\u8fd8\u662f\u76f4\u63a5\u4e0aide\u6bd4\u8f83\u65b9\u4fbf</p>"},{"location":"backend/Java/#_2","title":"\u611f\u60f3","text":"<p>Java\u6bd4C++\u66f4\u52a0\u7e41\u7410\uff0c\u5199\u8d77\u6765\u9ebb\u70e6\uff0c\u76f8\u5bf9\u7684\u66f4\u52a0\u9762\u5411\u5bf9\u8c61 \u8fd8\u4e0d\u662f\u5f88\u6e05\u695aJava\u7684\u5f15\u7528\u548cC++\u7684\u6307\u9488\uff0c\u5f15\u7528\u7684\u533a\u522b</p>"},{"location":"backend/Java/#note","title":"note","text":""},{"location":"backend/Java/#part1","title":"part1","text":"<ul> <li>\u53d8\u91cf\u90fd\u662f\u5bf9\u8c61\u7684\u5f15\u7528</li> <li>\u53ea\u6709\u57fa\u672c\u7c7b\u578b\u4e0d\u662f\u5bf9\u8c61</li> <li>\u6240\u6709\u53c2\u6570\u90fd\u662f\u503c\u4f20\u9012</li> <li>\u4e00\u4e2a\u65b9\u6cd5\u4e0d\u80fd\u4fee\u6539\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u53c2\u6570</li> <li>\u4e00\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u6539\u53d8\u5bf9\u8c61\u53c2\u6570\u7684\u72b6\u6001</li> <li>\u4e0d\u80fd\u8ba9\u5bf9\u8c61\u53c2\u6570\u5f15\u7528\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff08\u505a\u4e0d\u5230swap\uff09</li> </ul> \u4f8b\u5b50 <pre><code>  public class Main {\n\n    public static void main(String[] args) {\n        employee ashen = new employee(100);\n        testPara(ashen);\n        /*\n        \u4f20\u7684\u662fashen\u7684\u590d\u5236\uff0c\u8fd9\u4e2a\u590d\u5236\u4e5f\u5f15\u7528\u4e86\u90a3\u4e2a\u5bf9\u8c61\n        \u6240\u4ee5\u80fd\u4fee\u6539salary\n        */\n        System.out.println(\"para x\");\n        int testX = 10;\n        minus2(testX);\n        /*\n        \u4f20\u7684\u662ftestX\u503c\u7684\u590d\u5236\uff0c\u6700\u540e\u4e0d\u4f1a\u4fee\u6539testX\n         */\n        System.out.println(testX);\n    }\n\n    public static void testPara(employee e1) {\n        e1.showSalary();\n        e1.raiseSalary(100);\n        e1.showSalary();\n    }\n\n    public static void minus2(int x) {\n        System.out.println(\"para is \" + x);\n        x = x - 2;\n        System.out.println(\"para changed is \" + x);\n    }\n}\n\nclass employee {\n\n    private int salary;\n\n    public employee(int salary) {\n        this.salary = salary;\n    }\n\n    public void raiseSalary(int adding) {\n        salary += adding;\n    }\n\n    public void showSalary() {\n        System.out.println(salary);\n    }\n}\n</code></pre>"},{"location":"backend/Java/#part2","title":"part2","text":"<ul> <li><code>static</code>\u662f\u7c7b\u5171\u4eab\u7684\uff0c\u548cC++\u4e00\u6837</li> <li>\u66f4\u6539\u5668\u65b9\u6cd5\uff0c\u8bbf\u95ee\u5668\u65b9\u6cd5</li> <li>\u6bcf\u4e2a\u7c7b\u90fd\u53ef\u4ee5\u6709\u4e00\u4e2a\u9759\u6001main\u6765\u6d4b\u8bd5</li> <li>\u597d\u50cfJava\u4e2d\u6ca1\u6709\u51fd\u6570\u53c2\u6570\u7f3a\u7701\u7684\u529f\u80fd</li> <li>\u5305\u88c5\u4e0d\u80fd\u901a\u8fc7\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u6210\u57fa\u672c\u7c7b\u578b\uff0c\u9700\u8981\u7528intValue<ul> <li>\u6bd4\u8f83\u7528equals,\u4e0d\u7528==</li> </ul> </li> <li>\u5b50\u7c7b\u7ee7\u627f\u6784\u9020\u51fd\u6570\u65f6\u53ea\u7ee7\u627f\u4e86\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff08\u65e0\u53c2\uff09\uff0c\u4f46\u662f\u53ef\u4ee5<code>super(x,y)</code>\u8c03\u7528\u7236\u7c7b\u7684\u6709\u53c2\u6784\u9020\u51fd\u6570</li> <li>final\u5b9a\u4e49\u7684\u7c7b\u65e0\u6cd5\u518d\u6d3e\u751f\uff0cfinal\u5b9a\u4e49\u7684\u51fd\u6570\u4e0d\u80fd\u91cd\u5199</li> <li>Java\u4e0d\u652f\u6301\u591a\u91cd\u7ee7\u627f\uff0c\u90a3\u6211\u60f3\u8fbe\u5230\u8fd9\u4e2a\u6548\u679c\u8be5\u600e\u4e48\u529e\uff0c\u5c31\u5f15\u51fa\u63a5\u53e3\u7684\u7528\u9014\u3002\u63a5\u53e3\u53ef\u4ee5\u770b\u6210\u548c\u7c7b\u5e73\u7ea7\u3002</li> <li>\u63a5\u53e3\u4e0d\u662f\u7c7b\uff0c\u4f46\u662f\u53ef\u4ee5\u58f0\u660e\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5e76\u7528\u5b9e\u73b0\u4e86\u63a5\u53e3\u7684\u7c7b\u53bb\u521d\u59cb\u5316\u63a5\u53e3\u53d8\u91cf</li> </ul> Java8\u5f00\u59cb\u7684\u63a5\u53e3 \u524d\u7f00default\u65b9\u6cd5 \u53ef\u7ee7\u627f\uff0c\u4e0d\u53ef\u91cd\u5199 static\u5c5e\u6027\uff08\u53d8\u91cf\uff09 \u9ed8\u8ba4\u662f\u7ec8\u6001\uff0cfinal\u53ef\u52a0\u53ef\u4e0d\u52a0 static\u65b9\u6cd5\u53ef\u4ee5\u91cd\u5199 \u4e0d\u80fd\u88ab\u7ee7\u627f,\u63a5\u53e3\u7684\u9759\u6001\u65b9\u6cd5\u548c\u5b9e\u73b0\u7c7b\u7684\u9759\u6001\u65b9\u6cd5\u6ca1\u6709\u4efb\u4f55\u8054\u7cfb\uff0c\u53ea\u662f\u6070\u597d\u540d\u5b57\u4e00\u6837 \u4fee\u9970\u7b26 private \u4ec5\u5bf9\u672c\u7c7b\u53ef\u89c1 public \u6240\u6709\u7c7b\u53ef\u89c1 protected \u672c\u5305\u548c\u6240\u6709\u7c7b\u53ef\u89c1 \u9ed8\u8ba4 \u672c\u5305 interface example <pre><code>import java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        eagle e1 = new eagle(\"peter\");\n        eagle e2 = new eagle(\"ash\");\n        System.out.println(\"\" + e1.getName() + \" \" + e1.getTotalCount());\n        System.out.println(\"\" + e2.getName() + \" \" + e2.getTotalCount());\n        e1.flying();\n        //\u6b64\u5904\u7684getHeight\u662feagle\u81ea\u5df1\u7684\uff0c\n        // \u4e0d\u662f\u63a5\u53e3\u7684\uff0c\u53ea\u662f\u540d\u5b57\u6070\u597d\u4e00\u6837\n        e1.getHeight();\n        //\u53ea\u80fd\u4ece\u63a5\u53e3\u8bbf\u95ee\n        fly.getHeight();\n    }\n}\n\ninterface fly {\n    default public void flying() {\n        System.out.println(\"flying\");\n    }\n\n    static void getHeight() {\n        Random random = new Random();\n        int height = random.nextInt(100);\n        System.out.println(height);\n    }\n}\n\nclass eagle implements fly {\n    static int totalCount;\n    String name;\n\n    eagle(String name) {\n        this.name = name;\n        totalCount++;\n    }\n\n    public void getHeight() {\n        Random random = new Random();\n        int height = random.nextInt(100);\n        System.out.println(height);\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getTotalCount() {\n        return totalCount;\n    }\n}\n</code></pre>"},{"location":"backend/Java/#part3","title":"part3","text":"<ul> <li>\u51fd\u6570\u5f0f\u63a5\u53e3:\u4e00\u4e2a\u63a5\u53e3\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5 (\u6e90\u5730\u5740)[https://github.com/aqi00/java/blob/master/chapter08/src/com/special/function/TestFunctional.java]</li> </ul> Example <pre><code>//\u6f14\u793a\u52a8\u7269\u7c7b\u7684\u5b9a\u4e49\uff0c\u5176\u4e2dmidnight\u65b9\u6cd5\u7684\u8f93\u5165\u53c2\u6570\u4e3aBehavior\u7c7b\u578b\nclass Animal {\n    private String name; // \u52a8\u7269\u540d\u79f0\n\n    public Animal(String name) {\n        this.name = name;\n    }\n\n    public String getName() {\n        return this.name;\n    }\n\n    // \u5b9a\u4e49\u4e00\u4e2a\u534a\u591c\u884c\u52a8\u7684\u65b9\u6cd5\u3002\u5177\u4f53\u7684\u52a8\u4f5c\u7531\u8f93\u5165\u884c\u4e3a\u7684act\u65b9\u6cd5\u6267\u884c\n    public void midnight(Behavior behavior) {\n        behavior.act();\n    }\n\n}\n\n\n//\u5b9a\u4e49\u4e00\u4e2a\u884c\u4e3a\u63a5\u53e3\uff0c\u7ed9\u52a8\u7269\u7c7b\u8c03\u7528\ninterface Behavior {\n    public void act(); // \u58f0\u660e\u4e00\u4e2a\u540d\u53eb\u884c\u52a8\u7684\u62bd\u8c61\u65b9\u6cd5\n}\n\n\n//\u6f14\u793a\u5916\u90e8\u5982\u4f55\u8c03\u7528\u51fd\u6570\u5f0f\u63a5\u53e3\npublic class main {\n\n    public static void main(String[] args) {\n        testCock(); // \u6d4b\u8bd5\u516c\u9e21\u5728\u534a\u591c\u5e72\u4e86\u5565\n        testCat(); // \u6d4b\u8bd5\u8001\u732b\u5728\u534a\u591c\u5e72\u4e86\u5565\n        testPig(); // \u6d4b\u8bd5\u732a\u4ed4\u5728\u534a\u591c\u5e72\u4e86\u5565\n    }\n\n    // \u6d4b\u8bd5\u516c\u9e21\u5728\u534a\u591c\u5e72\u4e86\u5565\n    private static void testCock() {\n        Animal cock = new Animal(\"\u516c\u9e21\"); // \u521b\u5efa\u4e00\u4e2a\u516c\u9e21\u5b9e\u4f8b\n        // \u8c03\u7528midnight\u65b9\u6cd5\u65f6\uff0c\u4f20\u5165\u533f\u540d\u5185\u90e8\u7c7b\u7684\u5b9e\u4f8b\n        cock.midnight(new Behavior() {\n            @Override\n            public void act() {\n                System.out.println(cock.getName() + \"\u5728\u53eb\u5566\u3002\");\n            }\n        });\n        // \u8c03\u7528midnight\u65b9\u6cd5\u65f6\uff0c\u4f20\u5165Lambda\u8868\u8fbe\u5f0f\u7684\u4ee3\u7801\u3002\n        // \u533f\u540d\u65b9\u6cd5\u4e0d\u5b58\u5728\u8f93\u5165\u53c2\u6570\u7684\u8bdd\uff0c\u4e5f\u8981\u4fdd\u7559\u4e00\u5bf9\u5706\u62ec\u53f7\u5360\u4f4d\u5b50\u3002\n        cock.midnight(() -&gt; System.out.println(cock.getName() + \"\u5728\u53eb\u5566\u3002\"));\n    }\n\n    // \u6d4b\u8bd5\u8001\u732b\u5728\u534a\u591c\u5e72\u4e86\u5565\n    private static void testCat() {\n        Animal cat = new Animal(\"\u8001\u732b\"); // \u521b\u5efa\u4e00\u4e2a\u8001\u732b\u5b9e\u4f8b\n        // \u8c03\u7528midnight\u65b9\u6cd5\u65f6\uff0c\u4f20\u5165Lambda\u8868\u8fbe\u5f0f\u7684\u4ee3\u7801\n        cat.midnight(() -&gt; System.out.println(cat.getName() + \"\u5728\u6349\u8001\u9f20\u3002\"));\n    }\n\n    // \u6d4b\u8bd5\u732a\u4ed4\u5728\u534a\u591c\u5e72\u4e86\u5565\n    private static void testPig() {\n        Animal pig = new Animal(\"\u732a\u4ed4\"); // \u521b\u5efa\u4e00\u4e2a\u732a\u4ed4\u5b9e\u4f8b\n        // \u8c03\u7528midnight\u65b9\u6cd5\u65f6\uff0c\u4f20\u5165Lambda\u8868\u8fbe\u5f0f\u7684\u4ee3\u7801\n        pig.midnight(() -&gt; System.out.println(pig.getName() + \"\u5728\u547c\u547c\u5927\u7761\u3002\"));\n    }\n\n}\n</code></pre> <ul> <li>Java8\u5f00\u59cb\uff0c\u6bcf\u79cd\u5bb9\u5668\u90fd\u652f\u6301<code>forEach</code>\u548clambda\u8868\u8fbe\u5f0f\u8054\u5408\u4f7f\u7528</li> </ul> Exemple <pre><code>import java.util.HashMap;\nimport java.util.HashSet;\n\npublic class Employee {\n    public static void main(String[] args) {\n        HashMap&lt;String, Employee&gt; map = new HashMap&lt;String, Employee&gt;();\n        map.put(\"boss\", new Employee(\"wq\"));\n        map.put(\"clerk\", new Employee(\"jyy\"));\n\n        map.forEach((String key, Employee value) -&gt; System.out.printf(\"%s,%s\\n\", key, value.getName()));\n\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    String name;\n\n    Employee(String name) {\n        this.name = name;\n    }\n}\n</code></pre>"},{"location":"backend/Java/#part4","title":"part4","text":"<ul> <li>\u5f02\u5e38try catch finally(\u65e0\u8bba\u662f\u6267\u884c\u4e86try\u8fd8\u662fcatch\uff0c\u90fd\u8981\u6267\u884cfinally\u7684\u8bed\u53e5)</li> <li>\u901a\u8fc7\u53cd\u5c04\u64cd\u4f5c\u5bf9\u8c61\u7684\u79c1\u6709\u5c5e\u6027\u6216\u8005\u79c1\u6709\u65b9\u6cd5\u3002\u5148\u83b7\u53d6Class,\u518d\u83b7\u53d6Field\uff0csetAccessible,setInt\u3002</li> <li></li> </ul>"},{"location":"backend/Java/#todo","title":"TODO","text":"<ul> <li> <code>Comparator</code>\u7684\u952e\u63d0\u53d6\u5668\u51fd\u6570 v10page242</li> <li> \u6cdb\u578b\u63a5\u53e3\uff08\u65ad\u8a00\u63a5\u53e3\uff0c\u6d88\u8d39\u63a5\u53e3\uff0c\u51fd\u6570\u63a5\u53e3\uff09</li> </ul>"},{"location":"backend/Java/#qa","title":"Q&amp;A","text":""},{"location":"backend/Java/#nullequalnull","title":"==null\u548c.equal(null)\u7684\u533a\u522b","text":"<p>\u7b80\u5355\u6765\u8bf4\uff0c<code>==null</code>\u770b\u7684\u662f\u4e0d\u662f\u540c\u4e00\u4e2a\u5f15\u7528\uff0c<code>.equal()</code>\u662f\u8c03\u7528\u65b9\u6cd5\uff0c\u5982\u679c\u5b83\u672c\u8eab\u662fnull\uff0c\u90a3\u5c31\u4f1a\u5f15\u53d1NullPointerException\u3002\u770b\u662f\u4e0d\u662fnull\uff0c\u76f4\u63a5\u7528<code>==null</code>\u6216\u8005<code>Objects.equals(onePossibleNull, twoPossibleNull)</code>\u5c31\u884c\u4e86</p>"},{"location":"backend/Java/#_3","title":"\u81ea\u5b9a\u4e49\u6bd4\u8f83","text":"<ol> <li>\u5728\u7c7b\u4e2d\u5e94\u7528<code>Comparable&lt;someClass&gt;</code>\u63a5\u53e3\uff0c\u91cd\u5199<code>public int compareTo(someClass s2)</code>\uff0c\u6765\u5b9e\u73b0\u7c7b\u81ea\u5e26\u6bd4\u8f83</li> <li>\u5728\u9700\u8981<code>Comparator</code>\u7684\u5730\u65b9\u5199\u4e00\u4e2a\u533f\u540d\u7684\u7c7b\u6216\u8005lamada\u8868\u8fbe\u5f0f</li> </ol> <p>\u81ea\u5b9a\u4e49\u6bd4\u8f83</p> <pre><code>import java.util.ArrayList;\nimport java.util.Comparator;\n\npublic class main {\n    public static void main(String[] args) {\n        ArrayList&lt;Employee&gt; arrayList = new ArrayList&lt;Employee&gt;();\n        for (int i = 0; i &lt; 4; i++) {\n            String name = \"ename\";\n            for (int j = 0; j &lt; i; j++)\n                name = name + j;\n            Employee employee = new Employee(i, name);\n            arrayList.add(employee);\n        }\n        //\u901a\u8fc7\u63a5\u53e3\u5b9e\u73b0\u65b9\u6cd5\u81ea\u5e26\n        arrayList.sort(Employee::compareTo);\n        //new\u4e00\u4e2aComparator\u533f\u540d\u5185\u90e8\u7c7b\n        arrayList.sort(new Comparator&lt;Employee&gt;() {\n            @Override\n            public int compare(Employee o1, Employee o2) {\n                if (o1.getName().length() &gt; o2.getName().length())\n                    return -1;\n                else if (o1.getName().length() &lt; o2.getName().length()) {\n                    return 1;\n                } else\n                    return 0;\n            }\n        });\n\n        //lamada\u8868\u8fbe\u5f0f\n        arrayList.sort(((o1, o2) -&gt; o1.name.length()&gt;o2.name.length()?-1:1));\n\n        //lamada\u8868\u8fbe\u5f0f\n        arrayList.sort((o1, o2) -&gt; {\n            if (o1.getName().length() &gt; o2.getName().length())\n                return -1;\n            else if (o1.getName().length() &lt; o2.getName().length()) {\n                return 1;\n            } else\n                return 0;\n        });\n    }\n\n\n}\n\nclass Employee implements Comparable&lt;Employee&gt; {\n    public int salary;\n    String name;\n\n    @Override\n    public int compareTo(Employee e2) {\n        if (this.salary &gt; e2.salary) return -1;\n        else if (this.salary &lt; e2.salary) return 1;\n        else return 0;\n    }\n\n    public Employee(int sal, String name) {\n        salary = sal;\n        this.name = name;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getSalary() {\n        return salary;\n    }\n}\n</code></pre>"},{"location":"backend/Java/#_4","title":"\u6c42\u4e24\u4e2a\u65e5\u671f\u95f4\u9694\u5929\u6570","text":"<pre><code>LocalDate start=LocalDate.now();\nLocalDate end = LocalDate.of(2025,5,5);\nDuration between = Duration.between(start.atStartOfDay(), end.atStartOfDay());\nSystem.out.println(between.toDays());\n</code></pre>"},{"location":"backend/Java/#javafx","title":"javafx\u5c55\u793a\u56fe\u7247","text":"<p>\u4f20\u9001\u95e8</p>"},{"location":"backend/Java/#java-scanner","title":"Java scanner\u5173\u95ed","text":"<p>\u5982\u679cscanner\u7684sys.in\u5b9e\u4f8b\u5173\u95ed\u4e86\uff0c\u5373<code>\u5b9e\u4f8b\u540d.close()</code>\uff0c\u4e0d\u80fd\u518d\u521b\u5efasys.in\u5b9e\u4f8b</p> <p>StackOverflow csdn\u76f8\u5173</p>"},{"location":"backend/Java/#_5","title":"\u6570\u5b57\u548c\u5b57\u7b26\u4e32\u6df7\u5408\u8f93\u5165","text":"<p>\u4eca\u5929\u9047\u5230\u8fd9\u6837\u4e00\u4e2a\u60c5\u51b5\uff0c\u5148\u8f93\u5165\u6570\u5b57\uff0c\u518d\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u65f6\u5019\u603b\u662f\u7a7a\u4e32\u3002Java\u8fd9\u4e2a\u6027\u8d28\u4e5f\u592a\u5751\u4e86\ud83d\ude21 \u76f8\u5173\u89e3\u51b3\u529e\u6cd5\u4f20\u9001\u95e8</p>"},{"location":"backend/algorithm/","title":"algorithm","text":""},{"location":"backend/algorithm/#data-structure","title":"data structure","text":""},{"location":"backend/algorithm/#sort","title":"sort","text":"<p>insert sort: In iteration i, swap a[i] with each larger entry to its left.</p> <pre><code>void insertSort(vector&lt;int&gt; &amp;todo) {\n    for (int i = 0; i &lt; todo.size(); ++i) {\n        for (int j = i; j &gt; 0; --j) {\n            if (todo[j] &lt; todo[j - 1])\n                swap(todo[j], todo[j - 1]);\n            else break;\n        }\n    }\n}\n</code></pre> <p>select sort: In iteration i, swap a[i] with proper item.</p> <pre><code>void selectSort(vector&lt;int&gt; &amp;todo) {\n    for (int i = 0; i &lt; todo.size(); i++) {\n        int min = i;\n        for (int j = min + 1; j &lt; todo.size(); j++) {\n            if (todo[j] &lt; todo[min])\n                min = j;\n        }\n        swap(todo[i], todo[min]);\n    }\n}\n</code></pre> <p>shell sort: in select sort, some item should move lots step while just move step by step. so we move some item by long distance and shrink the distance </p> <pre><code>void shellSort(vector&lt;int&gt; &amp;todo) {\n    int N = todo.size();\n    int h = 1;\n    while (h &lt; N / 3) h = 3 * h + 1;\n\n    while (h &gt;= 1) {\n        for (int i = h; i &lt; N; i++) {\n            for (int j = i; j &gt;= h &amp;&amp; todo[j] &lt; todo[j - h]; j -= h)\n                swap(todo[j], todo[j - h]);\n        }\n        h = h / 3;\n    }\n}\n</code></pre> <p>knuth shuffle: in iteration i, swap a[i] and a[k] (random k in [0, i])</p> <pre><code>void shuffle(vector&lt;int&gt; &amp;todo) {\n    int N = todo.size();\n    for (int i = 0; i &lt; N; i++) {\n        int k = rand() % (i + 1);   //[0, i]\n        swap(todo[i], todo[k]);\n    }\n}\n</code></pre>"},{"location":"backend/algorithm/#_1","title":"\u5e76\u67e5\u96c6","text":"<pre><code>public class Union {\n    private int id[];\n    private int size[];\n\n    public Union(int n) {\n        id = new int[n];\n        size = new int[n];\n        for (int i = 0; i &lt; n; i++) {\n            id[i] = i;\n            size[i] = 1;\n        }\n    }\n\n    private int root(int i) {\n        while (i != id[i]) {\n            //id[i] = id[id[i]]; \u6ca1\u6709\u5c31\u662f\u57fa\u7840\u7248\n            i = id[i];\n        }\n        return i;\n    }\n\n    public void union(int p, int q) {\n        int pro = root(p);\n        int qro = root(q);\n        if (size[pro] &lt;= size[qro]) {\n            id[pro] = qro;\n            size[qro] += size[pro];\n        }\n        else {\n            id[qro] = pro;\n            size[pro] += size[qro];\n        }\n    }\n\n    public boolean connected(int p, int q) {\n        return root(q) == root(q);\n    }\n}\n</code></pre> <p>Successor with delete: Given a set of n integers S = {0, 1, ..., n\u22121} and a sequence of requests of the following form:</p> <ul> <li>remove x from S </li> <li>find successor of  x : the smallest y in S such that y&gt;=x</li> <li> <p>solve hint: union(x,x+1)</p> </li> <li> <p>\u5047\u5b9a\u4e0d\u8003\u8651\u5220\u9664\u6216\u67e5\u8be2\u6700\u540e\u4e00\u4e2a\uff0c\u5982\u679c\u628a\u53f3\u8fb9\u7684\u6302\u5230\u5de6\u8fb9\uff0c\u5c31\u5728 <code>actual</code> \u8bb0\u5f55\u4e00\u4e0b</p> </li> <li>\u601d\u8def\u6765\u6e90</li> </ul> slove <pre><code>public class Union {\n    public static void main(String[] args) {\n        Union ua = new Union(7);\n        ua.remove(2);\n        ua.remove(4);\n        ua.remove(3);\n        System.out.println(\"successor 3: \" + ua.successor(3));\n        ua.remove(5);\n        System.out.println(\"successor 5: \" + ua.successor(5));\n        ua.showActual();\n    }\n\n    private int id[];\n    private int size[];\n    private int actual[];\n\n    public Union(int n) {\n        id = new int[n];\n        size = new int[n];\n        actual = new int[n];\n        for (int i = 0; i &lt; n; i++) {\n            id[i] = i;\n            actual[i] = i;\n            size[i] = 1;\n        }\n    }\n\n    private int root(int i) {\n        while (i != id[i]) {\n            id[i] = id[id[i]];\n            i = id[i];\n        }\n        return i;\n    }\n\n    public void union_ab(int p, int q) {\n        /* p &lt; q */\n        int pro = root(p);\n        int qro = root(q);\n        if (size[pro] &lt;= size[qro]) {\n            id[pro] = qro;\n            size[qro] += size[pro];\n        }\n        else {\n            id[qro] = pro;\n            size[pro] += size[qro];\n            actual[pro] = qro;\n        }\n    }\n\n    public boolean connected(int p, int q) {\n        return root(q) == root(q);\n    }\n\n    public void remove(int x) {\n        if (x &gt;= 0 &amp;&amp; x &lt; id.length - 1)\n            union_ab(x, x + 1);\n    }\n\n    public int successor(int x) {\n        return actual[root(x + 1)];\n    }\n\n    public void showActual() {\n        System.out.print(\"actual: \");\n        for (int x = 0; x &lt; actual.length - 1; x++)\n            System.out.print(actual[root(x + 1)] + \" \");\n\n        System.out.print(\"\\nroot: \");\n        for (int x = 0; x &lt; actual.length; x++)\n            System.out.print(id[x] + \" \");\n    }\n}\n</code></pre>"},{"location":"backend/algorithm/#template","title":"template","text":"<p>vector\u5220\u9664\u7279\u5b9a\u5143\u7d20 <code>nums.erase(remove(nums.begin(), nums.end(), val) ,nums.end());</code></p> <p>mergesort</p> normalimprove <pre><code>#include \"vector\"\n#include \"iostream\"\n#include \"algorithm\"\n\n\nusing namespace std;\n\nvoid check(vector&lt;int&gt; checkitem) {\n    for (int i : checkitem) {\n        cout &lt;&lt; i &lt;&lt; ' ';\n    }\n    cout &lt;&lt; endl;\n}\n\nvoid mergeCore(vector&lt;int&gt; &amp;a, vector&lt;int&gt; &amp;aux, int lo, int hi) {\n    if (lo &gt;= hi) return;\n    int mid = (lo + hi) / 2;\n\n    mergeCore(a, aux, lo, mid);\n    mergeCore(a, aux, mid + 1, hi);\n\n    int i = lo, j = mid + 1, k = lo;\n\n    while (i &lt;= mid &amp;&amp; j &lt;= hi) {\n        if (a[i] &lt; a[j])\n            aux[k++] = a[i++];\n        else aux[k++] = a[j++];\n    }\n    while (i &lt;= mid) aux[k++] = a[i++];\n    while (j &lt;= hi) aux[k++] = a[j++];\n\n    for (int ti = lo, tk = lo; ti &lt;= hi; ti++, tk++)\n        a[ti] = aux[tk];\n\n\n}\n\nvoid mergeSort(vector&lt;int&gt; &amp;a, int lo, int hi) {\n    auto aux = a;\n    mergeCore(a, aux, lo, hi);\n\n}\n\nvoid testSort() {\n\n    vector&lt;int&gt; pre = {20, 19, 18, 17, 16};\n\n\n    vector&lt;int&gt; anw = pre;\n    std::sort(anw.begin(), anw.end());\n\n    mergeSort(pre, 0, pre.size() - 1);\n\n    check(pre);\n\n}\n\nint main() {\n    testSort();\n    return 0;\n}\n</code></pre> <pre><code>#include \"vector\"\n#include \"iostream\"\n#include \"algorithm\"\n\n\nusing namespace std;\n\nvoid check(vector&lt;int&gt; checkitem) {\n    for (int i: checkitem) {\n        cout &lt;&lt; i &lt;&lt; ' ';\n    }\n    cout &lt;&lt; endl;\n}\n\nvoid mergeCore(vector&lt;int&gt; &amp;a, vector&lt;int&gt; &amp;aux, int lo, int hi) {\n    if (lo &gt;= hi) return;\n    int mid = (lo + hi) / 2;\n\n    mergeCore(aux, a, lo, mid);\n    mergeCore(aux, a, mid + 1, hi);\n\n    int i = lo, j = mid + 1, k = lo;\n\n    while (i &lt;= mid &amp;&amp; j &lt;= hi) {\n        if (a[i] &lt; a[j])\n            aux[k++] = a[i++];\n        else aux[k++] = a[j++];\n    }\n    while (i &lt;= mid) aux[k++] = a[i++];\n    while (j &lt;= hi) aux[k++] = a[j++];\n\n//    for (int ti = lo, tk = lo; ti &lt;= hi; ti++, tk++)\n//        a[ti] = aux[tk];\n\n\n}\n\nvoid mergeSort(vector&lt;int&gt; &amp;a, int lo, int hi) {\n    auto aux = a;\n    mergeCore(a, aux, lo, hi);\n    a = aux;\n}\n\nvoid testSort() {\n\n    vector&lt;int&gt; pre = {20, 19, 18, 17, 16};\n\n\n    vector&lt;int&gt; anw = pre;\n    std::sort(anw.begin(), anw.end());\n\n    mergeSort(pre, 0, pre.size() - 1);\n\n    check(pre);\n\n}\n\nint main() {\n    testSort();\n    return 0;\n}\n</code></pre> <p>heap</p> stl <pre><code>#include \"bits/stdc++.h\"\n\nusing namespace std;\n\nvector&lt;int&gt; heap;\n\nint main() {\n    int n;\n    cin &gt;&gt; n;\n    while (n--) {\n        int op;\n        cin &gt;&gt; op;\n        if (op == 1) {\n            int x;\n            cin &gt;&gt; x;\n            heap.push_back(x);\n            push_heap(heap.begin(), heap.end(), greater&lt;int&gt;());\n//            make_heap(heap.begin(), heap.end(), greater&lt;int&gt;());\n        }\n        else if (op == 2)\n            cout &lt;&lt; heap.front() &lt;&lt; endl;\n        else {\n            pop_heap(heap.begin(), heap.end(), greater&lt;int&gt;());\n            heap.pop_back();\n        }\n\n    }\n    return 0;\n}\n</code></pre>"},{"location":"backend/algorithm/#thought","title":"thought","text":"<p>\u56fe\u7684\u5b58\u50a8</p>"},{"location":"backend/algorithm/#q-dp","title":"Q: \u4e3a\u4ec0\u4e48\u533a\u95f4dp\u5148\u679a\u4e3e\u957f\u5ea6\u518d\u679a\u4e3e\u5de6\u7aef\u70b9","text":"<p>A: \u9632\u6b62\u7528\u5230\u8fd8\u6ca1\u7b97\u597d\u7684\u5c0f\u533a\u95f4 </p> <p>eg:\u6700\u957f\u56de\u6587\u5b57\u4e32\"aaaaa\"</p> <p>\u7528 <code>dp[0][4]</code> \u7684\u65f6\u5019\u5e94\u8be5\u5148\u7b97 <code>dp[1][3]</code> ,\u4f46\u662f\u5148\u679a\u4e3e\u5de6\u7aef\u70b9\u7684\u8bdd\u5c31\u6ca1\u505a\u5230\u5148\u7b97 <code>dp[1][3]</code></p> wrong answer <pre><code>class Solution {\npublic:\n    string longestPalindrome(string s) {\n\n        vector&lt;vector&lt;bool&gt;&gt; dp(s.size(), vector(s.size(), false));\n        pair&lt;int, int&gt; anw = {0, 1};\n        for (int i = 0; i &lt; s.size() - 1; ++i) {\n            dp[i][i] = true;\n            if (s[i] == s[i + 1]) {\n                dp[i][i + 1] = true;\n                anw = {i, 2};\n            }\n        }\n        dp[s.size() - 1][s.size() - 1] = true;\n\n\n        for (int l = 0; l &lt; s.size(); ++l) {\n            for (int len = 2; len &lt;= s.size(); ++len) {\n                if(len+l-1&gt;=s.size()) continue;\n                int r = l + len - 1;\n\n                if (dp[l + 1][r - 1] == true &amp;&amp; s[l] == s[r]) {\n                    dp[l][r] = true;\n                    cout&lt;&lt;l&lt;&lt;' '&lt;&lt;r&lt;&lt;endl;\n                    if (len &gt; anw.second)\n                        anw = {l, len};\n                }\n            }\n        }\n\n        return s.substr(anw.first, anw.second);\n\n    }\n};\n</code></pre> correct answer <pre><code>class Solution {\npublic:\n    string longestPalindrome(string s) {\n        if (s.size() == 0 || s.size() == 1) return s;\n        vector&lt;vector&lt;bool&gt;&gt; dp(s.size(), vector&lt;bool&gt;(s.size()));\n        int maxlen = 1, begin = 0;\n        for (int i = 0; i &lt; s.size(); i++) {\n            dp[i][i] = true;\n            if (i &lt; s.size() - 1 &amp;&amp; s[i] == s[i + 1]) {\n                dp[i][i + 1] = true;\n                begin = i;\n                maxlen = 2;\n            }\n        }\n\n        for (int len = 2; len &lt;= s.size(); len++)\n            for (int i = 0; i + len - 1 &lt; s.size(); i++) {\n                int r = i + len - 1;\n                if (s[i] == s[r] &amp;&amp; dp[i + 1][r - 1] == true) {\n                    dp[i][r] = true;\n                    maxlen = len;\n                    begin = i;\n                }\n            }\n\n        return s.substr(begin, maxlen);\n    }\n};\n</code></pre>"},{"location":"backend/algorithm/#_2","title":"\u8bb0\u5fc6\u5316\u641c\u7d22","text":"<p>oi\u4ecb\u7ecd</p> <p>\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217</p> <p>\u5728\u539f\u59cbdfs\u4e2d\uff0c\u4f1a\u51fa\u73b0\u5f88\u591a\u91cd\u590d\u6ca1\u6709\u7528\u7684\u8ba1\u7b97\u3002</p> <p>\u6c42\u6570\u5b578\u7684\u4f4d\u7f6e\u65f6\uff0c\u628a\u4e4b\u524d\u76843\uff0c1\uff0c2\u7b49\u5c31\u91cd\u590d\u7b97\u4e86\u3002 <pre><code>7\n3 1 2 1 8 5 6\n</code></pre></p> \u539f\u59cbdfs <pre><code>#include \"bits/stdc++.h\"\n\nusing namespace std;\n\nconst int N = 1010;\nint res = 0;\nint a[N];\nint dp[N];\nint n;\n\nint solve(int po) {\n    dp[po] = 1;\n    for (int i = 0; i &lt; po; ++i) {\n        if (a[i] &lt; a[po]) dp[po] = max(dp[po], solve(i) + 1);\n    }\n    return dp[po];\n}\n\nint main() {\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt; n; ++i) {\n        cin &gt;&gt; a[i];\n    }\n    for (int i = 0; i &lt; n; ++i) {\n        res = max(res, solve(i));\n    }\n    cout &lt;&lt; res;\n    return 0;\n}\n</code></pre> <p>\u90a3\u4e48\u6211\u4eec\u5c31\u5b58\u4e00\u4e2a\u8bb0\u5fc6\u5316\u6570\u7ec4\uff0c\u5982\u679c\u4e4b\u524d\u7b97\u8fc7\u4e86\u76f4\u63a5\u8fd4\u56de\u7b97\u597d\u7684\u503c\uff0c\u5426\u5219\uff0c\u7ee7\u7eed\u7b97</p> \u8bb0\u5fc6\u5316 <pre><code>#include \"bits/stdc++.h\"\n\nusing namespace std;\n\nconst int N = 1010;\nint res = 0;\nint a[N];\nint dp[N];\nint n;\n\nint solve(int po) {\n    // \u7b97\u597d\u4e86\u5c31\u8fd4\u56de\n    if (dp[po] != -1) return dp[po];\n\n    dp[po] = 1;\n    for (int i = 0; i &lt; po; ++i) {\n        if (a[i] &lt; a[po]) dp[po] = max(dp[po], solve(i) + 1);\n    }\n    return dp[po];\n}\n\nint main() {\n\n    ::memset(dp, -1, sizeof dp);\n\n\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt; n; ++i) {\n        cin &gt;&gt; a[i];\n    }\n    for (int i = 0; i &lt; n; ++i) {\n        res = max(res, solve(i));\n    }\n    cout &lt;&lt; res;\n    return 0;\n}\n</code></pre>"},{"location":"backend/algorithm/#manacher","title":"manacher","text":"<p>\u8bb2\u89e3</p> slove <pre><code>class Solution {\npublic:\n    string longestPalindrome(string s) {\n        string todo = \"\";\n\n        for (int i = 0; i &lt; s.size(); i++)\n            todo += s[i], todo += '#';\n        todo = \"^#\" + todo;\n        todo += '$';\n\n        vector&lt;int&gt; p(todo.size(), 1);\n        int id = 0, maxid = 0;\n        for (int i = 1; i &lt; todo.size(); i++) {\n            if (i &lt; maxid) {\n                p[i] = min(p[2 * id - i], maxid - i);\n            }\n\n            while (todo[i - p[i]] == todo[i + p[i]])\n                p[i]++;\n            if (p[i] + i &gt; maxid) {\n                maxid = i + p[i];\n                id = i;\n            }\n        }\n\n\n        int st = 0, len = 0;\n        for (int i = 1; i &lt; p.size() - 1; i++) {\n            if (p[i] &gt; len) {\n                st = i;\n                len = p[i];\n            }\n        }\n        cout &lt;&lt; st &lt;&lt; ' ' &lt;&lt; len;\n        return s.substr((st - len) / 2, len - 1);\n    }\n};\n</code></pre>"},{"location":"backend/algorithm/#_3","title":"\u8d28\u6570\u7b5b","text":"<p>\u57c3\u6c0f\u7b5b</p> \u4f8b\u5b50 <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n//\u57c3\u6c0f\u7b5b\u672a\u4f18\u5316\nvector&lt;int&gt; get_prime_core(vector&lt;int&gt;&amp; anw, vector&lt;int&gt; source) {\n    if (!source.empty())\n        anw.push_back(source[0]);\n    else\n        return anw;\n    vector&lt;int&gt; todo;\n    for (int x : source) {\n        if (x % source[0] != 0) {\n            todo.push_back(x);\n        }\n    }\n    return get_prime_core(anw, todo);\n}\n\nvector&lt;int&gt; get_prime(int n) {\n    vector&lt;int&gt; anw;\n    vector&lt;int&gt; source(n - 1);\n    for (int i = 0, begin = 2; i &lt; source.size(); i++, begin++)\n        source[i] = begin;\n    return get_prime_core(anw, source);\n}\n\n\n//\u57c3\u6c0f\u7b5b\u4f18\u5316\nvector&lt;int&gt; get_prime_update_ei(int n) {\n    vector&lt;bool&gt; is_prime(n + 1, true);\n    vector&lt;int&gt; anw;\n\n    for (int i = 2; i &lt;= n; i++) {\n        if (is_prime[i])\n            anw.push_back(i);\n        else\n            continue;\n        for (int id = i; id &lt;= n; id += i)\n            is_prime[id] = false;\n    }\n    for (auto x : anw)\n        cout &lt;&lt; x &lt;&lt; ' ';\n    cout &lt;&lt; endl\n        &lt;&lt; anw.size();\n    return anw;\n}\n\n\n//\u7ebf\u6027\u7b5b\nvector&lt;int&gt; get_prime_update_On(int n) {\n    vector&lt;bool&gt; is_prime(n + 1, true);\n    vector&lt;int&gt; anw;\n\n    for (int i = 2; i &lt;= n; i++) {\n        if (is_prime[i])\n            anw.push_back(i);\n        for (int j = 0; anw[j] &lt;= n / i; j++) {\n            is_prime[anw[j] * i] = false;\n            if (i % anw[j] == 0)\n                break;\n        }\n    }\n\n    for (auto x : anw)\n        cout &lt;&lt; x &lt;&lt; ' ';\n    cout &lt;&lt; endl\n        &lt;&lt; anw.size();\n    return anw;\n}\n\nint main() {\n    int n = 20;\n    vector&lt;int&gt; anw = get_prime_update_On(n);\n\n    return 0;\n}\n</code></pre>"},{"location":"backend/effectivecpp/","title":"C++","text":""},{"location":"backend/effectivecpp/#pointer-vs-reference","title":"pointer vs reference","text":"<p>pointer\uff1a</p> <ul> <li>\u4e0d\u540c\u65f6\u95f4\u6307\u5411\u4e0d\u540c\u7684\u7269\u4f53</li> <li>\u6709\u53ef\u80fd\u6307\u5411null</li> </ul> <p>reference\uff1a</p> <ul> <li>\u4e0d\u4f1a\u4e3a\u7a7a\uff08\u4e00\u5b9a\u6307\u5411\u67d0\u4e2a\u7269\u4f53\uff09\uff0c\u4e0d\u7528\u68c0\u67e5null\uff0c\u6240\u4ee5\u521b\u5efa\u7684\u65f6\u5019\u5c31\u521d\u59cb\u5316\uff08\u8d4b\u503c\uff09</li> </ul>"},{"location":"backend/effectivecpp/#const-pointer","title":"const pointer","text":"<ul> <li><code>const</code>\u5728<code>*</code>\u5de6\u8fb9\uff0c\u6240\u6307\u7269\u4e3a<code>const</code> \uff08\u6307\u9488\u53ef\u4ee5\u4e0d\u540c\u65f6\u95f4\u6307\u5411\u4e0d\u540c\u7269\u4f53\uff0c\u4f46\u662f\u7269\u4f53\u5185\u5bb9\u4e0d\u80fd\u6539\u53d8\uff09</li> <li><code>const</code>\u5728<code>*</code>\u53f3\u8fb9\uff0c\u6307\u9488\u4e3a<code>const</code> \uff08\u6307\u9488\u4e00\u76f4\u6307\u5411\u4e00\u4e2a\u7269\u4f53\uff0c\u4f46\u662f\u7269\u4f53\u5185\u5bb9\u53ef\u6539\u53d8\uff09</li> </ul> <pre><code>char p1[] = \"hello\";\nchar* npnd = p1;             // non-const pointer,non-const data\nconst char* npcd = p1;       // non-const pointer,const data\nchar* const cpnd = p1;       // const pointer,non-const data\nconst char* const cpcd = p1; // const pointer,const data\n</code></pre>"},{"location":"backend/effectivecpp/#_1","title":"\u7c7b\u578b\u8f6c\u6362","text":"<p><code>const_cast&lt; &gt;</code> \u628aconst\u8f6c\u4e3a\u975econst\uff0c\u53bb\u6389constness\u6216\u8005volatileness</p> <pre><code>int x = 10;\nconst int&amp; cx = x;\nconst_cast&lt;int&amp;&gt;(cx) = 2;\n</code></pre> <p><code>dynamic_cast&lt; &gt;</code> \u5b89\u5168\u5730\u628a\u7236\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8f6c\u6362\u6210\u5b50\u7c7b\u6307\u9488\u6216\u5f15\u7528</p> <ul> <li>\u6307\u9488\u8f6c\u6362\u5931\u8d25\uff1a\u4f20\u4e00\u4e2anull\u6307\u9488</li> <li>\u5f15\u7528\u8f6c\u6362\u5931\u8d25\uff1a\u629b\u51fa\u5f02\u5e38<code>std::bad_cast</code></li> </ul> <p><code>static_cast&lt; &gt;</code> \u7c7b\u578b\u8f6c\u6362\u529f\u80fd\u591a\uff1a</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nenum class num {\n    first = 11,\n    second,\n    third\n};\n\nint main() {\n    num e = num::third;\n    // enum to int\n    int x = static_cast&lt;int&gt;(e);\n    cout &lt;&lt; x;\n    return 0;\n}\n</code></pre>"},{"location":"backend/effectivecpp/#class","title":"class","text":""},{"location":"backend/effectivecpp/#_2","title":"\u4f7f\u7528\u524d\u5148\u521d\u59cb\u5316","text":"<ul> <li>\u63a8\u8350\u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\u8fdb\u884c\u521d\u59cb\u5316</li> <li>\u4e0d\u5728\u6784\u9020\u51fd\u6570\u5185\u8fdb\u884c\u8d4b\u503c\uff08\u6765\u63d0\u5347\u6548\u7387\uff09</li> <li>\u521d\u59cb\u5316\u5217\u8868\u7684\u987a\u5e8f\u548c\u58f0\u660e\u987a\u5e8f\u76f8\u540c\uff08\u7f16\u8bd1\u5668\u7ed9\u5148\u58f0\u660e\u7684\u8fdb\u884c\u521d\u59cb\u5316\uff09</li> </ul>"},{"location":"backend/effectivecpp/#_3","title":"\u4e0d\u60f3\u8981\u81ea\u52a8\u751f\u6210\u7684\u51fd\u6570","text":"<p>\u5047\u5982\u4e0d\u60f3\u8981\u7f16\u8bd1\u5668\u81ea\u52a8\u4ea7\u751f\u7684copy\u6784\u9020\u51fd\u6570\u548ccopy assignment\u64cd\u4f5c\u7b26\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a</p> <ul> <li>\u5c06\u51fd\u6570\u58f0\u660e\u4e3a<code>private</code>\u5e76\u4e14\u4e0d\u5b9e\u73b0</li> <li>\u6216\u8005\u5c06\u4ed6\u7684\u7236\u7c7b\u7684\u51fd\u6570\u58f0\u660e\u4e3a<code>private</code>\u5e76\u4f7f\u7528<code>private</code>\u7ee7\u627f</li> </ul> \u57fa\u7c7b\u6210\u5458 \u516c\u6709\u6d3e\u751f \u79c1\u6709\u6d3e\u751f \u4fdd\u62a4\u6d3e\u751f private unvisited unvisited unvisited protected protected private protected public public private protected"},{"location":"backend/effectivecpp/#c-qa","title":"C++ Q&amp;A","text":"<ul> <li>\u4e3a\u4ec0\u4e48 C++ \u6ca1\u6709 <code>interface</code><ul> <li>\u6709\u4e00\u79cd\u8bf4\u6cd5\u662f C++ \u652f\u6301\u591a\u91cd\u7ee7\u627f\uff0c\u800c Java \u4e0d\u652f\u6301\uff0c\u6240\u4ee5\u5c31\u6ca1\u8bbe\u8ba1\u5173\u952e\u5b57 </li> </ul> </li> </ul>"},{"location":"backend/leetcode/","title":"leetcode","text":""},{"location":"backend/leetcode/#offer","title":"\u5251\u6307offer","text":""},{"location":"backend/leetcode/#_1","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d","text":"<p>solve</p> solve <pre><code>class Solution {\npublic:\n    bool isMatch(string str, string pattern) {\n        vector&lt;vector&lt;bool&gt;&gt; dp(str.length() + 1, vector(pattern.size() + 1, false));\n        dp[0][0] = true;\n        for (int i = 0; i &lt;= str.length(); i++)\n            for (int j = 1; j &lt;= pattern.size(); j++) {\n                if ((i &gt; 0) &amp;&amp;\n                    (pattern[j - 1] == '.' ||\n                    pattern[j - 1] != '*' &amp;&amp; pattern[j - 1] == str[i - 1]))\n                    dp[i][j] = dp[i - 1][j - 1];\n                else if (pattern[j - 1] == '*') {\n                    if (j &gt; 1 &amp;&amp; dp[i][j - 2] == true)\n                        dp[i][j] = true;\n                    else if ((i &gt; 0 &amp;&amp; j &gt; 1) &amp;&amp;\n                            (pattern[j - 2] == str[i - 1] || pattern[j - 2] == '.')\n                            &amp;&amp; dp[i - 1][j] == true)\n                        dp[i][j] = true;\n                }\n            }\n        return dp[str.length()][pattern.size()];\n\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_2","title":"\u4e8c\u53c9\u6811\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9","text":"<ul> <li>\u4e2d\u5e8f\u904d\u5386\u5de6\u6839\u53f3</li> <li>\u5982\u679c\u4e0d\u662f\u53f6\u8282\u70b9\uff0c\u8981\u6c42\u7684\u70b9\u76f8\u5f53\u4e8e\u5148\u5f80\u53f3\u4e00\u6b65\uff0c\u518d\u4e00\u76f4\u5f80\u5de6\u8d70\u5230\u5934,\u662f\u4e00\u4e2a &gt; \u7684\u5f62\u72b6</li> <li>\u5982\u679c\u662f\u53f6\u8282\u70b9A\uff0c\u53ef\u4ee5\u5148\u8003\u8651\u5b83\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9B\u600e\u4e48\u5230\u7684\u5b83\u672c\u8eab\uff0c<ul> <li>\u5c31\u662fB\u5148\u5f80\u5de6\u4e00\u6b65\uff0c\u518d\u5f80\u53f3\u8d70\u5230\u5934\u5230\u8fbeA\uff0c\u5f62\u6210\u4e00\u4e2a &lt; \u7684\u5f62\u72b6</li> <li>\u7136\u540e\u53d1\u73b0\u62d0\u89d2\u5904\u5bb9\u6613\u6c42\u51fa\u6765 <code>p-&gt;father-&gt;left==p</code></li> <li>\u5982\u679c\u8bf4\u6ca1\u6709\u7236\u8282\u70b9\uff0c\u8bf4\u660e\u6ca1\u6709\u8981\u6c42\u7684\u7b54\u6848\uff0c\u8fd4\u56de <code>nullptr</code></li> </ul> </li> </ul> Slove <pre><code>class Solution {\npublic:\n    TreeNode *inorderSuccessor(TreeNode *p) {\n        if (p-&gt;right != nullptr) {\n            p = p-&gt;right;\n            while (p-&gt;left != nullptr)\n                p = p-&gt;left;\n            return p;\n        }\n        else {\n            while (p-&gt;father != nullptr &amp;&amp; p-&gt;father-&gt;left != p)\n                p = p-&gt;father;\n            if (p-&gt;father == nullptr)\n                return nullptr;\n            else\n                return p-&gt;father;\n        }\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_3","title":"\u65cb\u8f6c\u6570\u7ec4\u7684\u6700\u5c0f\u6570\u5b57","text":"<ul> <li>\u4ece\u540e\u5f80\u524d\u628a\u548c <code>nums[0]</code> \u76f8\u540c\u7684\u5220\u9664</li> <li>\u7279\u5224\u4e00\u4e0b\uff1a\u5982\u679c\u662f\u5b8c\u5168\u5347\u5e8f\u5c31\u8fd4\u56de <code>nums[0]</code></li> <li>\u8fdb\u884c\u4e8c\u5206\u67e5\u627e \u5c0f\u4e8e <code>nums[0]</code> \u7684\u5de6\u7aef\u70b9</li> </ul> <p>\u8f85\u52a9\u9898\u89e3</p> Slove <pre><code>class Solution {\npublic:\n    int findMin(vector&lt;int&gt;&amp; nums) {\n        if(nums.size()==0) return -1;\n        int n=nums.size()-1;\n        while (n&gt;0&amp;&amp;nums[0]==nums[n]) n--;\n        if(nums[n]&gt;=nums[0]) return nums[0];\n\n        int l=0,r=n;\n        while (l&lt;r){\n            int mid=l+r&gt;&gt;1;\n            if(nums[mid]&lt;nums[0]) r=mid;\n            else l=mid+1;\n        }\n        return nums[l];\n    }\n};\n</code></pre> <p>\u4e3e\u4e00\u53cd\u4e09\ud83d\ude0b</p> <p>\u8fd9\u4e2a\u9898\u505a\u5b8c\u4e86\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4</p> <ul> <li>\u5148\u7279\u5224\u4e00\u4e0b\u662f\u4e0d\u662f\u5b8c\u5168\u5347\u5e8f\uff0c\u51b3\u5b9a\u662f\u4e0d\u662f\u76f4\u63a5\u4e8c\u5206</li> <li>\u548c\u4e0a\u4e00\u9898\u4e00\u6837\uff0c\u5148\u627e\u5230\u6700\u5c0f\u503c</li> <li>\u5982\u679c\u76ee\u6807\u503c\u5728\u6700\u5c0f\u503c\u548c\u7ed3\u5c3e\u4e2d\u95f4\u5c31\u4e8c\u5206\uff0c\u53cd\u4e4b\u5728\u53e6\u4e00\u534a\u4e8c\u5206</li> </ul> Solve <pre><code>class Solution {\npublic:\n    int search(vector&lt;int&gt; &amp;nums, int target) {\n\n        if (nums[nums.size() - 1] &gt; nums[0])\n            return bins(nums, 0, nums.size() - 1, target);\n\n        int l = 0, r = nums.size() - 1;\n        while (l &lt; r) {\n            int mid = l + r &gt;&gt; 1;\n            if (nums[mid] &lt; nums[0]) r = mid;\n            else l = mid + 1;\n        }\n        cout &lt;&lt; nums[l] &lt;&lt; endl;\n\n        if (target &gt;= nums[l] &amp;&amp; target &lt; nums[0])\n            return bins(nums, l, nums.size() - 1, target);\n        else\n            return bins(nums, 0, l - 1, target);\n\n    }\n\n    int bins(vector&lt;int&gt; &amp;nums, int l, int r, int target) {\n        while (l &lt; r) {\n            int mid = l + r &gt;&gt; 1;\n            if (nums[mid] &gt;= target)\n                r = mid;\n            else l = mid + 1;\n        }\n        if (nums[l] != target) return -1;\n        else return l;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_4","title":"\u77e9\u9635\u4e2d\u7684\u8def\u5f84","text":"<p>\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u4e0d\u80fd\u8c03\u8fc7\u6765</p> <pre><code>//correct\nif (matrix[x][y] != str[po]) return false;\nif (po == str.size() - 1) return true;\n// wrong\nif (po == str.size()) return true;\nif (matrix[x][y] != str[po]) return false;  \n</code></pre> <p>\u8fd9\u4e2a\u4f8b\u5b50 <code>str=a martix=[a]</code></p> <p>\u7b2c\u4e00\u6b65\u6210\u529f\u4e86\uff0c\u4f46\u662f\u5728\u7ee7\u7eeddfs\u7684\u65f6\u5019\u662f\u4e0d\u80fd\u7ee7\u7eeddfs\u7684\uff0c\u56e0\u4e3a <code>if (!(cx &gt;= 0 &amp;&amp; cx &lt; n &amp;&amp; cy &gt;= 0 &amp;&amp; cy &lt; m)) continue;</code> \u4e0b\u6807\u5168\u90fd\u8d8a\u754c\uff0c\u8fdb\u5165 <code>continue</code> ,\u6ca1\u6cd5\u8fdb\u5165\u9884\u8ba1\u7684 <code>dfs(1)</code></p> Slove <pre><code>class Solution {\npublic:\n    bool hasPath(vector&lt;vector&lt;char&gt;&gt; &amp;matrix, string &amp;str) {\n        if (matrix.size() == 0) return false;\n        bool ff = false;\n\n        int n = matrix.size();\n        int m = matrix[0].size();\n\n        for (int i = 0; i &lt; n; ++i) {\n            for (int j = 0; j &lt; m; ++j) {\n                if (dfs(i, j, 0, str, matrix)) {\n                    ff = true;\n                    break;\n                }\n            }\n        }\n        if (ff) return true;\n        else return false;\n\n    }\n\n    bool dfs(int x, int y, int po, string &amp;str, vector&lt;vector&lt;char&gt;&gt; &amp;matrix) {\n        if (matrix[x][y] != str[po]) return false;\n        if (po == str.size() - 1) return true;\n\n        int dx[4] = {-1, 1, 0, 0};\n        int dy[4] = {0, 0, -1, 1};\n        int n = matrix.size();\n        int m = matrix[0].size();\n\n        char tem = matrix[x][y];\n        matrix[x][y] = '*';\n        for (int i = 0; i &lt; 4; ++i) {\n            int cx = x + dx[i];\n            int cy = y + dy[i];\n            if (!(cx &gt;= 0 &amp;&amp; cx &lt; n &amp;&amp; cy &gt;= 0 &amp;&amp; cy &lt; m)) continue;\n            if (dfs(cx, cy, po + 1, str, matrix))\n                return true;\n        }\n        matrix[x][y] = tem;\n        return false;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#1","title":"\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570","text":"<ol> <li>\u5faa\u73af32\u6b21\uff0c\u6bcf\u6b21\u5224\u65ad\u6700\u4f4e\u4f4d\u662f\u4e0d\u662f1\uff0c\u518d\u53f3\u79fb\u4e00\u4f4d</li> <li>lowbit\u64cd\u4f5c\uff0c\u6c42\u4e00\u6b21 lowbit ,anw++\uff1b \u6570\u5b57-lowbit</li> </ol> \u5faa\u73af32\u6b21lowbit <pre><code>class Solution {\npublic:\nint NumberOf1(int n) {\n\n    int anw=0;\n\n    for(int i=0;i&lt;32;i++){\n        if(n&amp;1) anw++;\n        n&gt;&gt;=1;\n    }\n    return anw;\n}\n};\n</code></pre> <pre><code>class Solution {\npublic:\nint NumberOf1(int n) {\n    int anw=0;\n    while(n!=0){\n        n=n-(n&amp;-n); anw++;\n    }\n    return anw;\n}\n};\n</code></pre>"},{"location":"backend/leetcode/#_5","title":"\u5220\u9664\u94fe\u8868\u4e2d\u91cd\u590d\u7684\u8282\u70b9","text":"<ul> <li>\u6211\u7406\u89e3\u6b64\u9898\u5173\u952e\u5728\u4e8e\u91cd\u590d\u6570\u5b57\u533a\u95f4\u8d77\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u627e\u533a\u95f4\u7684\u8d77\u70b9\uff0c\u4e0d\u65b9\u4fbf\u4fee\u6539\u533a\u95f4\u8d77\u70b9\u524d\u4e00\u4e2a\u7684\u6307\u5411</li> <li>\u4e3a\u4e86\u65b9\u4fbf\u5220\u9664\u5f00\u59cb\u5c31\u6709\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u5728\u5934\u8282\u70b9\u524d\u5f00\u4e00\u4e2a\u5047\u7684\u8282\u70b9 <code>vir</code></li> <li>p\u6307\u5411vir\uff0c\u5f53p\u7684\u4e0b\u4e00\u4e2a\u503c\u662f\u91cd\u590d\u7684\u4e00\u6bb5 <code>[p-&gt;next,lat]</code> \uff0clat\u524d\u8fdb<ul> <li>\u5982\u679c\u91cd\u590d\uff0c <code>p-&gt;next=lat-&gt;next</code> ;\u4f46\u662f\u4e0d\u80fd\u4fdd\u8bc1p\u76f4\u63a5\u8fdb\u5165 <code>p-&gt;next</code> \u540e\u4e0d\u91cd\u590d\u3002<ul> <li>\u53cd\u4f8b\uff1a <code>1, 2, 3, 3, 4, 4, 5</code></li> </ul> </li> <li>\u4e0d\u91cd\u590d\uff0c\u8fd9\u4e2a\u65f6\u5019\u5df2\u7ecf\u4fdd\u8bc1p\uff0cp\u7684\u4e0b\u4e00\u4e2a\uff0cp\u7684\u4e0b\u7b2c\u4e8c\u4e2a\u90fd\u4e0d\u662f\u91cd\u590d\uff0c\u653e\u5fc3\u5927\u80c6\u7684\u5f80\u4e0b\u8fde\u63a5\ud83e\udd70</li> </ul> </li> </ul> Slove <pre><code>class Solution {\npublic:\n    ListNode *deleteDuplication(ListNode *head) {\n        ListNode *vir = new ListNode(-1);\n        vir-&gt;next = head;\n\n        ListNode *p = vir;\n\n        while (p-&gt;next){\n            ListNode* lat=p-&gt;next;\n            while (lat-&gt;next&amp;&amp;lat-&gt;next-&gt;val==p-&gt;next-&gt;val)\n                lat=lat-&gt;next;\n            if(p-&gt;next==lat){\n                p-&gt;next=lat;\n                p=p-&gt;next;\n            }\n            else{\n                p-&gt;next=lat-&gt;next;\n            }\n        }\n        return vir-&gt;next;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_6","title":"\u8c03\u6574\u6570\u7ec4\u987a\u5e8f\u4f7f\u5947\u6570\u4f4d\u4e8e\u5076\u6570\u524d\u9762","text":"<ul> <li>\u53cc\u6307\u9488\uff0c\u4e00\u4e2a\u4ece\u524d\u5f80\u540e\u627e\u5076\u6570\uff0c\u4e00\u4e2a\u4ece\u540e\u5f80\u524d\u627e\u5947\u6570\uff0c\u4e0d\u91cd\u590d\u5c31\u4ea4\u6362\uff0c\u91cd\u590d\u5c31\u9000\u51fa</li> <li>\u8fd8\u5c1d\u8bd5\u7528\u5f52\u5e76\u53bb\u6c42\uff0c\u4f46\u662fTLE\u4e86\uff0c\u539f\u7406\u5e94\u8be5\u662f\u5bf9\u7684,\u8fd8\u80fd\u4fdd\u8bc1\u76f8\u5bf9\u987a\u5e8f<ul> <li>\u628a\u5de6\u533a\u95f4\u7ed3\u5c3e\u7684\u5076\u6570\u548c\u53f3\u533a\u95f4\u7684\u5947\u6570\u8fdb\u884c\u4e92\u6362</li> </ul> </li> </ul> \u53cc\u6307\u9488\uff0c\u5f52\u5e76 <pre><code>class Solution {\npublic:\n    void reOrderArray(vector&lt;int&gt; &amp;array) {\n        if(array.size()==0) return;\n        int l = 0, r = array.size() - 1;\n        while(l&lt;r){\n        while (l &lt; r &amp;&amp; array[l] % 2 !=0) l++;\n        while (l&lt;r&amp;&amp;array[r]%2==0) r--;\n        if(l==r) return;\n        else swap(array[l],array[r]);}\n    }\n\n    vector&lt;int&gt; mergesort(vector&lt;int&gt; &amp;array, int l, int r) {\n        if (l &gt;= r) return array;\n        int mid = l + r &gt;&gt; 1;\n        mergesort(array, 0, mid);\n        mergesort(array, mid + 1, r);\n\n        int i = mid, j = mid + 1;\n        vector&lt;int&gt; tem;\n\n        while (i &gt;= 0 &amp;&amp; j &lt;= r &amp;&amp; array[i] % 2 == 0 &amp;&amp; array[j] % 2 != 0)\n            swap(array[i--], array[j--]);\n        return array;\n\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_7","title":"\u53cd\u8f6c\u94fe\u8868","text":"<p>\u8001\u751f\u5e38\u8c08\u4e86\uff0c\u521a\u5b66\u94fe\u8868\u7684\u65f6\u5019\u53d7\u4e0d\u4e86\u76f4\u63a5\u6295\u964d\ud83d\ude30\u3002\u529b\u6263\u7684\u9012\u5f52\u611f\u89c9\u4e0d\u662f\u4e00\u4e0b\u5c31\u7406\u89e3\u4e86\uff0c\u6211\u8fd9\u4e2a\u5e94\u8be5\u597d\u4e00\u4e9b</p> \u8fed\u4ee3\u9012\u5f52 <pre><code>class Solution {\n    public:\n    ListNode* reverseList(ListNode* head) {\n\n        if(head== nullptr) return head;\n        ListNode* pre= nullptr;\n        while (head!= nullptr){\n            ListNode*lat=head-&gt;next;\n            head-&gt;next=pre;\n            pre=head;\n            head=lat;\n        }\n        return pre;\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    ListNode *reverseList(ListNode *head) {\n\n        if (head == nullptr) return head;\n        return rev(head, nullptr);\n    }\n\n    ListNode *rev(ListNode *head, ListNode *pre) {\n        if (head == nullptr) return pre;\n\n        auto tem = head-&gt;next;\n        head-&gt;next = pre;\n        //\u5148\u4fee\u6539\u5f53\u524d\u7684next\uff0c\u518d\u9012\u5f52\u4e0b\u4e00\u4e2a\n        auto anw = rev(tem, head);\n        return anw;\n\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_8","title":"\u6811\u7684\u5b50\u7ed3\u6784","text":"<p>\u60f3\u51fa\u6765\u4e00\u90e8\u5206\ud83d\ude30</p> Slove <pre><code>class Solution {\npublic:\n    bool hasSubtree(TreeNode *pRoot1, TreeNode *pRoot2) {\n        if (pRoot2 == nullptr || pRoot1 == nullptr) return false;\n        if (check(pRoot1, pRoot2))\n            return true;\n        return hasSubtree(pRoot1-&gt;left, pRoot2) || hasSubtree(pRoot1-&gt;right, pRoot2);\n        //1--p1,p2\u4e3a\u6839\u5c31\u76f8\u540c\n        //2--p1\u7684\u5de6\u5b50\u6811\u91cc\u548cp2\u76f8\u540c\n        //3--p1\u7684\u53f3\u5b50\u6811\u91cc\u548cp2\u76f8\u540c\n    }\n\n    bool check(TreeNode *p1, TreeNode *p2) {\n        if (p2 == nullptr) return true;//\u6761\u4ef6\u6210\u7acb\n        if (p1 == nullptr) return false;//2\u7a7a1\u4e0d\u7a7a\n        if (p1-&gt;val != p2-&gt;val) return false;//12\u90fd\u4e0d\u7a7a\u4e14\u503c\u4e0d\u540c\n        return check(p1-&gt;left, p2-&gt;left) &amp;&amp; check(p1-&gt;right, p2-&gt;right);\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_9","title":"\u5bf9\u79f0\u7684\u4e8c\u53c9\u6811","text":"<p>\u76f4\u63a5\u770b\u4ee3\u7801\u66f4\u597d\u7406\u89e3</p> <ol> <li>\u9012\u5f52\u68c0\u67e5\u4e24\u4e2a\u8282\u70b9a,b\u7684\u503c\uff0ca\u7684\u5de6\u5b50\u6811\u548cb\u7684\u53f3\u5b50\u6811\uff0ca\u7684\u53f3\u5b50\u6811\u548cb\u7684\u5de6\u5b50\u6811\u662f\u5426\u76f8\u540c \ud83d\udc4d\ud83d\udc4d\ud83d\udc4d</li> <li>bfs a,b\u7684\u503c\uff0ca\u7684\u5de6\u5b50\u6811\u548cb\u7684\u53f3\u5b50\u6811\uff0ca\u7684\u53f3\u5b50\u6811\u548cb\u7684\u5de6\u5b50\u6811\u662f\u5426\u76f8\u540c \ud83d\udc4d\ud83d\udc4d</li> <li>bfs \u628a\u4e0b\u4e00\u5c42\u7684\u503c\u5168\u5b58\u8d77\u6765\u770b\u662f\u4e0d\u662f\u5bf9\u79f0 \ud83d\udc4d</li> </ol> \u9012\u5f52bfs\u5de6\u53f3bfs\u5168\u5b58 <pre><code>class Solution {\npublic:\n    bool isSymmetric(TreeNode *root) {\n\n        if (root == nullptr) return true;\n        return dfs(root-&gt;left, root-&gt;right);\n    }\n\n    bool dfs(TreeNode *l1, TreeNode *l2) {\n        if (l1 == nullptr || l2 == nullptr)\n            return l1 == nullptr &amp;&amp; l2 == nullptr;\n        //\u975e\u5e38\u7684\u7cbe\u5999\u554a\n        return l1-&gt;val == l2-&gt;val &amp;&amp; dfs(l1-&gt;left, l2-&gt;right)\n            &amp;&amp; dfs(l1-&gt;right, l2-&gt;left);\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    bool isSymmetric(TreeNode *root) {\n        if (root == nullptr) return true;\n        return bfs(root);\n    }\n\n    bool bfs(TreeNode *root) {\n        queue&lt;TreeNode *&gt; qu;\n        qu.push(root-&gt;left);\n        qu.push(root-&gt;right);\n        while (qu.size()) {\n            TreeNode *left = qu.front();\n            qu.pop();\n            TreeNode *right = qu.front();\n            qu.pop();\n            if (left == nullptr &amp;&amp; right == nullptr)\n                continue;\n            if (left == nullptr &amp;&amp; right != nullptr ||\n                left != nullptr &amp;&amp; right == nullptr ||\n                left-&gt;val != right-&gt;val)\n                return false;\n\n            qu.push(left-&gt;left);\n            qu.push(right-&gt;right);\n            qu.push(left-&gt;right);\n            qu.push(right-&gt;left);\n        }\n        return true;\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    bool isSymmetric(TreeNode *root) {\n        if (root == nullptr) return true;\n        return bfs(root);\n    }\n\n    bool bfs(TreeNode *root) {\n        queue&lt;TreeNode *&gt; qu;\n        qu.push(root);\n        while (qu.size()) {\n            vector&lt;TreeNode *&gt; newqu;\n            while (qu.size()) {\n                auto tem = qu.front();\n                qu.pop();\n                if (tem == nullptr) continue;\n                newqu.push_back(tem-&gt;left);\n                newqu.push_back(tem-&gt;right);\n            }\n\n            for (int i = 0, j = newqu.size() - 1; i &lt; j;) {\n\n                if (newqu[i] == nullptr &amp;&amp; newqu[j] != nullptr\n                    || newqu[i] != nullptr &amp;&amp; newqu[j] == nullptr)\n                    return false;\n                if(newqu[i]== nullptr&amp;&amp;newqu[j]== nullptr) \n                {i++,j--;continue;}\n                if (newqu[i]-&gt;val == newqu[j]-&gt;val) i++, j--;\n                else return false;\n            }\n\n            for (auto x: newqu) {\n                qu.push(x);\n            }\n\n        }\n\n\n        return true;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_10","title":"\u6808\u7684\u538b\u5165\u3001\u5f39\u51fa\u5e8f\u5217","text":"<p>\u9898\u89e3</p> slove <pre><code>class Solution {\npublic:\n    bool isPopOrder(vector&lt;int&gt; pushV,vector&lt;int&gt; popV) {\n        if(pushV.size()!=popV.size()) return false; //\u4e24\u4e2a\u5e8f\u5217\u957f\u5ea6\u4e0d\u7b49\uff0c\u76f4\u63a5\u8fd4\u56defalse\n        int k=0;\n        stack&lt;int&gt;st;\n        for (int i = 0; i &lt; popV.size(); ++i) {\n            while (st.empty()||st.top()!=popV[i]&amp;&amp;k&lt;pushV.size()) \n                st.push(pushV[k++]);\n            if(st.top()==popV[i]) st.pop();\n            else return false;\n        }\n        return st.empty();\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_11","title":"\u5206\u884c\u4ece\u4e0a\u5f80\u4e0b\u6253\u5370\u4e8c\u53c9\u6811","text":"<p>\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u4e00\u4e0b\u672c\u5c42\u5904\u7406\u51e0\u4e2a\u5c31\u597d\u4e86</p> slove <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; printFromTopToBottom(TreeNode *root) {\n\n        vector&lt;vector&lt;int&gt;&gt; anw;\n        if (root == nullptr) return anw;\n        queue&lt;TreeNode *&gt; qu;\n        qu.push(root);\n        while (qu.size()) {\n            vector&lt;int&gt; res;\n            int k = qu.size();\n            while (k--) {\n                auto tem = qu.front();\n                qu.pop();\n                res.push_back(tem-&gt;val);\n                if (tem-&gt;left != nullptr) qu.push(tem-&gt;left);\n                if (tem-&gt;right != nullptr) qu.push(tem-&gt;right);\n            }\n            anw.push_back(res);\n        }\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_12","title":"\u4e8c\u53c9\u6811\u4e2d\u548c\u4e3a\u67d0\u4e00\u503c\u7684\u8def\u5f84","text":"<p>dfs\u601d\u8def\uff0c\u5904\u7406\u672c\u5c42\uff0c\u5224\u65ad\u4e0b\u4e00\u5c42</p> <p>\u4e00\u4e9b\u5c0f\u5751\uff1a</p> <ul> <li>\u6709\u53ef\u80fd \u6ca1\u5230\u7ed3\u5c3e\uff08\u8def\u5f84\u7aef\u70b9\uff09\u65f6\u7ed3\u679c\u5c31\u76f8\u7b49 \uff0c\u4f46\u662f\u8fd9\u4e0d\u662f\u6211\u4eec\u8981\u7684</li> <li>\u5982\u679c\u4f20\u5f15\u7528\u6ce8\u610f\u56de\u590d\u73b0\u573a</li> </ul> \u4f20\u503c\u4f20\u5f15\u7528 <pre><code>class Solution {\npublic:\n\n    vector&lt;vector&lt;int&gt;&gt; anw;\n\n    vector&lt;vector&lt;int&gt;&gt; findPath(TreeNode *root, int sum) {\n        vector&lt;int&gt; tem;\n        dfs(root, 0, sum, tem);\n        return anw;\n    }\n\n    void dfs(TreeNode *root, int now, int sum, vector&lt;int&gt; tem) {\n\n        if (root == nullptr) return;\n\n        now += root-&gt;val;\n        tem.push_back(root-&gt;val);\n        if (now == sum&amp;&amp;root-&gt;left== nullptr&amp;&amp;root-&gt;right== nullptr) {\n            anw.push_back(tem);\n            return;\n        }\n        if (root-&gt;left != nullptr) {\n            dfs(root-&gt;left, now, sum, tem);\n        }\n        if (root-&gt;right != nullptr) {\n            dfs(root-&gt;right, now, sum, tem);\n        }\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n\n    vector&lt;vector&lt;int&gt;&gt; anw;\n\n    vector&lt;vector&lt;int&gt;&gt; findPath(TreeNode *root, int sum) {\n        vector&lt;int&gt; tem;\n        dfs(root, 0, sum, tem);\n        return anw;\n    }\n\n    void dfs(TreeNode *root, int now, int sum, vector&lt;int&gt;&amp; tem) {\n\n        if (root == nullptr) return;\n\n        now += root-&gt;val;\n        tem.push_back(root-&gt;val);\n        if (now == sum&amp;&amp;root-&gt;left== nullptr&amp;&amp;root-&gt;right== nullptr) {\n            anw.push_back(tem);\n            //\u53d6\u6d88\u6389\u6ce8\u91ca\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662fpopback\u4e0d\u80fd\u4e22\n            //\u4e0d\u7136\u65e2\u6ca1\u8fdb\u5165\u6700\u540e\u7684poopback\u4e5f\u6ca1\u56de\u590d\u73b0\u573a\n            // tem.pop_back();\n            // return;\n        }\n\n        dfs(root-&gt;left, now, sum, tem);\n        dfs(root-&gt;right, now, sum, tem);\n        tem.pop_back();\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_13","title":"\u590d\u6742\u94fe\u8868\u7684\u590d\u523b","text":"<p>\u76f4\u63a5\u770b\u89c6\u9891\u9898\u89e3</p> <p>\u8fd9\u662f\u4eba\u80fd\u60f3\u51fa\u6765\u7684\uff1f\ud83d\ude30 \u591a\u590d\u4e60\u590d\u4e60\u5427</p> solve <pre><code>class Solution {\npublic:\n    ListNode *copyRandomList(ListNode *head) {\n\n        if (head == nullptr) return head;\n\n        auto p = head;\n        while (p != nullptr) {\n            ListNode *np = new ListNode(p-&gt;val);\n            auto next = p-&gt;next;\n            np-&gt;next = next;\n            p-&gt;next = np;\n            p = p-&gt;next-&gt;next;\n        }\n\n        p = head;\n        while (p != nullptr) {\n            if (p-&gt;random != nullptr)\n                p-&gt;next-&gt;random = p-&gt;random-&gt;next;\n            p = p-&gt;next-&gt;next;\n        }\n\n        ListNode *vir = new ListNode(-1);\n        p = head;\n        ListNode *cur = vir;\n        while (p != nullptr) {\n            cur-&gt;next = p-&gt;next;\n            p-&gt;next = p-&gt;next-&gt;next;\n            p = p-&gt;next;\n            cur = cur-&gt;next;\n        }\n        return vir-&gt;next;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_14","title":"\u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u53cc\u5411\u94fe\u8868","text":"<p>\u8fd8\u771f\u662f\u4eba\u80fd\u60f3\u51fa\u6765\u7684\uff0c\u6211\u60f3\u4e0d\u51fa\u6765\uff0c\u6240\u4ee5\u6211\u4e0d\u662f\u4eba\u3002 \u591a\u590d\u4e60\u590d\u4e60\u5427</p> slove <pre><code>class Solution {\npublic:\n\n    TreeNode *pre = nullptr;\n\n    TreeNode *convert(TreeNode *root) {\n\n        if (root == nullptr) return nullptr;\n        midread(root);\n        while (root-&gt;left != nullptr)\n            root = root-&gt;left;\n        return root;\n\n    }\n\n    void midread(TreeNode *root) {\n        if (root == nullptr) return;\n        midread(root-&gt;left);\n\n        root-&gt;left = pre;\n        if (pre) pre-&gt;right = root;\n        pre = root;\n\n        midread(root-&gt;right);\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_15","title":"\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570","text":"<p>\u7528\u4e24\u4e2a\u5806\u52a8\u6001\u7ef4\u62a4\u5e8f\u5217\uff0c\u6700\u5927\u5806\u653e\u6bd4\u4e2d\u4f4d\u6570\u5c0f\u7684\u503c\uff0c\u6700\u5c0f\u5806\u653e\u6bd4\u4e2d\u4f4d\u6570\u5927\u7684\u503c\uff0c\u60f3\u6cd5\u5f88\u7cbe\u5999\uff0c\u5b9e\u73b0\u65b9\u6cd5\u4e5f\u6bd4\u8f83\u591a</p> <ul> <li>\u53ef\u4ee5\u5148\u5f80\u6700\u5c0f\u5806\u91cc\u653e\uff0c\u4e5f\u53ef\u4ee5\u5148\u5f80\u6700\u5927\u5806\u91cc\u653e\uff0c\u6211\u8fd9\u4e2a\u5148\u653e\u5230\u6700\u5c0f\u5806</li> <li>\u5982\u679c\u4e24\u4e2a\u5806\u9876\u9006\u5e8f\uff0c\u8c03\u6574\uff0c\u5982\u679c\u6700\u5c0f\u5806\u6570\u91cf==\u6700\u5927\u5806\u6570\u91cf\uff0c\u628a\u6700\u5c0f\u5806\u7684\u5806\u9876\u653e\u5230\u6700\u5927\u5806\u91cc</li> <li>\u53d6\u7684\u65f6\u5019\uff0c\u5982\u679c\u5143\u7d20\u4e2a\u6570\u4e3a\u5947\u6570\uff0c\u53d6\u6700\u5927\u5806\u5806\u9876\uff0c\u5076\u6570\u53d6\u4e24\u4e2a\u5806\u9876\u5e73\u5747\u503c</li> </ul> <p></p> solve <pre><code>class Solution {\npublic:\n    priority_queue&lt;int, vector&lt;int&gt;, greater&lt;&gt;&gt; minheap;\n    priority_queue&lt;int, vector&lt;int&gt;, less&lt;&gt;&gt; maxheap;\n\n    void insert(int num) {\n        minheap.push(num);\n        if (maxheap.size() &amp;&amp; minheap.top() &lt; maxheap.top()) {\n            int minv = minheap.top(), maxv = maxheap.top();\n            minheap.pop(), maxheap.pop();\n            minheap.push(maxv), maxheap.push(minv);\n        }\n        if (minheap.size() &gt; maxheap.size()) {\n            maxheap.push(minheap.top());\n            minheap.pop();\n        }\n\n    }\n\n    double getMedian() {\n        if ((maxheap.size() + minheap.size()) % 2 == 0) {\n            return (maxheap.top() + minheap.top()) / 2.0;\n        }\n        else\n            return maxheap.top();\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_16","title":"\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c","text":"<p>\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u9053\u9898 </p> \u7a7a\u95f4On\u7a7a\u95f4O1 <pre><code>class Solution {\npublic:\n    int maxSubArray(vector&lt;int&gt;&amp; nums) {\n\n        vector&lt;int&gt;anw(nums.size());\n        anw[0]=nums[0];\n        for (int i = 1; i &lt;nums.size(); ++i) {\n            if(nums[i]+anw[i-1]&gt;nums[i]) anw[i]=nums[i]+anw[i-1];\n            else anw[i]=nums[i];\n        }\n        return *max_element(anw.begin(), anw.end());\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    int maxSubArray(vector&lt;int&gt;&amp; nums) {\n\n        vector&lt;int&gt;anw(nums.size());\n        int pre=nums[0];\n        int fin=nums[0];\n        for (int i = 1; i &lt;nums.size(); ++i) {\n            if(pre&gt;0) pre+=nums[i];\n            else pre=nums[i];\n            fin= max(fin,pre);\n        }\n        return fin;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#12n","title":"\u6c421+2+\u2026+n","text":"<p>\u77ed\u8def\u6216\u8005\u5f00\u7a7a\u95f4\uff0c\u5f00\u7a7a\u95f4\u771f\u662f \u5927\u53d7\u9707\u64bc.jpg</p> \u77ed\u8def\u5f00\u7a7a\u95f4 <pre><code>class Solution {\npublic:\n    int getSum(int n) {\n        (n&gt;0)&amp;&amp;(n+= getSum(n-1));\n        return n;\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    int getSum(int n) {\n        char x[n][n+1];\n        return sizeof(x)&gt;&gt;1;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_17","title":"\u628a\u6570\u7ec4\u6392\u6210\u6700\u5c0f\u7684\u6570","text":"<p>\u4e0d\u597d\u89e3\u91ca</p> slove <pre><code>class Solution {\npublic:\n    string printMinNumber(vector&lt;int&gt; &amp;nums) {\n        string anw;\n        if (nums.size() == 0) return anw;\n        sort(nums.begin(), nums.end(), [](int a, int b) {\n            if (to_string(a) + to_string(b) &lt; to_string(b) + to_string(a))\n                return true;\n            else return false;\n        });\n        for(int  x:nums){\n            anw+= to_string(x);\n        }\n        return anw;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_18","title":"\u628a\u6570\u5b57\u7ffb\u8bd1\u6210\u5b57\u7b26\u4e32","text":"<p>\u8fd9\u4e2a\u8fd8\u597d\uff0c\u6700\u5f00\u59cb\u60f3\u7684\u662fdfs\u5904\u7406\uff0c\u770b\u9898\u89e3\u540e\u53d1\u73b0\u8fd8\u53ef\u4ee5\u7528\u8df3\u53f0\u9636\u505a\u3002 \u90fd\u5dee\u4e0d\u591a\ud83d\ude0b</p> dfsdp <pre><code>class Solution {\npublic:\n\n    int getTranslationCount(string s) {\n        int anw = dfs(s, 0);\n        return anw;\n    }\n\n    int dfs(string s, int po) {\n        if (po &gt;= s.size()) return 1;\n        int cnt = 0;\n        cnt += dfs(s, po + 1);\n\n        if (po + 1 &lt; s.size() &amp;&amp; ((s[po] - '0') * 10 + (s[po + 1] - '0') &lt;= 25)\n            &amp;&amp; (s[po] - '0') * 10 + (s[po + 1] - '0') != (s[po + 1] - '0')\n                )\n            cnt += dfs(s, po + 2);\n        return cnt;\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    int getTranslationCount(string s) {\n\n        vector&lt;int&gt; dp(s.size() + 1, 0);\n        dp[0] = 1;\n        if (s.size() == 1) return dp[0];\n        dp[1] = 1;\n        for (int i = 2; i &lt;= s.size(); ++i) {\n            dp[i] = dp[i - 1];\n            int a = s[i - 2] - '0', b = s[i - 1] - '0';\n            if (a != 0 &amp;&amp; a * 10 + b &lt;= 25)\n                dp[i] += dp[i - 2];\n        }\n\n        return dp[s.size()];\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_19","title":"\u793c\u7269\u7684\u6700\u5927\u4ef7\u503c","text":"<ul> <li>dfs\u65f6\u95f4\u8d85\u4e86\uff0c\u7528dp</li> <li><code>grid[i][j]</code> \u7528\u8fc7\u4e4b\u540e\u5c31\u6ca1\u7528\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u5b58\u7ed3\u679c\uff0c\u8282\u7701\u4e00\u70b9\u7a7a\u95f4</li> </ul> \u4e0d\u989d\u5916\u7a7a\u95f4 <pre><code>class Solution {\npublic:\n    int getMaxValue(vector&lt;vector&lt;int&gt;&gt;&amp; grid) {\n\n        int m=grid.size(),n=grid[0].size();\n        for (int i = 0; i &lt; m; ++i) {\n            for (int j = 0; j &lt; n; ++j) {\n                if(i&amp;&amp;j) grid[i][j]+= max(grid[i-1][j],grid[i][j-1]);\n                else if(i) grid[i][j]+=grid[i-1][j];\n                else if(j) grid[i][j]+=grid[i][j-1];\n            }\n        }\n        return grid[m-1][n-1];\n    }\n};\n</code></pre> \u989d\u5916\u7a7a\u95f4 <pre><code>class Solution {\npublic:\n    int getMaxValue(vector&lt;vector&lt;int&gt;&gt; &amp;grid) {\n        int m = grid.size(), n = grid[0].size();\n\n        vector&lt;vector&lt;int&gt;&gt; dp(grid.size() + 1,\n                            vector&lt;int&gt;(grid[0].size() + 1,0));\n        for (int i = 0; i &lt;= m; ++i)\n            dp[m][0] = 0;\n        for (int i = 0; i &lt;= n; ++i) {\n            dp[0][n] = 0;\n        }\n\n        for (int i = 1; i &lt;= m; ++i) {\n            for (int j = 1; j &lt;= n; ++j) {\n                dp[i][j] = max(dp[i][j - 1], dp[i - 1][j]) + grid[i - 1][j - 1];\n            }\n        }\n        return dp[m][n];\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_20","title":"\u6700\u957f\u4e0d\u542b\u91cd\u590d\u5b57\u7b26\u7684\u5b50\u5b57\u7b26\u4e32","text":"<ul> <li>\u63a8\u8350\u65b9\u6cd5\uff1a\u53cc\u6307\u9488+\u54c8\u5e0c\u8868</li> <li>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff1a dp\u89e3\u91ca</li> </ul> \u53cc\u6307\u9488dp <pre><code>class Solution {\npublic:\n    int longestSubstringWithoutDuplication(string s) {\n        if(s.empty()) return 0;\n        int anw=1;\n        unordered_map&lt;char,int&gt;map;\n        for (int l = 0,r=0; r &lt; s.size(); ++r) {\n            map[s[r]]++;\n            while (map[s[r]]&gt;1){\n                map[s[l++]]--;\n            }\n            anw= max(anw,r-l+1);\n        }\n        return anw;\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    int longestSubstringWithoutDuplication(string s) {\n        if (s.empty()) return 0;\n        int anw = 1;\n        vector&lt;int&gt; dp(s.size());\n        unordered_map&lt;char, int&gt; map;\n        for (int i = 0; i &lt; s.size(); ++i) {\n            if (i == 0) {\n                map[s[i]] = 0;\n                dp[0] = 1;\n                anw = 1;\n                continue;\n            }\n            int last = map[s[i]];\n            if (map[s[i]] == 0 &amp;&amp; s[0] != s[i])\n                dp[i] = dp[i - 1] + 1;\n            else\n                dp[i] = min(dp[i - 1] + 1, i - last);\n            anw = max(anw, dp[i]);\n            map[s[i]] = i;\n        }\n        return anw;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#0n-1","title":"0\u5230n-1\u4e2d\u7f3a\u5931\u7684\u6570\u5b57","text":"<p>\u4e8c\u5206 \u7279\u5f81 <code>f[i]=i</code> <code>f[i]!=i</code></p> \u67e5\u540e\u9762\u7684 <pre><code>class Solution {\npublic:\n    int getMissingNumber(vector&lt;int&gt; &amp;nums) {\n        if(nums.size()==0) return 0;\n        return midsearch(nums, 0, nums.size() - 1);\n    }\n\n    int midsearch(vector&lt;int&gt; nums, int l, int r) {\n        while (l &lt; r) {\n            int val=nums[l+r&gt;&gt;1];\n            int idx=l+r&gt;&gt;1;\n            if(val&gt;idx) r=idx;\n            else l=idx+1;\n        }\n        if(nums[l]==l) return l+1;\n        return l;\n    }\n};\n</code></pre> \u67e5\u524d\u8fb9\u7684 <pre><code>class Solution {\npublic:\n    int getMissingNumber(vector&lt;int&gt; &amp;nums) {\n        if(nums.size()==0) return 0;\n        if(nums.size()==1) return 1;\n        return midsearch(nums, 0, nums.size() - 1);\n    }\n\n    int midsearch(vector&lt;int&gt; nums, int l, int r) {\n        while (l &lt; r) {\n            int val=nums[l+r+1&gt;&gt;1];\n            int idx=l+r+1&gt;&gt;1;\n            if(idx==val) l=idx;\n            else r=idx-1;\n        }\n        if(l==0) return 0;\n        return l+1;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#k","title":"\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u4e2a\u7ed3\u70b9","text":"<p>dfs\u65f6\u8fdb\u884c\u8ba1\u6570</p> dfs <pre><code>class Solution {\npublic:\n    TreeNode *kthNode(TreeNode *root, int k) {\n        dfs(root, k);\n        return anw;\n    }\n\n    TreeNode *anw = nullptr;\n\n    void dfs(TreeNode *root, int &amp;k) {\n        if (root == nullptr) return;\n        dfs(root-&gt;left, k);\n        k--;\n        if (k == 0) {\n            anw = root;\n            return;\n        }\n        dfs(root-&gt;right, k);\n\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_21","title":"\u6570\u7ec4\u4e2d\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u4e24\u4e2a\u6570\u5b57","text":"<p>\u5076\u6570\u4e2a\u76f8\u540c\u7684\u6570\u5b57\u8fdb\u884c\u5f02\u6216\u6216\u7b49\u4e8e0\uff0c0\u5f02\u6216a\u7b49\u4e8ea</p> <ul> <li>\u5148\u8fdb\u884c\u5168\u90e8\u5f02\u6216 <code>anw=x^y</code></li> <li>\u56e0\u4e3a <code>x!=y</code> \u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u67d0\u4e00\u4f4d\uff08\u5047\u5b9a\u4e3ak\u4f4d\uff09\u4e0a\u7684\u6570\u5b57\u4e24\u8005\u4e0d\u540c</li> <li>\u5c31\u53ef\u4ee5\u5206\u6210\u4e24\u7c7b\uff0ck\u4f4d\u662f1\uff0ck\u4f4d\u662f0\uff0c \u6210\u5bf9\u7684\u6570\u5b57\u4e0d\u7ba1\u5206\u5728\u54ea\u4e00\u7c7b\u8fdb\u884c\u5f02\u6216\u540e\u90fd\u662f0</li> <li>\u5206\u522b\u5f02\u6216\u5c31\u884c\u4e86</li> </ul> \u5f02\u6216 <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; findNumsAppearOnce(vector&lt;int&gt; &amp;nums) {\n\n        int anw = 0;\n        for (int i = 0; i &lt; nums.size(); ++i) {\n            anw = anw ^ nums[i];\n        }\n\n        int k = 0;\n        while ((anw &gt;&gt; k &amp; 1) == 0) { k++; }\n\n        int t = 0;\n        for (int i = 0; i &lt; nums.size(); ++i) {\n            if ((nums[i] &gt;&gt; k &amp; 1) == 1) t = t ^ nums[i];\n        }\n        vector&lt;int&gt; res;\n        res.push_back(anw ^ t);\n        res.push_back(t);\n        return res;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_22","title":"\u6570\u7ec4\u4e2d\u552f\u4e00\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57","text":"<p>\u5728\u4e00\u4e2a\u6570\u7ec4\u4e2d\u9664\u4e86\u4e00\u4e2a\u6570\u5b57\u53ea\u51fa\u73b0\u4e00\u6b21\u4e4b\u5916\uff0c\u5176\u4ed6\u6570\u5b57\u90fd\u51fa\u73b0\u4e86\u4e09\u6b21\u3002</p> <p>\u8bf7\u627e\u51fa\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u3002</p> <ol> <li>int 32\u4f4d\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u51fa\u73b03\u6b21\uff0c\u90a3\u4e48\u4ed6\u7684\u6bcf\u4e00\u4f4d\u90fd\u51fa\u73b03\u6b21</li> <li>\u628a\u6240\u6709\u6570\u7684\u6bcf\u4e00\u4f4d\u90fd\u7edf\u8ba1\u4e00\u4e0b\uff0c\u5982\u679c\u662f3\u7684\u500d\u6570\uff0c\u90a3\u8981\u6c42\u7684\u7b54\u6848\u5728\u8fd9\u4e00\u4f4d\u4e0a\u662f0\uff0c\u5426\u5219\u4e3a1</li> </ol> solve <pre><code>class Solution {\npublic:\n    int findNumberAppearingOnce(vector&lt;int&gt; &amp;nums) {\n\n        int cnt[32] = {0};\n        for (int i = 0; i &lt; nums.size(); ++i) {\n            int x = nums[i];\n            for (int j = 0; j &lt; 32; ++j) {\n                cnt[j] += (x &gt;&gt; j &amp; 1);\n            }\n        }\n        int anw = 0;\n        for (int i = 31; i &gt;= 0; i--) {\n            anw = anw &lt;&lt; 1;\n            if (cnt[i] % 3)\n                anw += 1;\n        }\n        return anw;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#s","title":"\u548c\u4e3aS\u7684\u8fde\u7eed\u6b63\u6570\u5e8f\u5217","text":"<ol> <li>\u8d77\u59cb\u6570\u5b57a,\u957f\u5ea6n <code>(a&gt;=1,n&gt;=2) (a+a+n-1)*n/2 =x</code> \uff0c\u89e3\u65b9\u7a0b</li> <li>\u53cc\u6307\u9488\u7684\u6ed1\u52a8\u7a97\u53e3</li> </ol> \u89e3\u65b9\u7a0b\u6ed1\u52a8\u7a97\u53e3 <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt; &gt; findContinuousSequence(int sum) {\n\n        if (sum &lt; 3) return vector&lt;vector&lt;int&gt;&gt;{};\n        vector&lt;vector&lt;int&gt;&gt; res;\n        for (int n = 2; n * (n + 1) / 2 &lt;= sum; n++) {\n            vector&lt;int&gt; anw;\n            if (2 * sum % n == 0 &amp;&amp; (2 * sum / n - n + 1) % 2 == 0) {\n                int a = (2 * sum / n - n + 1) / 2;\n                for (int i = a; i &lt; n + a; ++i) {\n                    anw.push_back(i);\n                }\n                res.push_back(anw);\n            }\n        }\n        return res;\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt; &gt; findContinuousSequence(int sum) {\n        vector&lt;vector&lt;int&gt;&gt; res;\n\n        for (int l = 1, r = 2, total = 3; l &lt;= sum / 2 + 1; l++) {\n            while (total &lt; sum)\n                r++, total += r;\n            if (total == sum) {\n                vector&lt;int&gt; anw;\n                for (int k = l; k &lt;= r; k++)\n                    anw.push_back(k);\n                res.push_back(anw);\n                total -= l;\n            }\n            else\n                total -= l;\n            //\u53ef\u4ee5\u628a\u4e0a\u8fb9\u4e24\u53e5\u5408\u8d77\u6765\n        }\n        return res;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_23","title":"\u5de6\u65cb\u8f6c\u5b57\u7b26\u4e32","text":"<ol> <li>substr(beginPosi,cnt) <code>str.substr(n)+str.substr(0,n);</code></li> <li>\u53cd\u8f6c\u524d\u4e00\u90e8\u5206\uff0c\u53cd\u8f6c\u540e\u4e00\u90e8\u5206\uff0c\u5168\u90e8\u53cd\u8f6c \\({(a^{-1}b^{-1})}^{-1} =ba\\)</li> </ol>"},{"location":"backend/leetcode/#_24","title":"\u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u5927\u503c","text":"<p>\u7a97\u53e3\u91cc\u6bd4\u65b0\u8fdb\u6765\u5c0f\u7684\u6570\u90fd\u6ca1\u6709\u7528\u4e86\uff0c\u5355\u8c03\u961f\u5217 \u9898\u89e3</p> <p>\u53ef\u8bfb\u6027\u5f3a\u7684\u9898\u89e3</p> \u53ef\u8bfb\u6027\u5f3a\u53ef\u8bfb\u6027\u4e0d\u5f3a <pre><code>class mydeque {\n    deque&lt;int&gt; que;\n\npublic:\n    void push(int val) {\n        while (!que.empty() &amp;&amp; val &gt; que.back())\n            que.pop_back();\n        que.push_back(val);\n    }\n\n    void pop(int val) {\n        if (!que.empty() &amp;&amp; que.front() == val)\n            que.pop_front();\n    }\n\n    int get() {\n        return que.front();\n    }\n};\n\nclass Solution {\npublic:\n    vector&lt;int&gt; maxInWindows(vector&lt;int&gt;&amp; nums, int k) {\n        vector&lt;int&gt; res;\n        mydeque que;\n        for (int i = 0; i &lt; k; i++)\n            que.push(nums[i]);\n\n        res.push_back(que.get());\n\n        for (int i = k; i &lt; nums.size(); i++) {\n            que.pop(nums[i - k]);\n            que.push(nums[i]);\n            res.push_back(que.get());\n        }\n        return res;\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; maxInWindows(vector&lt;int&gt;&amp; nums, int k) {\n\n        vector&lt;int&gt;anw;\n        deque&lt;int&gt;qu;\n        for (int i = 0; i &lt; nums.size(); ++i) {\n            if (!qu.empty() &amp;&amp; i - qu.front() &gt;= k) qu.pop_front();\n            while (!qu.empty() &amp;&amp; nums[i] &gt; nums[qu.back()]) qu.pop_back();\n            qu.push_back(i);\n            if (i &gt;= k - 1) anw.push_back(nums[qu.front()]);\n        }\n        return anw;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_25","title":"\u9ab0\u5b50\u7684\u70b9\u6570","text":"<p>\u5047\u8bbe <code>f[i][j]</code> \u8868\u793a\u7b2ci\u6b21\u6295\uff0c\u603b\u70b9\u6570\u4e3aj\uff0c\u53ef\u4ee5\u4ece\u4e0a\u4e00\u6b21\u7684\u603b\u70b9\u6570+1,+2...+6\uff0c\u5373 <code>f[i][j]=f[i-1][j-k]  1&lt;=j-k</code></p> n2 1-6n2 \u53e6\u4e00\u79cdOn <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; numberOfDice(int n) {\n\n        vector&lt;int&gt; anw;\n        vector&lt;vector&lt;int&gt;&gt; dp(n + 1, vector&lt;int&gt;(6 * n + 6, 0));\n\n        for (int i = 1; i &lt;= 6; i++)\n            dp[1][i] = 1;\n\n        for (int i = 2; i &lt;= n; i++) {\n            for (int j = i; j &lt;= 6 * i; ++j) {\n                for (int k = 1; k &lt;= 6; k++)\n                    if (j - k &gt; 0)\n                        dp[i][j] += dp[i - 1][j - k];\n            }\n        }\n\n        for (int i = n; i &lt;= 6 * n; i++)\n            anw.push_back(dp[n][i]);\n        return anw;\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; numberOfDice(int n) {\n\n        vector&lt;int&gt; anw;\n\n        vector&lt;vector&lt;int&gt;&gt; dp(n + 1, vector&lt;int&gt;(6 * n + 6, 0));\n\n        for (int i = 1; i &lt;= 6; i++)\n            dp[1][i] = 1;\n\n\n        for (int i = 2; i &lt;= n; i++) {\n            for (int j = i; j &lt;= 6 * i; ++j) {\n                for (int k = j - 6; k &lt;= j - 1; k++)\n                    if (k &gt;= i - 1 &amp;&amp; k &lt;= 6 * (i - 1))\n                        dp[i][j] += dp[i - 1][k];\n\n            }\n\n        }\n\n        for (int i = n; i &lt;= 6 * n; i++)\n            anw.push_back(dp[n][i]);\n        return anw;\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; numberOfDice(int n) {\n\n        vector&lt;int&gt; anw;\n        vector&lt;int&gt; dp(6 * (n + 1), 0);\n\n        for (int i = 1; i &lt;= 6; i++)\n            dp[i] = 1;\n\n\n        for (int i = 2; i &lt;= n; i++) {\n            for (int j = i * 6; j &gt;= i; --j) {\n                dp[j]=0;\n                for (int k = j - 6; k &lt;= j - 1; k++)\n                    if (k &gt;= i - 1 &amp;&amp; k &lt;= 6 * (i - 1))\n                        dp[j] += dp[k];\n\n            }\n        }\n\n        for (int i = n; i &lt;= 6 * n; i++)\n            anw.push_back(dp[i]);\n        return anw;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_26","title":"\u6251\u514b\u724c\u7684\u987a\u5b50","text":"<ol> <li>\u9664\u4e860\u4ee5\u5916\u4e0d\u80fd\u51fa\u73b0\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u5b57\uff1b</li> <li>\u6392\u5e8f\u540e\u4e24\u4e2a\u76f8\u90bb\u6570\u5b57\u7684\u5dee\u503c\u4e0d\u80fd\u5927\u4e8e0\u7684\u4e2a\u6570\u3002</li> </ol> solve <pre><code>class Solution {\npublic:\n    bool isContinuous(vector&lt;int&gt; nums) {\n\n        if (nums.size() == 0) return false;\n        int cnt = 0;\n        std::sort(nums.begin(), nums.end());\n\n        for (int i = 0; i &lt; nums.size() - 1; ++i) {\n            if (nums[i] == 0) {\n                cnt++;\n                continue;\n            }\n            if (nums[i] == nums[i + 1]) return false;\n            if (nums[i + 1] - nums[i] &gt; 1) {\n                cnt -= (nums[i + 1] - nums[i] - 1);\n                if (cnt &lt; 0) return false;\n            }\n        }\n        return true;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_27","title":"\u5706\u5708\u4e2d\u6700\u540e\u5269\u4e0b\u7684\u6570\u5b57","text":"<p>\u7ea6\u745f\u592b\u73af\u95ee\u9898\uff0c \u7701\u6d41\u7248 \uff0c \u8be6\u7ec6\u7248</p> solve <pre><code>class Solution {\npublic:\n    int lastRemaining(int n, int m) {\n\n        if (n == 1) return 0;\n        int anw = 0;\n        for (int i = 2; i &lt;= n; i++)\n            anw = (anw + m) % i;\n        return anw;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#1_1","title":"\u4e70\u5356\u80a1\u79681\uff1a\u80a1\u7968\u7684\u6700\u5927\u5229\u6da6","text":"<p>\u6c42 <code>a[j]-a[i] j&gt;i</code> \u7684\u6700\u5927\u503c\uff0c\u52a8\u6001\u7ef4\u62a4\u6700\u5c0f\u503c <code>buy</code></p> solve <pre><code>class Solution {\npublic:\n    int maxDiff(vector&lt;int&gt;&amp; nums) {\n\n        if(nums.size()==0) return 0;\n        int anw=0;\n        int buy=nums[0];\n        for(int i=1;i&lt;nums.size();i++){\n            if(nums[i]&lt;buy) buy=nums[i];\n            if(nums[i]&gt;buy) anw= max(anw,nums[i]-buy);\n        }\n        return anw;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_28","title":"\u6784\u5efa\u4e58\u79ef\u6570\u7ec4","text":"<ul> <li>\u4e0d\u8ba9\u7528\u9664\u6cd5\uff0c\u4e00\u79cd\u65b9\u6cd5\u662f\u5bf9\u6bcf\u4e2a\u6570\u5168\u4e58\u4e00\u6b21\uff0c\u7ed3\u679c\u662f \\(O(n^2)\\)</li> <li>\u53ef\u4ee5\u5206\u6210 <code>a[0]..a[i-1]</code> <code>a[i+1]..a[n-1]</code> \u524d\u4e00\u90e8\u5206\u548c\u540e\u4e00\u90e8\u5206\uff0c <code>anw[i]=left[i]*right[i]</code> \u3002</li> <li>\u5982\u679c\u4e0d\u989d\u5916\u7528 \\(O(n)\\) \u7a7a\u95f4\uff0c\u53ef\u4ee5\u5148\u5904\u7406\u540e\u7f00\uff0c\u518d\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u524d\u7f00\u4e58\u79ef\uff0c <code>anw[i]=left*right[i]</code></li> </ul> On\u7a7a\u95f4\u540e\u7f00\u524d\u7f00 <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; multiply(const vector&lt;int&gt; &amp;nums) {\n\n        vector&lt;int&gt; anw(nums.size());\n        vector&lt;int&gt; left(nums.size(), 1);\n        vector&lt;int&gt; right(nums.size(), 1);\n        for (int i = 1; i &lt; nums.size(); ++i) {\n            left[i] *= nums[i - 1] * left[i - 1];\n        }\n        for (int i = nums.size() - 2; i &gt;= 0; --i) {\n            right[i] *= nums[i + 1] * right[i + 1];\n        }\n        for (int i = 0; i &lt; nums.size(); ++i) {\n            anw[i] = left[i] * right[i];\n        }\n        return anw;\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; multiply(const vector&lt;int&gt; &amp;nums) {\n\n        vector&lt;int&gt; right(nums.size(), 1);\n        for (int i = nums.size() - 2; i &gt;= 0; i--)\n            right[i] = right[i + 1] * nums[i + 1];\n        int pre = 1;\n        for (int i = 0; i &lt; nums.size() ; i++) {\n            right[i] = pre * right[i];\n            pre *= nums[i];\n        }\n        return right;\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; multiply(const vector&lt;int&gt; &amp;nums) {\n\n        vector&lt;int&gt; left(nums.size(), 1);\n        int right = 1;\n        for (int i = 1; i &lt; nums.size(); i++)\n            left[i] *= left[i - 1] * nums[i - 1];\n        for (int i = nums.size() - 2; i &gt;= 0; i--) {\n            right *= nums[i + 1];\n            left[i] *= right;\n        }\n        return left;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_29","title":"\u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570","text":"<p>\u5148\u5728\u6700\u540e\u52a0\u4e00\u4e2a\u522b\u7684\u5b57\u6bcd\uff0c\u8282\u7701\u5224\u65ad\u6761\u4ef6</p> <pre><code>```cpp\nclass Solution {\npublic:\n    int strToInt(string str) {\n        if (str.size() == 0) return 0;\n        str += 'g';\n        int idx = 0;\n        long anw = 0;\n        bool ff = false;\n        while (str[idx] == ' ') idx++;\n        if (str[idx] == '-') ff = true, idx++;\n        if (str[idx] == '+') idx++;\n\n        for (int i = idx; i &lt; str.size(); ++i) {\n            if (str[i] &lt; '0' || str[i] &gt; '9')\n                break;\n            anw *= 10;\n            anw += str[i] - '0';\n            if (anw &gt; INT_MAX &amp;&amp; !ff) return INT_MAX;\n            if (ff &amp;&amp; (0 - anw) &lt; INT_MIN) return INT_MIN;\n        }\n        if (ff) anw = 0 - anw;\n        return anw;\n    }\n};\n```\n</code></pre>"},{"location":"backend/leetcode/#_30","title":"\u4e0d\u7528\u52a0\u51cf\u4e58\u9664\u505a\u52a0\u6cd5","text":"<ol> <li>\u4ece\u4e00\u4f4d\u5168\u52a0\u5668\u5165\u624b <code>anw=a^b^c cin=a&amp;b|a&amp;c|b&amp;c</code></li> <li>\u5f02\u6216+\u8fdb\u4f4d</li> </ol> \u5168\u52a0\u5668 \u672a\u4f18\u5316\u7248\u5168\u52a0\u5668 \u4f18\u5316\u7248\u5f02\u6216+\u8fdb\u4f4d <pre><code>class Solution {\npublic:\n    int add(int num1, int num2) {\n        stack&lt;int&gt; st;\n        int a, b, c;\n        c = 0;\n        for (int i = 0; i &lt; 32; i++) {\n            a = num1 &gt;&gt; i &amp; 1;\n            b = num2 &gt;&gt; i &amp; 1;\n            st.push(a ^ b ^ c);\n            c = a &amp; b | a &amp; c | b &amp; c;\n        }\n        int anw = 0;\n        while (!st.empty()) {\n            anw = anw &lt;&lt; 1;\n            anw += st.top();\n\n            st.pop();\n        }\n        return anw;\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    int add(int num1, int num2) {\n\n        int a, b, c;\n        c = 0;\n        int anw=0;\n        for (int i = 0; i &lt; 32; i++) {\n            a = num1 &gt;&gt; i &amp; 1;\n            b = num2 &gt;&gt; i &amp; 1;\n            anw|=((a^b^c)&lt;&lt;i);\n            c = (a &amp; b | a &amp; c | b &amp; c);\n        }\n\n        return anw;\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    int add(int num1, int num2){\n        while(num2!=0){\n            int sum = num1 ^ num2;//\u4e0d\u8fdb\u4f4d\u7684\u52a0\u6cd5\n            int carry = (num1 &amp; num2)&lt;&lt;1;//\u8fdb\u4f4d\n            num1 = sum;\n            num2 = carry;\n        }\n        return num1;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_31","title":"\u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570","text":"solve <pre><code>class Solution {\npublic:\n    int strToInt(string str) {\n        if (str.size() == 0) return 0;\n        str += 'g';\n        int idx = 0;\n        long anw = 0;\n        bool ff = false;\n        while (str[idx] == ' ') idx++;\n        if (str[idx] == '-') ff = true, idx++;\n        if (str[idx] == '+') idx++;\n\n        for (int i = idx; i &lt; str.size(); ++i) {\n            if (str[i] &lt; '0' || str[i] &gt; '9')\n                break;\n            anw *= 10;\n            anw += str[i] - '0';\n            if (anw &gt; INT_MAX &amp;&amp; !ff) return INT_MAX;\n            if (ff &amp;&amp; (0 - anw) &lt; INT_MIN) return INT_MIN;\n        }\n        if (ff) anw = 0 - anw;\n        return anw;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_32","title":"\u6570\u5b57\u5e8f\u5217\u4e2d\u67d0\u4e00\u4f4d\u7684\u6570\u5b57","text":"<p>\u7528\u51cf\u6cd5\u6bd4\u8f83\u597d\uff0c\u52a0\u6cd5\u4e00\u65b9\u9762\u4e0d\u597d\u627e\u5bf9\u5e94\u539f\u59cb\u6570\u5b57\uff0c\u4e00\u65b9\u9762\u8fd8\u8981\u62c5\u5fc3\u7206int</p> <p>\u6838\u5fc3\u601d\u60f3 \uff1a\u5224\u65ad\u662f\u51e0\u4f4d\u6570\uff0c\u627e\u539f\u59cb\u6570\u5b57\uff0c\u627e\u5230\u539f\u59cb\u6570\u5b57\u7684\u54ea\u4e00\u4f4d</p> <ul> <li>[0-9]\u670910\u4f4d\u6570\uff0c[10-99]\u6709 <code>90*2</code> \u4f4d\uff0c[100-999]\u6709 <code>900*3</code> \u4f4d</li> <li>\u5982\u679c <code>n&gt;cnt</code> ,\u8bf4\u660e\u4e0d\u5728\u8fd9\u4e00\u6bb5\u91cc\u3002<ul> <li>eg\uff1a13&gt;9,13-9=4&lt;180\uff0c\u5728\u7b2c\u4e8c\u6bb5\u91cc\u7684\u7b2c\u56db\u4f4d</li> <li>\u4ece10\u5f00\u59cb\uff0c\u4ece1\u8ba1\u6570\uff0c\u5c31\u662fn=1,x=1; n=2,x=0; n=3,x=1...</li> </ul> </li> <li><code>anw=pow(10,i-1)+(n-1)/i</code> \u8fd9\u4e2a\u5730\u65b9\u76f8\u5f53\u4e8e\u628a\u4ece1\u5f00\u59cb\u8ba1\u6570\u53d8\u6210\u4ece0\u5f00\u59cb\u8ba1\u6570\uff0c\u8fd9\u6837\u65b9\u4fbf\u5224\u65ad\u662f\u54ea\u4e00\u4f4d\uff0c\u5373\u4f7f\u53d6\u6a21\u4e5f\u975e\u5e38\u65b9\u4fbf\uff0c</li> <li>\u53d6\u6a21\u5224\u65ad\u53f3\u79fb\u6b21\u6570\uff0c\u6700\u540e\u6a21\u4e0a10\u5c31\u662f\u7b54\u6848</li> </ul> <p>\u4e0a\u53d6\u6574\uff1a </p> <ol> <li> \\[ \\begin{aligned} x &amp;=(a-1)/b+1 \\\\ x &amp;=(a+b-1)/b \\end{aligned} \\] </li> <li>ceil(x)</li> </ol> solve <pre><code>class Solution {\npublic:\n    int digitAtIndex(int n) {\n        long long anw = 0, i = 1, cnt = 9;\n        while (n &gt; cnt) {\n            n -= cnt;\n            cnt = 9 * pow(10, i) * (i + 1);\n            i++;\n        }\n        anw = (n - 1) / i + pow(10, i - 1);\n        int po = (n - 1) % i;\n        while (i - po - 1 &gt; 0) {\n            anw /= 10;\n            i--;\n        }\n        return anw % 10;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#leetcode","title":"leetcode","text":""},{"location":"backend/leetcode/#232","title":"232 \u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217","text":"<p>push \u7684\u65f6\u5019\u597d\u8bf4\uff0c\u5728 pop \u7684\u65f6\u5019\u6ca1\u6709\u5fc5\u8981\u5168\u5012\u817e\uff0c\u53ea\u6709\u5728\u8f93\u51fa\u6808\u4e3a\u7a7a\u7684\u65f6\u5019\u518d\u5012\u817e\u5c31\u884c\u4e86</p> solve <pre><code>class MyQueue {\nprivate:\n    stack&lt;int&gt; inSt;\n    stack&lt;int&gt; outSt;\npublic:\n    MyQueue() {\n    }\n\n    void push(int x) {\n        inSt.push(x);\n    }\n\n    int pop() {\n        if (outSt.empty()) {\n            while (!inSt.empty()) {\n                outSt.push(inSt.top());\n                inSt.pop();\n            }\n        }\n        int x = outSt.top();\n        outSt.pop();\n        return x;\n    }\n\n    int peek() {\n        if (outSt.empty()) {\n            while (!inSt.empty()) {\n                outSt.push(inSt.top());\n                inSt.pop();\n            }\n        }\n        return outSt.top();\n    }\n\n    bool empty() {\n        return inSt.empty() &amp;&amp; outSt.empty();\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#k_1","title":"\u7b2cK\u5927\u7684\u6570","text":"<p>\u94fe\u63a5</p> <ul> <li>\u60f3\u8981\u8fbe\u5230 \\(O(n)\\) \u65f6\u95f4\uff0c\u5c31\u5f97\u4ece\u5feb\u6392\u53d8\u5f62\u3002</li> <li>\u7b2cK\u5927\u7684\u6570\u6b63\u597d\u662f\u4e0b\u6807\u4e3asize-k</li> <li>\u4e00\u6b21\u5feb\u6392\u76f8\u5f53\u4e8e\u628a\u4e00\u4e2a\u6570\u653e\u5230\u5bf9\u5e94\u4f4d\u7f6e\uff0c\u90a3\u5c31\u627e\u54ea\u4e00\u6b21\u653e\u597d\u4e86\u7684\u4e0b\u6807\u6b63\u597d\u662f\u8981\u6c42\u7684 <p>\u6ca1\u505a\u51fa\u6765\u65f6\u75db\u82e6\u4e07\u5206\uff0c<sub>\u6284\u5b8c\u4e86</sub> \u5b66\u4f1a\u4e86\u4e4b\u540e\u89c9\u5f97\u5c31\u5e94\u8be5\u8fd9\u4e48\u5199\ud83d\ude25</p> </li> </ul> Slove <pre><code>class Solution {\npublic:\nint findKthLargest(vector&lt;int&gt; &amp;nums, int k) {\n    return quicksort(nums,0,nums.size()-1,nums.size()-k);\n}\n\nint quicksort(vector&lt;int&gt; &amp;nums, int l, int r, int k) {\n    if (l == r) return nums[k];\n    int i = l - 1, j = r + 1, mid = nums[l + r &gt;&gt; 1];\n    while (i &lt; j) {\n        do i++; while (nums[i] &lt; mid);\n        do j--; while (nums[j] &gt; mid);\n        if (i &lt; j) swap(nums[i], nums[j]);\n    }\n    if (k &lt;= j) return quicksort(nums, l, j, k);\n    else return quicksort(nums, j + 1, r, k);\n}\n};\n</code></pre>"},{"location":"backend/leetcode/#2","title":"\u73af\u5f62\u94fe\u88682","text":"<p>\u9898\u76ee\u94fe\u63a5</p> <p>\u5b8c\u6574\u7248\u9898\u89e3</p> <ul> <li>\u8bbe\u6709a\u4e2a\u8282\u70b9\uff08\u4e0d\u542b\u73af\u7684\u8d77\u70b9\uff09\uff0c\u73af\u5185\u6709b\u4e2a\u8282\u70b9</li> <li>\u5f53\u7b2c\u4e00\u6b21\u76f8\u9047\u65f6\uff0c</li> </ul> \\[ \\begin{aligned} fast &amp;=2*low \\\\ fast &amp;=low+n*b \\\\ fast &amp;=2nb \\\\ low  &amp;=nb  \\end{aligned} \\] <ul> <li>\u6240\u6709\u4ece\u5934\u5f00\u59cb\u8d70\u5230\u73af\u7684\u8d77\u70b9\u90fd\u662f \\(a+Nb\u6b65\\)</li> <li>\u6240\u4ee5low\u518d\u8d70a\u6b65\u5c31\u5230\u8d77\u70b9\uff0c\u90a3\u4e48\u8ba9\u5feb\u6307\u9488\u91cd\u65b0\u6307\u5411\u5934\uff0c\u4e00\u6b21\u4e00\u6b65\u8d70a\u6b65\uff0c\u4e24\u8005\u5c31\u4f1a\u91cd\u5408</li> </ul> Solve <pre><code>class Solution {\npublic:\nListNode *detectCycle(ListNode *head) {\n    ListNode *low = head;\n    ListNode *fast = head;\n    bool ff = false;\n    while (fast != nullptr &amp;&amp; fast-&gt;next != nullptr) {\n        fast = fast-&gt;next-&gt;next;\n        low = low-&gt;next;\n        if (fast == low) {\n            ff = true;\n            break;\n        }\n    }\n    if (ff) {\n       fast=head;\n        while (fast!=low){\n            fast=fast-&gt;next;\n            low=low-&gt;next;\n        }\n        return low;\n    }\n    return nullptr;\n\n}\n};\n</code></pre>"},{"location":"backend/leetcode/#o1","title":"\u5bfb\u627e\u91cd\u590d\u6570 \u8981\u6c42O(1)\u7a7a\u95f4","text":"<p>transport</p> <p>\u4ee5[1,3,4,2,2]\u4e3a\u4f8b\uff0c\u5982\u679c\u6709\u76f8\u540c\u6570\u5b57\uff0c\u76f8\u5f53\u4e8e\u4f1a\u5b58\u5728\u4e00\u4e2a\u73af</p> <p>\u6838\u5fc3\uff1a \u4e0b\u6807\u548c\u5185\u5bb9\u4e00\u8d77\u505a\u6307\u5411</p> \u4e0b\u6807 0 1 3 2 4 \u5185\u5bb9 1 3 2 4 2(\u6210\u73af) \u8282\u70b9 1 3 2 4 2 <p>\u7136\u540e\u5c31\u548c\u73af\u5f62\u94fe\u88682\u4e00\u4e2a\u505a\u6cd5\uff0c\u5224\u73af\u627e\u5165\u53e3</p> Slove <pre><code>class Solution {\npublic:\n    int findDuplicate(vector&lt;int&gt;&amp; nums) {\n        int low=0,fast=0;\n        //go 1step 2step\n        low=nums[low];\n        fast=nums[nums[fast]];\n        while (low!=fast){\n            low=nums[low];\n            fast=nums[nums[fast]];\n        }\n        //fast goto begin node\n        fast=0;\n        while (low!=fast){\n            low=nums[low];\n            fast=nums[fast];\n        }\n        return fast;\n\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_33","title":"\u6700\u77ed\u65e0\u5e8f\u8fde\u7eed\u5b50\u6570\u7ec4","text":"<p>\u53cc\u6307\u9488</p> <ul> <li>\u627e\u51fa\u5347\u5e8f\uff0c\u964d\u5e8f\u7684\u533a\u95f4\uff0c\u4e2d\u95f4\u5c31\u662f\u65e0\u5e8f\u3002</li> <li>\u5e0c\u671b\u4e2d\u95f4\u7684\u503c <code>x&gt;Lmax&amp;&amp;x&lt;Rmin</code> \uff0c\u53cd\u8fc7\u6765\u8bf4\uff0c\u5f53 <code>x&lt;Lmax||x&gt;Rmin</code> \u5c31\u5e94\u8be5\u8c03\u6574\u5de6\u53f3\u7aef\u70b9</li> <li>\u7ec6\u8282\u90e8\u5206</li> <li>\u4e3a\u4e86\u65b9\u4fbf\u8c03\u6574\u5230\u6570\u7ec4\u5f00\u59cb\u548c\u7ed3\u5c3e\uff0c\u75281e5+10\u548c-1e5-10\u8fdb\u884c\u8bbe\u7f6e</li> <li>\u4e3a\u4ec0\u4e48\u65e0\u5e8f\u533a\u95f4\u7684\u6570\u5b57\u5f00\u59cb\u4eceL\u627e\uff1f\u5982\u679c\u4eceL+1\u5f00\u59cb\uff0c\u53cd\u4f8b\u662f <code>1, 3, 2, 2, 2</code></li> </ul> \u53cc\u6307\u9488 <pre><code>class Solution {\npublic:\n    int findUnsortedSubarray(vector&lt;int&gt; &amp;nums) {\n        if (nums.size() == 1) return 0;\n\n        int l = 0, r = nums.size() - 1;\n        while (l &lt; r &amp;&amp; nums[l] &lt;= nums[l + 1]) l++;\n        while (l &lt; r &amp;&amp; nums[r] &gt;= nums[r - 1]) r--;\n\n        int lmaxval = nums[l], rminval = nums[r];\n        if (l == r) return 0;\n\n        int i = l + 1;\n        for (int k = l ; k &lt; r; ++k) {\n            if (nums[k] &lt; lmaxval) {\n                while (l &gt;= 0 &amp;&amp; nums[k] &lt; lmaxval) {\n                    l--;\n                    if (l &lt; 0) lmaxval = -1e5 - 10;\n                    else lmaxval = nums[l];\n                }\n\n            }\n            if (nums[k] &gt; rminval) {\n                while (r &lt; nums.size() &amp;&amp; nums[k] &gt; rminval) {\n                    r++;\n                    if (r &gt;= nums.size())\n                        rminval = 1e5 + 10;\n                    else rminval = nums[r];\n                }\n\n            }\n        }\n\n        return r - l - 1;\n    }\n};\n</code></pre> <p>\u4e00\u6b21\u904d\u5386 \u4f20\u9001\u95e8</p> <p>\u5148\u53ea\u8003\u8651\u4e2d\u6bb5\u6570\u7ec4\uff0c\u8bbe\u5176\u5de6\u8fb9\u754c\u4e3aL\uff0c\u53f3\u8fb9\u754c\u4e3aR\uff1a</p> <p><code>nums[R]</code> \u4e0d\u53ef\u80fd\u662f <code>[L\uff0cR]</code> \u4e2d\u7684\u6700\u5927\u503c\uff08\u5426\u5219\u5e94\u8be5\u5c06 <code>nums[R]</code> \u5e76\u5165\u53f3\u7aef\u6570\u7ec4\uff09</p> <p><code>nums[L]</code> \u4e0d\u53ef\u80fd\u662f<code>[L,R]</code>\u4e2d\u7684\u6700\u5c0f\u503c\uff08\u5426\u5219\u5e94\u8be5\u5c06 <code>nums[L]</code> \u5e76\u5165\u5de6\u7aef\u6570\u7ec4\uff09</p> <p>\u5f88\u660e\u663e:</p> <p><code>[L,R]</code> \u4e2d\u7684\u6700\u5927\u503c \u7b49\u4e8e <code>[0\uff0cR]</code> \u4e2d\u7684\u6700\u5927\u503c\uff0c\u8bbe\u5176\u4e3a max</p> <p><code>[L,R]</code> \u4e2d\u7684\u6700\u5c0f\u503c \u7b49\u4e8e <code>[L\uff0c nums.length-1]</code>\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u8bbe\u5176\u4e3a min</p> <p>\u90a3\u4e48\u6709\uff1a</p> <p><code>nums[R] &lt; max &lt; nums[R+1] &lt; nums[R+2] &lt; ...</code>  \u6240\u4ee5\u8bf4\uff0c\u4ece\u5de6\u5f80\u53f3\u904d\u5386\uff0c\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8emax\u7684\u4e3a\u53f3\u8fb9\u754c</p> <p><code>nums[L] &gt; min &gt; nums[L-1] &gt; nums[L-2] &gt; ...</code> \u6240\u4ee5\u8bf4\uff0c\u4ece\u53f3\u5f80\u5de6\u904d\u5386\uff0c\u6700\u540e\u4e00\u4e2a\u5927\u4e8emin\u7684\u4e3a\u5de6\u8fb9\u754c</p> \u4e00\u6b21\u904d\u5386 <pre><code>class Solution {\npublic:\n    int findUnsortedSubarray(vector&lt;int&gt; &amp;nums) {\n\n\n        int min = nums[nums.size() - 1], max = nums[0];\n        int end = -1, begin = 0;\n        //end\u548cbegin\u7684\u521d\u503c\u4e0d\u91cd\u8981\uff0c\u8ba9end-bigin+1=0\u5373\u53ef\n        for (int i = 0; i &lt; nums.size(); ++i) {\n            if (nums[i] &lt; max)\n                end = i;\n            else max = nums[i];\n\n            if (nums[nums.size() - 1 - i] &gt; min)\n                begin = nums.size() - 1 - i;\n            else min = nums[nums.size() - 1 - i];\n        }\n        return end - begin + 1;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_34","title":"\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217","text":"<ol> <li>dp \\(O(n^2)\\) , <code>dp[i]=max(dp[i],dp[j]+1) when a[i]&gt;a[j],</code></li> <li>dp+\u8d2a\u5fc3\uff0c\u6bcf\u6b21\u627e <code>x&lt;=anw[i]</code>\u7684\u5de6\u7aef\u70b9\u66f4\u65b0</li> <li>\u8bb0\u5fc6\u5316\u641c\u7d22</li> </ol> dp On2dp+\u8d2a\u5fc3 <pre><code>#include \"bits/stdc++.h\"\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin &gt;&gt; n;\n    vector&lt;int&gt; a(n);\n    for (int i = 0; i &lt; n; i++)\n        cin &gt;&gt; a[i];\n    vector&lt;int&gt; dp(n, 1);\n    for (int i = 1; i &lt; n; i++) {\n        for (int j = 0; j &lt; i; j++) {\n            if (a[i] &gt; a[j])\n                dp[i] = max(dp[i], dp[j] + 1);\n        }\n    }\n    cout &lt;&lt; *max_element(dp.begin(), dp.end());\n    return 0;\n}\n</code></pre> <pre><code>#include \"bits/stdc++.h\"\n\nusing namespace std;\n\nvoid check(int x, vector&lt;int&gt; &amp;anw) {\n    int l = 0, r = anw.size() - 1;\n    while (l &lt; r) {\n        int mid = l+r&gt;&gt;1;\n        if (anw[mid] &lt;x)l = mid+1;\n        else r = mid;\n    }\n\n    anw[r] = x;\n}\n\nint main() {\n    int n;\n    cin &gt;&gt; n;\n    vector&lt;int&gt; a(n);\n    for (int i = 0; i &lt; n; i++)\n        cin &gt;&gt; a[i];\n    vector&lt;int&gt; anw;\n    anw.push_back(a[0]);\n    for (int i = 1; i &lt; n; i++) {\n        if (anw[anw.size() - 1] &lt; a[i])\n            anw.push_back(a[i]);\n        else check(a[i], anw);\n    }\n    cout &lt;&lt; anw.size();\n    return 0;\n}\n</code></pre>"},{"location":"backend/leetcode/#_35","title":"\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9","text":"<ul> <li>\u5f52\u5e76\u6392\u5e8f\uff0c\u6ce8\u610f\u5faa\u73af\u7684\u8fb9\u754c\u662f <code>l r</code>\u4e0d\u662f 0</li> <li>\u5957\u6a21\u677f\u4f1a\u7a7a\u95f4\u591a\u4e00\u70b9\u4f46\u662f\u76f4\u89c2\uff0c\u4f18\u5316\u4e00\u4e0b\u76f8\u5f53\u4e8e\u4e0d\u505c\u5728\u6c42\u5b50\u95ee\u9898</li> </ul> \u5f00\u7a7a\u95f4\u8f83\u591a <pre><code>class Solution {\npublic:\n    int inversePairs(vector&lt;int&gt; &amp;nums) {\n        if(nums.size()==0) return 0;\n        int anw = mergesort(nums, 0, nums.size() - 1);\n        return anw;\n    }\n\n    int mergesort(vector&lt;int&gt; &amp;nums, int l, int r) {\n        if (l == r) return 0;\n        int mid = l + r &gt;&gt; 1;\n        int cnt = 0;\n        cnt += mergesort(nums, l, mid);\n        cnt += mergesort(nums, mid + 1, r);\n\n        int m = mid, n = r, id = r;\n\n        vector&lt;int&gt; anw(nums.size());\n\n        while (m &gt;= l &amp;&amp; n &gt; mid) {\n            if (nums[n] &gt;= nums[m]) anw[id--] = nums[n--];\n            else cnt+=n-mid, anw[id--] = nums[m--];\n        }\n        while (m &gt;= l) anw[id--] = nums[m--];\n        while (n &gt; mid)anw[id--] = nums[n--];\n\n        id = l;\n        while (id &lt;= r)\n            nums[id] = anw[id], id++;\n\n        return cnt;\n    }\n};\n</code></pre> On\u7a7a\u95f4 <pre><code>class Solution {\npublic:\n    int inversePairs(vector&lt;int&gt; &amp;nums) {\n        if (nums.size() == 0) return 0;\n        vector&lt;int&gt; tem = nums;\n        int anw = mergesort(nums, 0, nums.size() - 1, tem);\n        return anw;\n    }\n\n    int mergesort(vector&lt;int&gt; &amp;nums, int l, int r, vector&lt;int&gt; &amp;tem) {\n        if (l == r) {\n            tem[l] = nums[l];\n            return 0;\n        }\n        int mid = l + r &gt;&gt; 1;\n        int cnt = 0;\n        cnt += mergesort(tem, l, mid, nums);\n        cnt += mergesort(tem, mid + 1, r, nums);\n\n        int m = mid, n = r, id = r;\n        while (m &gt;= l &amp;&amp; n &gt;= mid+1) {\n            if(nums[m]&gt;nums[n]) {\n                tem[id--]=nums[m--];\n                cnt+=n-mid;\n            }\n            else tem[id--]=nums[n--];\n        }\n        while (m &gt;= l) tem[id--] = nums[m--];\n        while (n &gt; mid)tem[id--] = nums[n--];\n\n        return cnt;\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#_36","title":"\u7f16\u8f91\u8ddd\u79bb","text":"<p>\u9898\u89e3</p> <p>\u53ef\u4ee5\u4f18\u5316\u6210O(M)</p> slove <pre><code>class Solution {\npublic:\n    void printmarix(vector&lt;int&gt; source) {\n        for (auto x : source)\n            cout &lt;&lt; x &lt;&lt; ' ';\n        cout &lt;&lt; endl;\n    }\n\n    void printVect(vector&lt;vector&lt;int&gt;&gt; dp) {\n        for (auto x : dp) {\n            for (auto y : x)\n                cout &lt;&lt; y &lt;&lt; ' ';\n            cout &lt;&lt; endl;\n        }\n    }\n\n    int minDistance(string source, string dest) {\n        vector&lt;int&gt; dp(dest.size() + 1, 0);\n\n\n        for (int i = 0; i &lt;= dest.size(); i++)\n            dp[i] = i;\n\n        for (int i = 1; i &lt;= source.size(); i++) {\n            int tem = dp[0];\n            dp[0] = i;\n            for (int j = 1; j &lt;= dest.size(); j++) {\n                int pre_dp_j = dp[j];\n                if (source[i - 1] == dest[j - 1])\n                    dp[j] = tem;\n                else\n                    dp[j] = min(tem, min(dp[j - 1], dp[j])) + 1;\n\n                tem = pre_dp_j;\n            }\n            //  printmarix(dp);\n        }\n        return dp[dest.size()];\n    }\n\n    int minDistance_corr(string source, string dest) {\n        vector&lt;vector&lt;int&gt;&gt; dp(source.size() + 1, vector&lt;int&gt;(dest.size() + 1, 0));\n\n        for (int i = 0; i &lt;= source.size(); i++)\n            dp[i][0] = i;\n        for (int i = 0; i &lt;= dest.size(); i++)\n            dp[0][i] = i;\n\n        for (int i = 1; i &lt;= source.size(); i++)\n            for (int j = 1; j &lt;= dest.size(); j++) {\n                if (source[i - 1] == dest[j - 1])\n                    dp[i][j] = dp[i - 1][j - 1];\n                else\n                    dp[i][j] = min(min(dp[i - 1][j - 1], dp[i - 1][j]), dp[i][j - 1]) + 1;\n            }\n        //  printVect(dp);\n        return dp[source.size()][dest.size()];\n    }\n};\n</code></pre>"},{"location":"backend/leetcode/#review","title":"review","text":"<p>two sum with link node</p> solve <pre><code>class Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        ListNode* head = new ListNode(0);\n        ListNode* tem = head;\n        int adding = 0;\n        while (l1 || l2) {\n            int x = 0, y = 0;\n            if (l1) x = l1-&gt;val;\n            if (l2) y = l2-&gt;val;\n            int sum = (x + y + adding) % 10;\n            adding = (x + y + adding) / 10;\n            ListNode* ne = new ListNode(sum);\n            tem-&gt;next = ne;\n            tem = tem-&gt;next;\n            if (l1)\n                l1 = l1-&gt;next;\n            if (l2)\n                l2 = l2-&gt;next;\n        }\n        if (adding) {\n            ListNode* ne = new ListNode(adding);\n            tem-&gt;next = ne;\n        }\n        tem = head-&gt;next;\n        delete head;\n        return tem;\n    }\n};\n</code></pre> <p>The Dutch national flag: sort an array of some 0,1,2 in O(n) </p> <ul> <li>[0, i-1] &lt; midElement</li> <li>[i, j-1] = midElement</li> <li>[j, k] unsorted</li> <li>[k+1, end] &gt;midElement</li> </ul> solve <pre><code>void dutchFlag(vector&lt;int&gt;&amp;todo){\n    int N=todo.size();\n    int low=0,mid=0,high=N-1;\n    while (mid&lt;=high){\n        if(todo[mid]==0){\n            swap(todo[low],todo[mid]);\n            low++;\n            mid++;\n        }\n        else if(todo[mid]==2){\n            swap(todo[mid],todo[high]);\n            high--;\n        }\n        else mid++;\n    }\n}\n</code></pre> <p>Merging with smaller auxiliary array: given an array[2n], which is sorted from a[0] to a[n], and sorted from a[n+1] to a[2n]. you need to sort the entire array with O(n) space</p> <p>solve: 1. copy the first part to auxiliary array 2. merge auxiliary array and the second part of original array </p> solve <pre><code>#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid merge(vector&lt;int&gt; &amp;a) {\n    vector&lt;int&gt; aux = vector&lt;int&gt;(a.size() / 2);\n    int half = a.size() / 2;\n    for (int i = 0; i &lt; half; i++)\n        aux[i] = a[i];\n\n    int lo = 0, hi = half;\n    int k = 0;\n\n    while (lo &lt; half &amp;&amp; hi &lt; a.size()) {\n        if (aux[lo] &lt; a[hi])\n            a[k++] = aux[lo++];\n        else a[k++] = a[hi++];\n    }\n    while (lo &lt; half) a[k++] = aux[lo++];\n    while (hi &lt; a.size()) a[k++] = a[hi++];\n\n}\n\nvoid test() {\n    vector&lt;int&gt; a = {6, 7, 8, 9, 10, 1, 2, 3, 4, 5};\n    vector&lt;int&gt; expect = a;\n    std::sort(expect.begin(), expect.end());\n\n    merge(a);\n    for (auto x: a)\n        cout &lt;&lt; x &lt;&lt; ' ';\n\n    if (a == expect)\n        cout &lt;&lt; \"yes\";\n    else\n        cout &lt;&lt; \"NO\";\n}\n\nint main() {\n    test();\n    return 0;\n}\n</code></pre>"},{"location":"backend/leetcode/#codeforces","title":"codeforces","text":""},{"location":"backend/leetcode/#lakes","title":"lakes","text":"lakes <p>\u8fd9\u4e2a\u9898\u5728\u4e8e\u526a\u679d\uff0c\u6709\u7684\u4e0d\u7528\u518ddfs\u4e86\uff0c\u4e0d\u7136\u8d85\u65f6\u3002\u5047\u5982\uff081\uff0c1\uff09\u548c\uff081\uff0c2\uff09\u8054\u901a\uff0cdfs\uff081\uff0c1\uff09\u548cdfs\uff081\uff0c2\uff09\u662f\u4e00\u4e2a\u7ed3\u679c\u3002 <pre><code>#include &lt;cstring&gt;\n#include \"iostream\"\n\nusing namespace std;\nconst int N = 1010;\nint gra[N][N];\nint n, m;\nint total;\nint dx[4] = {0, 0, -1, 1};\nint dy[4] = {1, -1, 0, 0};\nbool visited[N][N];\n\n\nint dfs(int a, int b) {\n    visited[a][b] = true;\n    if (gra[a][b] == 0) return 0;\n    int anw = gra[a][b];\n\n    for (int i = 0; i &lt; 4; i++) {\n        int nx = a + dx[i];\n        int ny = b + dy[i];\n        if (nx &gt;= 1 &amp;&amp; nx &lt;= n &amp;&amp; ny &gt;= 1 &amp;&amp; ny &lt;= m\n            &amp;&amp; gra[nx][ny] &gt; 0 &amp;&amp; visited[nx][ny] == false) { anw += dfs(nx, ny); }\n    }\n    return anw;\n}\n\nvoid solve() {\n\n    int fin = 0;\n    cin &gt;&gt; n &gt;&gt; m;\n\n    for (int i = 1; i &lt;= n; i++)\n        for (int j = 1; j &lt;= m; j++)\n            cin &gt;&gt; gra[i][j];\n\n\n    memset(visited, 0, sizeof visited);\n    for (int i = 1; i &lt;= n; i++)\n        for (int j = 1; j &lt;= m; j++) {\n            if (gra[i][j] != 0 &amp;&amp; visited[i][j] == false) {\n\n                fin = max(dfs(i, j), fin);\n            }\n        }\n    cout &lt;&lt; fin &lt;&lt; endl;\n\n}\n\nint main() {\n\n    cin &gt;&gt; total;\n    while (total--)\n        solve();\n    return 0;\n}\n</code></pre></p>"},{"location":"backend/leetcode/#hits-different","title":"Hits Different","text":"<p>\u524d\u7f00\u548c\u52a8\u753b\u8bb2\u89e3</p> solve <p>\u975e\u5e38\u5de7\u5999\u554a\uff0c\u8f6c\u6210\u524d\u7f00\u548c,\u8be6\u60c5\u53ef\u4ee5\u89c1\u76f8\u5e94\u82f1\u6587\u9898\u89e3 <pre><code>#include \"iostream\"\n\nusing namespace std;\n\ntypedef long long  llint;\nllint anw[2050000];\nllint gra[2029][2029];\nllint cur = 1;\n\nvoid solve() {\n    llint x;\n    cin &gt;&gt; x;\n    cout &lt;&lt; anw[x] &lt;&lt; endl;\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int n;\n    for (int i = 1; i &lt;= 2023; i++)\n        for (int j = i; j &gt;= 1; j--) {\n            gra[j][i - j + 1] = gra[j - 1][i - j + 1] + gra[j][i - j + 1 - 1]\n                                - gra[j - 1][i - j + 1 - 1]\n                                + cur * cur;\n            anw[cur] = gra[j][i - j + 1];\n            cur++;\n        }\n    cin &gt;&gt; n;\n    while (n--)\n        solve();\n    return 0;\n}\n</code></pre></p>"},{"location":"backend/leetcode/#distinct-split","title":"Distinct Split","text":"Slove <ol> <li>\u4e00\u6b21\u904d\u5386\u7edf\u8ba1\u51fa\u6240\u6709\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570</li> <li>\u4ece\u524d\u5f80\u540e\u5f00\u59cb\u7b97\uff0c\u7ed9pre\u5206\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5c31\u5728\u8be5\u5b57\u6bcd\u51fa\u73b0\u603b\u6570-1</li> <li>\u7edf\u8ba1\u6240\u6709\u5b57\u6bcd\uff0c\u8fdb\u884c\u52a0\u548c\uff1b \u5de7\u5999\u5728\u76f8\u5f53\u4e8e\u5e76\u884c\u5904\u74062\u4e2a\u5b57\u7b26\u4e32\uff0c\u60f3\u4e0d\u51fa\u6765\ud83d\ude25 </li> </ol>"},{"location":"backend/problemSolve/","title":"environment","text":""},{"location":"backend/problemSolve/#_1","title":"\u963f\u91cc\u4e91","text":"<p>\u56e0\u4e3a\u673a\u5668\uff08\u8054\u60f3\u5c0f\u65b0AIR14-2021\uff09\u627f\u53d7\u4e86\u4e0d\u80fd\u627f\u53d7\u4e4b\u91cd\uff08make qemu\u76f4\u63a5\u5361\u4f4f\u4e86\uff09\uff0c\u8f6c\u6218\u963f\u91cc\u4e91\uff0c\u963f\u91cc\u4e91\u505a\u4e24\u4e2a\u5b9e\u9a8c\u540e\u53ef\u4ee5\u514d\u8d39\u9886\u53d67\u4e2a\u6708\u670d\u52a1\u5668\uff08\u5b9e\u9a8c\u5185\u5bb9\u5f88\u7b80\u5355\uff0c40min\u4e24\u4e2a\u5168\u80fd\u641e\u5b9a\uff09\uff0c\u975e\u5e38\u53cb\u597d\u4e86</p> \u53d1\u70b9\u7262\u9a9a <p>\u817e\u8baf\u4e91\u4e5f\u4e0d\u9519\uff0c30\u57573\u4e2a\u6708\uff0c\u4e5f\u6709\u5b66\u751f\u8ba4\u8bc1\u83b7\u53d6\u66f4\u957f\u65f6\u95f4\u7684\u514d\u8d39\u670d\u52a1\u5668\uff0c\u94fe\u63a5\ud83d\udd17</p> <p>\u76f8\u6bd4\u4e4b\u4e0b\u534e\u4e3a\u4e91\u5c31\u4e0d\u662f\u975e\u5e38\u7ed9\u529b\u4e86\uff0c\u8001\u5e08\u5929\u5929\u5728\u5b66\u6821\u91cc\u641e\u5ba3\u4f20\uff0c\u4f46\u662f\u4e0d\u7ed9\u5e7f\u5927\u7684\u7a77\u54e5\u4eec\u6574\u70b9\u798f\u5229\uff08\u70b9\u540d\u6279\u8bc4  \uff09</p> kind details \u5904\u7406\u5668 AMD Ryzen 5 5500U with Radeon Graphics \u516d\u6838 \u4e3b\u677f \u8054\u60f3 LNVNB161216 \u5185\u5b58 \u9541\u514916GB DDR4 3200MHz \uff08 8GB \uff0b 8GB ) \u663e\u5361 AMD Radeon\uff08TM\uff09 Graphics \uff08512MB\uff0f\u8054\u60f3) \u663e\u793a\u5668 LEN140FHD\uff3b\u8054\u60f3LEN9023\uff3d\uff0813.9\u82f1\u5bf8\uff09"},{"location":"backend/problemSolve/#_2","title":"\u865a\u62df\u673a","text":""},{"location":"backend/problemSolve/#vpn","title":"vpn","text":"<ul> <li>virtual box \u7248\u672c 7.0.10 r158379 (Qt5.15.2)</li> <li> <p>Ubuntu 20.04 \u6e05\u534e\u6e90\u955c\u50cf</p> </li> <li> <p>\u6211\u7684\u662f\u5148\u628a\u7f51\u6865\u548cnat\u5168\u90fd\u6253\u5f00</p> <ul> <li>\u8fd9\u4e00\u6b65\u53ea\u5f00nat \u6216\u8005 \u7f51\u6865\u90fd\u884c\uff0c\u5173\u4e8enat\u548c\u7f51\u6865\u8bf7\u67e5\u8be2\u4e13\u4e1a\u77e5\u8bc6\uff08\u6211\u7684\u673a\u5668\u4e8c\u9009\u4e00\u90fd\u53ef\u4ee5\uff09</li> </ul> </li> <li>\u5728 <code>~/.config/clash</code> \u914d\u7f6e <code>config.yaml</code> \u548c <code>Country.mmdb</code><ol> <li><code>config.yaml</code> \u91cc\u6dfb\u52a0\u670d\u52a1\u5546\u7684\u8ba2\u9605</li> <li><code>Country.mmdb</code> \u94fe\u63a5</li> </ol> </li> <li>\u6309 <code>config.yaml</code> \u4fee\u6539\u7f51\u7edc\u4ee3\u7406<ol> <li>http proxy,https proxy,ftp proxy,\u586b\u5199\u5bf9\u5e94\u7aef\u53e3</li> <li>socks host \u586b\u5199\u5bf9\u5e94\u7aef\u53e3</li> <li>\u4e3b\u673a\u5168\u5199 <code>127.0.0.1</code></li> </ol> </li> <li>\u8fd0\u884cclash <code>./clash</code> </li> </ul>"},{"location":"backend/problemSolve/#_3","title":"\u8fde\u4e0d\u4e0a\u7f51","text":"tips <p>\u76f4\u63a5\u7528Oracle\u7684virtual box\u5c31\u597d\uff0c\u66f4\u52a0\u65b9\u4fbf</p> <ul> <li>\u6700\u5f00\u59cb\u88c5Ubuntu\u8054\u7f51\u6ca1\u95ee\u9898\uff0c\u91cd\u542f\u540e\u4e5f\u6ca1\u95ee\u9898</li> <li>2023/07\u91cd\u88c5\u4e4b\u540e\u5c31\u8fde\u4e0d\u4e0a\u7f51\uff0c\u7f51\u4e0a\u6559\u7a0b\u4e5f\u6ca1\u89e3\u51b3\uff0c\u540e\u6765\u53d1\u73b0\u91cd\u88c5\u7f51\u7edc\u90e8\u5206\u5c31\u80fd\u8fde\u4e0a</li> <li>useful guide</li> </ul> \u91cd\u88c5\u865a\u62df\u7f51\u7edc\u7f16\u8f91\u5668 <p>vmware playstations pro\uff0c\u7f16\u8f91\uff0c\u865a\u62df\u7f51\u7edc\u7f16\u8f91\u5668\uff0c\u66f4\u6539\u8bbe\u7f6e\uff0c\u8fd8\u539f\u4e3a\u9ed8\u8ba4\u8bbe\u7f6e</p>"},{"location":"backend/problemSolve/#_4","title":"\u6570\u636e\u5e93","text":""},{"location":"backend/problemSolve/#mysql","title":"MySQL\u5b89\u88c5\u540e\u8fde\u63a5\u4e0d\u4e0a","text":"<p>\u80cc\u666f\uff1aWindows\u91cd\u88c5MySQL\u5e76\u4e14\u7acb\u523b\u8fdb\u5165workbench\u540e\u80fd\u6b63\u5e38\u6570\u636e\u5e93\u4f7f\u7528\uff0c\u4f46\u662f\u91cd\u542f\u6216\u5173\u673a\u518d\u5f00\u5c31\u8fde\u63a5\u4e0d\u4e0a\u4e86\u3002</p> <p>the path already exists</p> <p>\u6bd4\u5982\u5b89\u88c5server\u6211\u8981\u88c5\u5230<code>D:\\MYSQL\\server</code>\uff0c\u63d0\u793a\u6211<code>the path already exists</code>\uff0c\u90a3\u5c31\u628a\u81ea\u5df1\u5efa\u7684server\u6587\u4ef6\u5939\u5220\u6389\uff0c\u586b\u5199<code>D:\\MYSQL</code>\u5373\u53ef</p> <p>\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\uff1a</p> <p>\u7ec8\u7aef\uff08powershell\uff09\u8f93\u5165<code>&amp; 'D:\\MYSQL\\server\\bin\\mysqld.exe' --defaults-file=\"D:\\MYSQL\\data\\my.ini\"</code> \u522b\u5fd8\u4e86\u5207\u6362\u6210\u5bf9\u5e94\u7684\u6587\u4ef6\u5939</p> <p>\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u5462\uff1f</p> <p>\u8fd9\u6761\u547d\u4ee4\u7684\u610f\u601d\u662f\u628a<code>D:\\MYSQL\\data\\my.ini</code>\u7684\u5185\u5bb9\u9001\u7ed9<code>D:\\MYSQL\\server\\bin\\mysqld.exe</code>\u6267\u884c\u3002 \u6211\u770b\u7f51\u4e0a\u6709<code>net start mysql</code>\u4f46\u662f\u6211\u6309\u7167\u76f8\u5173\u6559\u7a0b\u6210\u529f\u542f\u52a8mysql\u540e\uff0cworkbench\u8fd8\u662f\u4e0d\u80fd\u8fde\u63a5\u3002\u540e\u6765\u53c8\u5728StackOverflow<sup>1</sup>\u4e0a\u770b\u5230\u542f\u52a8<code>MySQL57</code> </p> <p>\u6211\u4e5f\u505a\u7c7b\u4f3c\u6b65\u9aa4\uff0c\u542f\u52a8\u4e86<code>MySQL80</code>(\u56e0\u4e3a\u6211\u7684\u914d\u7f6e\u91cc\u5b83\u5c31\u53eb\u8fd9\u4e2a\u540d\u5b57\uff0c\u5bf9\u5e94\u4e0b\u9762\u7684\u56fe\u4e2dwindows servers name),\u7136\u540eworkbench\u6210\u529f\u8fde\u63a5\ud83d\udc4d</p> <p>\u63a5\u4e0b\u6765\u518d\u63a5\u518d\u5389\uff0c\u5728<code>services.msc</code>\u53d1\u73b0\u5b83\u5176\u5b9e\u5c31\u662f\u76f8\u5f53\u4e8e\u6267\u884c<code>D:\\MYSQL\\server\\bin\\mysqld.exe' --defaults-file=\"D:\\MYSQL\\data\\my.ini</code>\u8fd9\u6761\u6307\u4ee4\uff0c\u4f46\u662f\u6211\u770bworkbench\u91cc\u7684\u8fde\u63a5\u914d\u7f6e\u5c31\u662f\u8fd9\u4e2a\u610f\u601d\uff0c\u4f46\u662f\u4e0d\u592a\u660e\u767d\u4e3a\u4ec0\u4e48workbench\u6ca1\u6709\u6210\u529f\uff0c\u5e0c\u671b\u6709\u9ad8\u4eba\u6307\u70b9\u3002 </p> <ol> <li> <p>\u5bf9\u5e94\u7684StackOverflow\u95ee\u9898\u4f20\u9001\u95e8 \u21a9</p> </li> </ol>"},{"location":"backend/python/","title":"python","text":"<ul> <li><code>sys.argv</code> \u662f\u4ece1\u5f00\u59cb\uff0cargv[0]\u662f\u7a0b\u5e8f\u540d</li> <li>\u5982\u679c\u53ea\u60f3\u5728\u672c\u6587\u4ef6\u4e2d\u8fd0\u884c\uff0c\u4e0d\u60f3\u5728\u5bfc\u5165\u7684\u65f6\u5019\u8fd0\u884c\uff0c\u6dfb\u52a0 <code>if __name__ == \"__main__</code></li> <li><code>match</code> Notice the use of the _ symbol in the last case. This will match with any input, resulting in similar behavior as an else statement.</li> </ul> read &amp; write csv1.csvmatchmatch update <pre><code>import csv\n\nstudents = []\n\nwith open(\"1.csv\") as file:\n    reader = csv.DictReader(file)\n    for row in reader:\n        students.append({\"name\": row[\"name\"], \"home\": row[\"home\"]})\n\nfor student in sorted(students, key=lambda student: student[\"name\"]):\n    print(f\"{student['name']} is in {student['home']}\")\n\n\nname = input(\"What's your name? \")\nhome = input(\"Where's your home? \")\n\nwith open(\"1.csv\", \"a\") as file:\n    writer = csv.DictWriter(file, fieldnames=[\"name\", \"home\"])\n    writer.writerow({\"name\": name, \"home\": home})\n</code></pre> <pre><code>name,home\nHermoine,Gryffindor\nHarry,Gryffindor\nRon,Gryffindor\nDraco,Slytherin\n</code></pre> <pre><code>name = input(\"What's your name? \")\n\nmatch name: \n    case \"Harry\":\n        print(\"Gryffindor\")\n    case \"Hermione\":\n        print(\"Gryffindor\")\n    case \"Ron\": \n        print(\"Gryffindor\")\n    case \"Draco\":\n        print(\"Slytherin\")\n    case _:\n        print(\"Who?\")\n</code></pre> <pre><code>name = input(\"What's your name? \")\n\nmatch name: \n    case \"Harry\" | \"Hermione\" | \"Ron\":\n        print(\"Gryffindor\")\n    case \"Draco\":\n        print(\"Slytherin\")\n    case _:\n        print(\"Who?\")\n</code></pre>"},{"location":"backend/python/#_1","title":"\u6982\u7387\u62bd\u53d6","text":"<ul> <li>\u5047\u5982\u73b0\u5728\u8981\u4ee5\u7279\u5b9a\u6982\u7387\u62bd\u53d6\u5217\u8868\u91cc\u5143\u7d20\uff0c\u53ef\u4ee5\u7528 <code>random.choices(todo_list,[0.05,0.9,0.05])</code> </li> <li>\u4f46\u662f\u5047\u5982\u8981\u662f\u5217\u8868\u62bd\u53d6\u4e00\u4e2a\u5143\u7d20, <code>choices</code> \u5c31\u4e0d\u592a\u65b9\u4fbf\uff0c\u53ef\u4ee5\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff1a <pre><code>p = random.uniform(0, 1)\n\nthreshold = 0.8\n\nif p &gt;= threshold:\n    print(\"yes\")\nelse:\n    print(\"no\")\n</code></pre></li> </ul>"},{"location":"backend/python/#bad-smell","title":"bad smell","text":"item in list <p>\u989d\uff0c\u670b\u53cb\u4eec\u597d\uff0c\u6211\u662fwq\u3002\u521a\u624d\u6709\u4e2a\u670b\u53cb\u95ee\u6211\uff1a\u4eba\u5de5\u667a\u80fd\u7fa4\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u4e86\uff1f\u6211\u8bf4\u600e\u4e48\u56de\u4e8b\u3002\u6211\u4e00\u770b\uff0c\u54e6\uff0c\u539f\u6765\u662f\u4eba\u5de5\u667a\u80fd\u8bfe\u51fa\u5934\u6b4c\u5b9e\u9a8c\uff0c\u556a\u7684\u4e00\u4e0b\uff0c\u5c31\u70b9\u8fdb\u6765\u4e86\uff0c\u5f88\u5feb\u554a\uff0c\u4e0a\u6765\u5c31\u662f\u4e00\u4e2a <code>judge_repeat</code> \u7684\u5faa\u73af\uff0c\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u80fd\u9ad8\u8fbe\u56db\u91cd\u7684 <code>judge_last</code> \u5faa\u73af\uff0c\u6211\u5168\u90e8\u9632\u51fa\u53bb\u4e86\u554a\uff0c\u9632\u51fa\u53bb\u4ee5\u540e\u81ea\u7136\u662f\u4f20\u7edf\u529f\u592b\u4ee5\u70b9\u5230\u4e3a\u6b62\u3002\u6211\u7b11\u4e00\u4e0b\u3002\u8865\u5145\u597d\u4e86\u76f4\u63a5\u70b9\u63d0\u4ea4\uff0c\u4e24\u5206\u591a\u949f\u4ee5\u540e\uff0c\u672a\u77e5\u7684\u7528\u4f8b\u8fd8\u6ca1\u8fc7\uff08\u6000\u7591\u662f\u6c49\u5b57\u987a\u5e8f\u95ee\u9898\uff09\uff0c\u6211\u8bf4\u5a77\u5a77\u3002</p> <p>\u8fd9\u4fe9\u4e2a\uff0c\u51fd\u6570\uff0c\u4e0d\u8bb2\u6b66\u5fb7\uff0c\u6765\u9a97\uff0c\u6765\u5077\u88ad\uff0c\u621121\u5c81\u7684\uff0c\u5c0f\u540c\u5fd7\uff0c\u8fd9\u597d\u5417\uff1f\u8fd9\u4e0d\u597d\u3002\u6211\u529d\uff0c\u8fd9\u4e24\u4e2a\uff0c\u51fd\u6570\uff0c\u597d\u81ea\u4e3a\u4e4b\uff0c\u597d\u597d\u53cd\u601d\uff0c\u4ee5\u540e\uff0c\u4e0d\u8981\u518d\u72af\uff0c\u8fd9\u6837\u806a\u660e\uff0c\u5c0f\u806a\u660e\uff0c\u554a\uff0ccoding\uff0c\u8981\u4ee5\u51c0(clean code)\u4e3a\u8d35\uff0c\u8981\u8bb2clean\uff0c\u4e0d\u8981\u641e\uff0c\u7a9d\u91cc\u6597\uff0c\u8c22\u8c22\u670b\u53cb\u4eec\u3002</p> <p>\u66f4\u65b01\uff1a\ud83e\udd2c\uff0c\u80fd\u4e0a\u4e00\u4e2a\u7528\u4f8b\u7528\u4e2d\u6587\u7b26\u53f7\uff0c\u4e0b\u4e00\u4e2a\u7528\u4f8b\u7528\u82f1\u6587\u7b26\u53f7\u5206\u9694\uff0c\u5bfc\u81f4\u5361\u8bc4\u6d4b\u7684\u6211\u662f\u5934\u4e00\u56de\u9047\u5230\u3002\u6211\u611f\u89c9\u51fa\u8fd9\u4e2a\u9898\u7684\u4eba\u5e94\u8be5\u662f\u6ca1\u6709\u7ffb\u8fc7python\u7684\u4e66\uff0c\u6709\u4e00\u79cdC++\u76f4\u63a5\u76f2\u8f6c\u7684\u7f8e\ud83d\ude05\u3002</p> <p>\u66f4\u65b02\uff1a\u4e4b\u540e\u7684\u597d\u4e86\u5f88\u591a\uff0c\u81f3\u5c11\u662f\u4f1apython\u7684\u4eba\u8d1f\u8d23\u4e86</p> <pre><code># \u6ca1\u6709\u4f7f\u7528\u597d item in list \u7684\u4e11\u6001\ndef judge_repeat(value, list=[]):\n    for i in range(0, len(list)):\n        if (list[i] == value):\n            return 1\n        else:\n            if (i != len(list) - 1):\n                continue\n            else:\n                return 0\n\ndef judge_last(list: list):\n    for i in list:\n        if i == '23':  # \u98df\u8089\u7c7b\n            for i in list:\n                if i == '12':  # \u9ec4\u8910\u8272\n                    for i in list:\n                        if i == '21':  # \u54fa\u4e73\u7c7b\n                            for i in list:\n                                if i == '13':  # \u6709\u6591\u70b9\n                                    print(\"\u9ec4\u8910\u8272\uff0c\u6709\u6591\u70b9,\u54fa\u4e73\u7c7b\uff0c\u98df\u8089\u7c7b-&gt;\u91d1\u94b1\u8c79\\n\")\n                                    return 0\n                                elif i == '14':  # \u6709\u9ed1\u8272\u6761\u7eb9\n                                    print(\"\u9ec4\u8910\u8272\uff0c\u6709\u9ed1\u8272\u6761\u7eb9\uff0c\u54fa\u4e73\u7c7b\uff0c\u98df\u8089\u7c7b-&gt;\u864e\\n\")\n                                    return 0\n        elif i == '24':  # \u8e44\u7c7b\n            for i in list:\n                if i == '13':  # \u6709\u6591\u70b9\n                    for i in list:\n                        if i == '15':  # \u957f\u8116\n                            for i in list:\n                                if i == '16':  # \u957f\u817f\n                                    print(\"\u6709\u6591\u70b9\uff0c\u6709\u9ed1\u8272\u6761\u7eb9\uff0c\u957f\u8116\uff0c\u8e44\u7c7b-&gt;\u957f\u9888\u9e7f\\n\")\n                                    return 0\n</code></pre>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2022/09/22/20th/","title":"20th","text":"<p>year by year</p>"},{"location":"blog/2022/09/22/20th/#21st","title":"21st","text":"<p>\u4eca\u5e74\u768410\u67083\u65e5\u5728\u5bb6\u8eba\u4e86\u4e00\u5929\uff0c\u56fd\u5e86\u53c2\u52a0\u4e86\u4e24\u4e2a\u5a5a\u793c\uff0c\u5f97\u51fa\u7684\u611f\u609f\u662f\u4eba\u751f\u592a\u77ed\u6682\u4e86\uff0c\u5e94\u8be5\u8d76\u7d27\u5f04\u6e05\u695a\u81ea\u5df1\u60f3\u8981\u4ec0\u4e48\uff0c\u662f\u4e92\u8054\u7f51\u5377\u751f\u5377\u6b7b\uff0c\u8003\u516c\uff0c\u4fddmaybe\ud83d\ude36 \u8003\u7814\u4e2d\u7684\u54ea\u4e00\u6761\u8def\u3002</p> <p>\u611f\u89c9\u56de\u6765\u4e4b\u540e\u63d0\u4e0d\u8d77\u52b2\uff0c\u5fc3\u60c5\u6bd4\u8f83\u4f4e\u843d\uff0c\u5e0c\u671b\u5b89\u5b89\u7a33\u7a33\u7684\u5ea6\u8fc7\u4e00\u751f\uff0c\u8981\u662f\u5305\u5206\u914d\u5c31\u597d\u4e86</p>"},{"location":"blog/2022/09/22/20th/#20ty","title":"20ty","text":"<p>\u4eca\u59297\uff1a40\u8d77\u6765\u540e5\u98df\u5802\u5403\u7684\u8c46\u6c99\u997c\u3001\u9e21\u86cb\u3001\u8c46\u6d46 \u56de\u6765\u540e\u6536\u62fe\u4e00\u4e0b\u53bb\u767e\u56e2\uff0c \u6536\u83b7\u4e86\u5355\u8f66\u5bbd\u724c\u4e00\u526f\u3001\u5927\u5de5\u94a5\u5319\u6263\u4e00\u4e2a\u3001\u660e\u4fe1\u72472\u5f20\u3001\u4eca\u5e74\u7684\u76d6\u7ae0\u6ca1\u6709\u53bb\u5e74\u8981\u6c42\u591a\uff0c\u4eca\u5e7472\u4e2a\uff0c\u53bb\u5e74100\u4e2a\uff0c \u5f88\u5e78\u8fd0\uff0c\u4e00\u4e0b\u5c31\u6478\u5230\u9ed1\u6843A\u3002\u4e2d\u5348\u5f00\u59cb\u4e0b\u5927\u96e8\uff0c\u4e0b\u5348\u6ca1\u53bb\uff0c\u4f30\u8ba1\u90fd\u6536\u644a\u4e86\u3002</p> <p>\u53bb\u5e74\u7684\u4eca\u5929\u6211\u53d1\u4e86\u4e00\u6bb5\u300a\u94a2\u94c1\u662f\u600e\u6837\u70bc\u6210\u7684\u300b\u7684\u201d\u4eba\u7684\u751f\u547d\u53ea\u6709\u4e00\u6b21\u90a3\u6bb5\u201c\uff0c\u4eca\u5e74\u6ca1\u53d1\uff0c\u6216\u8bb8\u662f\u56e0\u4e3a\u60f3\u6cd5\u53d8\u4e86\ud83d\ude05\u3002</p> <p>\u660e\u5929\u5e94\u8be5\u5c31\u53bb\u5f00\u53d1\u533a\u4e86\uff0c\u8d70\u4e86\u3002</p>"},{"location":"blog/2023/10/20/reading/","title":"Reading","text":"<p>reading books</p>"},{"location":"blog/2023/10/20/reading/#code","title":"code","text":"<p>\u63a8\u8350\u8bbe\u8ba1\u6a21\u5f0f\u4e4b\u7985\uff0c\u8fd9\u4e2a\u770b\u7740\u5f88\u8212\u670d</p>"},{"location":"blog/2023/10/20/reading/#_1","title":"\u79d1\u5e7b\u5c0f\u8bf4","text":"<p>\u300a\u592a\u9633\u56da\u7b3c\u300b\u5317\u7406\u5de5\u51fa\u7248\u793e</p> <p>\u592a\u9633\u56da\u7b3c</p> <ul> <li>\u5580\u5587\u6606\u4ed1</li> <li>\u5178\u578b\u7684\u786c\u79d1\u5e7b\uff0c\u4e92\u8865\u80fd\u53d1\u5c55\u5f97\u66f4\u597d</li> </ul> <p>\u795e\u4ec6</p> <ul> <li>\u7d22\u4f55\u592b</li> <li>\u4eba\u5de5\u667a\u80fd\u89c9\u5f97\u53d1\u5c55\u7684\u592a\u6162\u4e86\uff0c\u76f4\u63a5\u63a5\u7ba1\u3002</li> </ul> <p>\u5f08</p> <ul> <li>\u7d22\u4f55\u592b</li> <li>\u50b2\u6162\u624d\u662f\u751f\u5b58\u7684\u969c\u788d\uff0c\u6839\u636e\u957f\u8fdc\u7ed3\u679c\u6765\u51b3\u5b9a\u77ed\u671f\u52a8\u4f5c\u672a\u5fc5\u662f\u597d\u4e8b</li> </ul> <p>\u300aAI\u89c9\u9192\u300b \u5317\u7406\u5de5\u51fa\u7248\u793e</p> <p>\u592a\u539f\u4e4b\u604b</p> <ul> <li>\u4f5c\u8005\uff1a\u5218\u6148\u6b23</li> <li>\u611f\u53d7\uff1a\u7ecf\u5178\u4f5c\u54c1\uff0c\u5e94\u8be5\u662f\u5931\u610f\u65f6\u7684\u4f5c\u54c1\uff0c\u5982\u679c\u770b\u5b8c\u4e86\u63a8\u8350\u5b66\u4e60\u4e00\u4e0b <code>cd ~ ; rm -rf</code> \u6216\u8005\u6b63\u5219\u8868\u8fbe\u5f0f\ud83d\ude0b</li> </ul> <p>\u90ae\u5dee</p> <ul> <li>\u4f5c\u8005\uff1a\u95f0\u5e74</li> <li>\u4e2d\u89c4\u4e2d\u77e9\uff0c\u4e0e\u8d75\u672c\u5c71\u7684\u843d\u53f6\u5f52\u6839\u5f02\u66f2\u540c\u5de5\u4e4b\u5999</li> </ul> <p>\u5fd2\u4fee\u65af\u4e4b\u5b50</p> <ul> <li>\u4f5c\u8005\uff1a\u7d22\u4f55\u592b</li> <li>\u8fd9\u4e2a\u6536\u83b7\u662f\u5211\u7f5a\u5982\u679c\u662f\u8b66\u6212\u4ed6\u4eba\u4e0d\u518d\u72af\u6cd5\uff0c\u90a3\u4e48\u65e0\u671f\u5f92\u5211\u5bf9\u4e8e\u4e00\u4e2a\u53cd\u590d\u79fb\u690d\u5230\u65b0\u8eab\u4f53\u7684\u610f\u8bc6\u624d\u662f\u6700\u5927\u7684\u6298\u78e8</li> </ul> <p>\u9ece\u660e</p> <ul> <li>\u4f5c\u8005\uff1a\u7126\u7b56</li> <li>\u4eba\u5411\u81ea\u7136\u53d1\u8d77\u51b2\u51fb\uff08\u6500\u767b\u73e0\u5cf0\uff09</li> </ul> <p>\u519c\u673a\u9769\u547d</p> <ul> <li>\u4f5c\u8005\uff1a\u5580\u62c9\u6606\u4ed1</li> <li>\u8054\u52a8\u300a\u8d61\u517b\u4eba\u7c7b\u300b\u91cc\u7684\u6ed1\u819b\uff0c\u8fd9\u91cc\u53eb\u5de6\u8f6e\uff0c\u5f88\u96be\u4e0d\u6000\u7591\u5218\u5de5\u5c31\u662f\u5218\u6148\u6b23\uff0c\u4f46\u662f\u63d0\u51fa\u7684\u8bbe\u60f3\u8fd8\u662f\u5f88\u6709\u8da3\u7684\uff0c\u8d8a\u9ad8\u7ea7\u7684\u751f\u7269\u5bf9\u7279\u5b9a\u73af\u5883\u4f9d\u8d56\u8d8a\u4e25\u91cd\uff0c\u53cd\u800c\u662f\u57fa\u7840\u7684\u66f4\u80fd\u9002\u5e94\u3002</li> <li>\u62d3\u5c55\u9605\u8bfb\uff1aLiskov substitution principle</li> </ul> <p>\u4e0e\u673a\u5668\u4eba\u540c\u5c45</p> <ul> <li>\u4f5c\u8005\uff1a\u963f\u7f3a</li> <li>\u4e4b\u524d\u770b\u8fc7\uff0c\u963f\u7f3a\u7684\u4f5c\u54c1\u4eba\u6587\u5173\u6000\u6bd4\u8f83\u5f3a\uff0c\u7ae5\u8bdd\u6545\u4e8b</li> </ul> <p>\u6d88\u9632\u5458</p> <ul> <li>\u4f5c\u8005\uff1a\u738b\u4f83\u745c</li> <li>\u8fd9\u4e2a\u662f\u8fd9\u672c\u4e66\u91cc\u6211\u6bd4\u8f83\u559c\u6b22\u7684\u4e00\u4e2a\uff0c\u66fe\u7ecf\u4ee5\u6551\u706b\u4e3a\u4eba\u751f\u7406\u60f3\u7684\u4eba\u6539\u9020\u540e\u88ab\u540e\u6765\u53d1\u5c55\u66f4\u52a0\u731b\u70c8\u7684\u79d1\u6280\u53d6\u4ee3\u4e86\uff0c\u56e0\u6b64\u653e\u706b\u4e3a\u6551\u706b\u3002\u96be\u8fc7\u3002</li> <li>\u4f1a\u4e0d\u4f1a\u7a0b\u5e8f\u5458\u4e5f\u6709\u8fd9\u4e2a\u5371\u9669\u5462\uff1f\u5feb\u52a0\u901f\u5230\u5168\u4eba\u7c7b\u90fd\u88ab\u53d6\u4ee3\ud83d\udc4d</li> </ul> <p>\u6839\u6e90\u00b7\u5973</p> <ul> <li>\u674e\u537f\u4e4b</li> <li>\u7a0b\u5e8f\u5458\u6700\u559c\u6b22\u7684\u4e00\u96c6\uff0c\u5728\u5e73\u51e1\u4e2d\u53d1\u73b0\u7f8e\uff08\u706b\u7ed2\u6740\u6bd2\u5168\u76d8\u626b\u63cf\uff09</li> </ul> <p>\u84dd\u8c03AI\u7279\u8f91</p> <ul> <li>\u84dd\u8c03</li> <li>\u4ece\u4e2d\u6311\u4e86\u51e0\u4e2a\u5199\u611f\u53d7\uff08wq\uff09</li> <li>\u811a\u8dbe\u548c\u5243\u5200\uff1a\u865a\u62df\u5f71\u54cd\u771f\u5b9e\uff0c\u4f46\u662f\u6709\u70b9\u79bb\u8c31\uff0c\u6bd4\u5982\u8bf4\u5272\u6389\u773c\u775b\u548c\u811a\u8dbe\u600e\u4e48\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5f53\u65f6\u4f3c\u4e4e\u662f\u5728\u56fa\u5b9a\u7684\u673a\u5668\u4e0a\u73a9\u6e38\u620f\u3002\u9664\u53bb\u903b\u8f91\u4e0a\u7684\u7591\u60d1\uff0c\u8fd8\u662f\u4e0d\u9519\u7684\u4f5c\u54c1</li> <li>AI\u56f0\u5883\uff1a\u6700\u559c\u6b22\u7684\uff0c\u8bbd\u523a\u4e00\u4e9b\u53cc\u6807\u7684\u4eba\uff0c\u7ed3\u5c3e\u66f4\u662f\u6b27\u4ea8\u5229\u5f0f\u7ed3\u5c3e\uff0c\u5f3a\u70c8\u63a8\u8350</li> <li>\u8be1\u604b\uff1a\u5992\u4e4b\u672c\u80fd\uff0c\u54c8\u4eba\uff0c\u4f30\u8ba1\u4e4b\u524d\u5728\u533f\u540d\u7248x\u5c9b\u770b\u7684\u90fd\u662f\u5706\u6ee1\u7ed3\u5c40\uff0c\u8fd9\u4e2a\u662f\u75c5\u5a07\u7ed3\u5c40\u3002\u7537\u4eba\u7231\u4e0a\u4e86\u5973\u673a\u5668\u4eba\uff0c\u5973\u673a\u5668\u4eba\u7231\u4e0a\u4e86\u7537\u673a\u5668\u4eba\u3002</li> <li>\u65e7\u4eba\u7c7b\uff1a\u5bfb\u627e\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u6b7b\u4ea1</li> <li>\u6d3b\u8def\uff1a\u8fd9\u4e2a\u662f\u4e5f\u5f88\u6709\u73b0\u5b9e\u610f\u4e49\u7684\u77ed\u7bc7\u3002\u6cbb\u7597\u771f\u4eba\u7684\u5168\u79d1\u533b\u751f</li> <li>\u5931\u4e1a\uff1a\u8d5b\u535a\u8d4e\u8eab\u3002</li> </ul> <p>\u603b\u7684\u611f\u53d7\uff1aAI\u4f1a\u4e0d\u4f1a\u6df1\u523b\u6539\u53d8\u4eba\u7684\u793e\u4f1a\u7ed3\u6784\uff0c\u4f30\u8ba1\u662f\u5f88\u96be\u5728\u6709\u751f\u4e4b\u5e74\u89c1\u5230\u5f3a\u4eba\u5de5\u667a\u80fd\u4e86\uff0c\u53ef\u80fd\u914d\u5bf9\u5269\u4e0b\u7684\u4eba\u53ef\u4ee5\u627e\u5230\u673a\u5668\u7684\u60c5\u611f\u6170\u85c9\u3002\u83ab\u540d\u60f3\u5230\u4e00\u53e5\u8bcd\uff1a</p> <p>\u4f17\u91cc\u5bfb\u4ed6\u5343\u767e\u5ea6\uff0c\u84e6\u7136\u56de\u9996\uff0c\u90a3\u4eba\u5374\u5728\u706f\u706b\u9611\u73ca\u5904</p> <p>\u7b2c\u5341\u4e00\u5c4a\u661f\u4e91\u5956</p> <p>\u300a\u7b97\u6cd5\u300b\u300a\u5bbf\u4e3b\u300b \u4e07\u5377\u51fa\u7248\u516c\u53f8</p> <p>\u62df\u4eba\u7b97\u6cd5</p> <ul> <li>\u4f5c\u8005\uff1a\u6768\u665a\u6e05</li> <li>\u611f\u53d7\uff1a\u610f\u8bc6\u548c\u7b97\u6cd5\u7684\u754c\u9650\u4e0d\u662f\u975e\u5e38\u660e\u786e\u7684</li> </ul> <p>\u4eba\u751f\u7b97\u6cd5</p> <ul> <li>\u4f5c\u8005\uff1a\u9648\u6978\u5e06</li> <li>\u611f\u53d7\uff1a\u6ca1\u592a\u660e\u767d\uff0c\u597d\u50cf\u662f\u751f\u6d3b\u5373\u4f7f\u6709\u591a\u79cd\u5206\u652f\uff0c\u6700\u540e\u4eba\u751f\u6001\u5ea6\u8fd8\u662f\u56de\u5f52\u73b0\u5b9e</li> </ul> <p>\u5929\u8c61\u796d\u53f8</p> <ul> <li>\u4f5c\u8005\uff1a\u5b9d\u6811</li> <li>\u611f\u53d7\uff1a\u79d1\u5b66\u548c\u4eba\u6027\uff08\u7231\u60c5\u3001\u5bbd\u6055\uff09\u7684\u7ed3\u5408\uff0c\u597d\u770b\uff01</li> </ul> <p>\u9000\u884c\u8005</p> <ul> <li>\u4f5c\u8005\uff1a\u5b9d\u6811</li> <li>\u611f\u53d7\uff1a\u8bbe\u5b9a\u6709\u8da3\uff0c\u5012\u9000\u53ea\u80fd\u9000\u5230\u4e0a\u4e00\u6b21\u7684\u524d\u9762\uff0c\u90a3\u4e48\u53d6\u6781\u9650\u5c31\u4f1a\u9000\u5230\u5b87\u5b99\u7206\u70b8\u3002\u6838\u5fc3\u8fd8\u662f\u6d3b\u5728\u5f53\u4e0b</li> </ul> <p>\u5bbf\u4e3b</p> <ul> <li>\u4f5c\u8005\uff1a\u9648\u6978\u5e06</li> <li>\u611f\u53d7\uff1a\u5bc4\u751f\u866b\u63a7\u5236\u8682\u8681\u722c\u5230\u9ad8\u5904\u88ab\u9e1f\u7c7b\u6355\u98df\uff0c\u7136\u800c\u5bc4\u751f\u866b\u7684\u771f\u6b63\u517b\u5206\u662f\u9e1f\u7caa\uff0c\u9e1f\u7caa\u843d\u5230\u5730\u4e0a\u53c8\u5f62\u6210\u95ed\u73af</li> </ul> <p>\u5fd8\u5fe7\u8349\uff1a</p> <ul> <li>\u4f5c\u8005\uff1a\u963f\u7f3a</li> <li>\u611f\u53d7\uff1a\u521a\u5f00\u59cb\u770b\u5c31\u770b\u5230\u4e27\u5c38\u53c8\u51fa\u73b0\u4e86\uff0c\u6ca1\u60f3\u5230\u300a\u5f7c\u5cb8\u82b1\u300b\u8fd8\u6709\u7eed\u96c6\ud83d\ude0b\uff0c\u4e27\u5c38\u4ece\u751f\u7684\u4e00\u4fa7\u6765\u5230\u6b7b\u7684\u4e00\u4fa7\uff0c\u5f7c\u5cb8\u82b1\u8ba9\u4ed6\u4eec\u56de\u5230\u4e2d\u95f4\uff0c\u5fd8\u5fe7\u8349\u8ba9\u4ed6\u4eec\u987a\u6d41\u800c\u4e0b</li> </ul> <p>\u5341\u4e03\u5e74</p> <ul> <li>\u4f5c\u8005\uff1a\u767d\u8d32</li> <li>\u611f\u53d7\uff1a\u6570\u5b66\u4e0a\u7684\u8d28\u6570\u76f8\u5173\u3002\u5bc4\u8709\u8763\u4e8e\u5929\u5730\uff0c\u6e3a\u6ca7\u6d77\u4e4b\u4e00\u7c9f\u3002</li> </ul> <p>\u7b2c\u5341\u5c4a\u661f\u4e91\u5956</p> <p>\u300a\u8d4c\u8111\u300b\u4e07\u5377\u51fa\u7248\u516c\u53f8</p> <p>\u6050\u60e7\u673a\u5668</p> <ul> <li>\u4f5c\u8005\uff1a\u9648\u6978\u5e06</li> <li>\u611f\u53d7\uff1a\u9648\u7684\u6587\u7b14\u50cf\u5c0f\u6eaa\u6d41\u6c34\uff0c\u5f88\u81ea\u7136\uff0c\u8fd9\u4e2a\u8bf4\u7684\u662f\u4eba\u7684\u7279\u5f81\u5c31\u662f\u4f1a\u6050\u60e7\u3002</li> </ul> <p>\u7f6a</p> <ul> <li>\u4f5c\u8005\uff1a\u6768\u665a\u6674</li> <li>\u611f\u53d7\uff1a\u8fd9\u4e2a\u56de\u8fc7\u5934\u6765\u770b\u786c\u79d1\u5e7b\u6210\u5206\u4e0d\u662f\u5f88\u91cd\uff0c\u5bf9\u4e8e\u6cd5\u5f8b\u548c\u4f26\u7406\u63a2\u8ba8\u7684\u66f4\u591a\u4e00\u4e9b</li> </ul> <p>\u5f7c\u5cb8\u82b1\uff1a</p> <ul> <li>\u4f5c\u8005\uff1a\u963f\u7f3a</li> <li>\u611f\u53d7\uff1a\u60f3\u8c61\u633a\u6709\u610f\u601d\uff0c\u4e27\u5c38\u548c\u4eba\u7c7b\u6c9f\u901a\uff0c\u6709\u70b9\u50cf\u7ae5\u8bdd\uff08\u8912\u4e49\uff09</li> </ul> <p>\u8d4c\u8111\uff1a</p> <ul> <li>\u4f5c\u8005\uff1a\u987e\u5f0f</li> <li>\u611f\u53d7\uff1a\u662f\u8fd9\u672c\u4e66\u91cc\u6784\u601d\u6700\u7cbe\u5de7\u7684\uff0c\u6587\u7b14\u5f88\u6709\u4e2a\u6027\uff0c\u50cf\u8bdd\u5267\u8868\u6f14\uff0c\u4e7e\u5764\u3001\u516b\u5366\u5143\u7d20\u7684\u5f15\u5165\u65b0\u5947\uff08\u4e7e\u662f\u4e91\u7aef\uff0c\u5764\u662f\u8111\u8054\u7f51\uff09</li> </ul> <p>\u6843\u82b1\u6e90\u8bb0:</p> <ul> <li>\u4f5c\u8005\uff1a\u7d22\u4f55\u592b</li> <li>\u611f\u53d7\uff1a\u8282\u594f\u5f88\u5feb\uff0c\u63a2\u8ba8\u751f\u547d\u7684\u5b58\u5728\u5f62\u5f0f\uff0c\u667a\u4eba\u662f\u4eba\u7c7b\uff0c\u90a3\u4e48\u667a\u4eba\u57fa\u56e0\u7684\u8868\u8fbe\u4ea7\u7269\u5f53\u7136\u4e5f\u662f\u4eba\u7c7b.jpg</li> </ul>"},{"location":"blog/2023/10/20/reading/#_2","title":"\u5927\u533b","text":"<p>\u521d\u89c1\u300a\u5927\u533b\u300b\u662f\u5728\u5927\u4e8c\u4e0b\u7684\u4e00\u5929\uff0c\u56fe\u4e66\u9986\u65b0\u5230\u4e86\u4e00\u6279\u4e66\uff0c\u515c\u515c\u8f6c\u8f6c\uff0c\u627e\u5230\u4e86\u8fd9\u672c\u4e66\uff0c\u6b63\u597d\u56e0\u4e3a\u524d\u6bb5\u65f6\u95f4\u9a6c\u4f2f\u5eb8\u5de1\u56de\u7b7e\u552e\uff0c\u597d\u50cf\u63d0\u5230\u4e86\u8fd9\u672c\uff0c\u800c\u4e14\u5927\u8fde\u7406\u5de5\u4e5f\u662f\u5176\u4e2d\u4e00\u7ad9\uff0c\u56e0\u4e3a\u6709\u4e00\u672c\u662f\u4eb2\u7b14\u7b7e\u540d\ud83d\ude0b</p> <p>\u521a\u5f00\u59cb\u770b\u611f\u89c9\u50cf\u9a6c\u4f2f\u5eb8\u64c5\u957f\u7684\u5192\u9669\u7fa4\u50cf\u5c0f\u8bf4\uff0c\u540e\u6765\u611f\u89c9\u8d8a\u6765\u8d8a\u6709\u610f\u601d\uff0c\u4f46\u662f\u53ea\u627e\u5230\u4e86\u4e0a\u518c\uff08\u7834\u6653\u7bc7\uff09\uff0c\u70b9\u540d\u6279\u8bc4\u5927\u8fde\u7406\u5de5\u5927\u5b66\u5f00\u53d1\u533a\u6821\u533a\u56fe\u4e66\u9986<sup>1</sup>\uff0c\u540e\u6765\u56fe\u4e66\u9986PDA\u8350\u8d2d\u624d\u53d1\u73b0\u65b0\u4e0a\u4e86\u4e0b\u518c\uff08\u65e5\u51fa\u7bc7\uff09\uff0c\u4f46\u662f\u6ca1\u627e\u5230\uff0c\u4e0azlibrary\u770b\u7684\u3002\u5386\u53f2\u7684\u539a\u91cd\u8ba9\u4eba\u5fc3\u6f6e\u6f8e\u6e43\uff0c\u5370\u8c61\u6df1\u523b\u3002</p> <p>2023/11/27 update: \u4eca\u5929\u624d\u6765\u5b9e\u4f53\u4e66\uff0c\u4e4b\u524d\u6839\u672c\u5c31\u6ca1\u5230\u5f00\u53d1\u533a\u3002\ud83d\ude05</p> <p>\u4f60\u4e0d\u5173\u5fc3\u65f6\u5c40\uff0c\u65f6\u5c40\u4e5f\u4f1a\u6765\u5173\u5fc3\u4f60</p> \u5927\u533b\u7cbe\u8bda-\u5b59\u601d\u9088 <p>\u5f20\u6e5b\u66f0\uff1a\u592b\u7ecf\u65b9\u4e4b\u96be\u7cbe\uff0c\u7531\u6765\u5c1a\u5df2\u3002\u4eca\u75c5\u6709\u5185\u540c\u800c\u5916\u5f02\uff0c\u4ea6\u6709\u5185\u5f02\u800c\u5916\u540c\uff0c\u6545\u4e94\u810f\u516d\u8151\u4e4b\u76c8\u865a\uff0c\u8840\u8109\u8363\u536b\u4e4b\u901a\u585e\uff0c\u56fa\u975e\u8033\u76ee\u4e4b\u6240\u5bdf\uff0c\u5fc5\u5148\u8bca\u5019\u4ee5\u5ba1\u4e4b\u3002\u800c\u5bf8\u53e3\u5173\u5c3a\uff0c\u6709\u6d6e\u6c89\u5f26\u7d27\u4e4b\u4e71\uff1b\u4fde\u7a74\u6d41\u6ce8\uff0c\u6709\u9ad8\u4e0b\u6d45\u6df1\u4e4b\u5dee\uff1b\u808c\u80a4\u7b4b\u9aa8\uff0c\u6709\u539a\u8584\u521a\u67d4\u4e4b\u5f02\u3002\u552f\u7528\u5fc3\u7cbe\u5fae\u8005\uff0c\u59cb\u53ef\u4e0e\u8a00\u4e8e\u5179\u77e3\u3002\u4eca\u4ee5\u81f3\u7cbe\u81f3\u5fae\u4e4b\u4e8b\uff0c\u6c42\u4e4b\u4e8e\u81f3\u7c97\u81f3\u6d45\u4e4b\u601d\uff0c\u5c82\u4e0d\u6b86\u54c9\uff1f\u82e5\u76c8\u800c\u76ca\u4e4b\uff0c\u865a\u800c\u635f\u4e4b\uff0c\u901a\u800c\u5f7b\u4e4b\uff0c\u585e\u800c\u58c5\u4e4b\uff0c\u5bd2\u800c\u51b7\u4e4b\uff0c\u70ed\u800c\u6e29\u4e4b\uff0c\u662f\u91cd\u52a0\u5176\u75be\uff0c\u800c\u671b\u5176\u751f\uff0c\u543e\u89c1\u5176\u6b7b\u77e3\u3002\u6545\u533b\u65b9\u535c\u7b6e\uff0c\u827a\u80fd\u4e4b\u96be\u7cbe\u8005\u4e5f\u3002\u65e2\u975e\u795e\u6388\uff0c\u4f55\u4ee5\u5f97\u5176\u5e7d\u5fae\uff1f\u4e16\u6709\u611a\u8005\uff0c\u8bfb\u65b9\u4e09\u5e74\uff0c\u4fbf\u8c13\u5929\u4e0b\u65e0\u75c5\u53ef\u6cbb\uff0c\u53ca\u6cbb\u75c5\u4e09\u5e74\uff0c\u4e43\u77e5\u5929\u4e0b\u65e0\u65b9\u53ef\u7528\u3002\u6545\u5b66\u8005\u5fc5\u987b\u535a\u6781\u533b\u6e90\uff0c\u7cbe\u52e4\u4e0d\u5026\uff0c\u4e0d\u5f97\u9053\u542c\u9014\u8bf4\uff0c\u800c\u8a00\u533b\u9053\u5df2\u4e86\uff0c\u6df1\u81ea\u8bef\u54c9\uff01</p> <p>\u51e1\u5927\u533b\u6cbb\u75c5\uff0c\u5fc5\u5f53\u5b89\u795e\u5b9a\u5fd7\uff0c\u65e0\u6b32\u65e0\u6c42\uff0c\u5148\u53d1\u5927\u6148\u607b\u9690\u4e4b\u5fc3\uff0c\u8a93\u613f\u666e\u6551\u542b\u7075\u4e4b\u82e6\u3002\u82e5\u6709\u75be\u5384\u6765\u6c42\u6551\u8005\uff0c\u4e0d\u5f97\u95ee\u5176\u8d35\u8d31\u8d2b\u5bcc\uff0c\u957f\u5e7c\u598d\u86a9\uff0c\u6028\u4eb2\u5584\u53cb\uff0c\u534e\u5937\u611a\u667a\uff0c\u666e\u540c\u4e00\u7b49\uff0c\u7686\u5982\u81f3\u4eb2\u4e4b\u60f3\u3002\u4ea6\u4e0d\u5f97\u77bb\u524d\u987e\u540e\uff0c\u81ea\u8651\u5409\u51f6\uff0c\u62a4\u60dc\u8eab\u547d\uff0c\u89c1\u5f7c\u82e6\u607c\uff0c\u82e5\u5df1\u6709\u4e4b\uff0c\u6df1\u5fc3\u51c4\u6006\uff0c\u52ff\u907f\u9669\u5dc7\uff0c\u665d\u591c\u5bd2\u6691\uff0c\u98e2\u6e34\u75b2\u52de\uff0c\u4e00\u5fc3\u8d74\u6551\uff0c\u7121\u4f5c\u5de5\u592b\u884c\u8de1\u4e4b\u5fc3\uff0c\u5982\u6b64\u53ef\u505a\u84bc\u751f\u5927\u91ab\uff0c\u53cd\u4e4b\u5247\u662f\u542b\u9748\u9245\u8cca\u3002\u81ea\u53e4\u660e\u8d24\u6cbb\u75c5\uff0c\u591a\u7528\u751f\u547d\u4ee5\u6d4e\u5371\u6025\uff0c\u867d\u66f0\u8d31\u755c\u8d35\u4eba\uff0c\u81f3\u4e8e\u7231\u547d\uff0c\u4eba\u755c\u4e00\u4e5f\u3002\u635f\u5f7c\u76ca\u5df1\uff0c\u7269\u60c5\u540c\u60a3\uff0c\u51b5\u4e8e\u4eba\u4e4e\uff1f\u592b\u6740\u751f\u6c42\u751f\uff0c\u53bb\u751f\u66f4\u8fdc\uff0c\u543e\u4eca\u6b64\u65b9\u6240\u4ee5\u4e0d\u7528\u751f\u547d\u4e3a\u836f\u8005\uff0c\u826f\u7531\u6b64\u4e5f\u3002\u5176\u867b\u866b\u6c34\u86ed\u4e4b\u5c5e\uff0c\u5e02\u6709\u5148\u6b7b\u8005\uff0c\u5219\u5e02\u800c\u7528\u4e4b\uff0c\u4e0d\u5728\u6b64\u4f8b\u3002\u53ea\u5982\u9e21\u5375\u4e00\u7269\uff0c\u4ee5\u5176\u6df7\u6c8c\u672a\u5206\uff0c\u5fc5\u6709\u5927\u6bb5\u8981\u6025\u4e4b\u5904\uff0c\u4e0d\u5f97\u5df2\u9690\u5fcd\u800c\u7528\u4e4b\uff0c\u80fd\u4e0d\u7528\u8005\uff0c\u65af\u4e3a\u5927\u54f2\uff0c\u4ea6\u6240\u4e0d\u53ca\u4e5f\u3002\u5176\u6709\u60a3\u75ae\u75cd\u4e0b\u75e2\uff0c\u81ed\u79fd\u4e0d\u53ef\u77bb\u89c6\uff0c\u4eba\u6240\u6076\u89c1\u8005\uff0c\u4f46\u53d1\u60ed\u6127\u51c4\u601c\u5fe7\u6064\u4e4b\u610f\uff0c\u4e0d\u5f97\u8d77\u4e00\u5ff5\u8482\u82a5\u4e4b\u5fc3\uff0c\u662f\u543e\u4e4b\u5fd7\u4e5f\u3002</p> <p>\u592b\u5927\u533b\u4e4b\u4f53\uff0c\u6b32\u5f97\u6f84\u795e\u5185\u89c6\uff0c\u671b\u4e4b\u4fe8\u7136\uff0c\u5bbd\u88d5\u6c6a\u6c6a\uff0c\u4e0d\u768e\u4e0d\u6627\uff0c\u7701\u75c5\u8bca\u75be\uff0c\u81f3\u610f\u6df1\u5fc3\uff0c\u8be6\u5bdf\u5f62\u5019\uff0c\u7ea4\u6beb\u52ff\u5931\uff0c\u5904\u5224\u9488\u836f\uff0c\u65e0\u5f97\u53c2\u5dee\uff0c\u867d\u66f0\u75c5\u5b9c\u901f\u6551\uff0c\u8981\u987b\u4e34\u4e8b\u4e0d\u60d1\uff0c\u552f\u5f53\u5ba1\u8c1b\u8983\u601d\uff0c\u4e0d\u5f97\u4e8e\u6027\u547d\u4e4b\u4e0a\uff0c\u7387\u800c\u81ea\u901e\u4fca\u5feb\uff0c\u9080\u5c04\u540d\u8a89\uff0c\u751a\u4e0d\u4ec1\u77e3\u3002\u53c8\u5230\u75c5\u5bb6\uff0c\u7eb5\u7eee\u7f57\u6ee1\u76ee\uff0c\u52ff\u5de6\u53f3\u987e\u76fc\uff1b\u4e1d\u7af9\u51d1\u8033\uff0c\u65e0\u5f97\u4f3c\u6709\u6240\u5a31\uff1b\u73cd\u7f9e\u8fed\u8350\uff0c\u98df\u5982\u65e0\u5473\uff1b\u91bd\u9181\uff08l\u00edngl\u00f9\uff09\u517c\u9648\uff0c\u770b\u6709\u82e5\u65e0\u3002\u6240\u4ee5\u5c14\u8005\uff0c\u592b\u4e00\u4eba\u5411\u9685\uff0c\u6ee1\u5802\u4e0d\u4e50\uff0c\u800c\u51b5\u75c5\u4eba\u82e6\u695a\uff0c\u4e0d\u79bb\u65af\u987b\uff0c\u800c\u533b\u8005\u5b89\u7136\u6b22\u5a31\uff0c\u50b2\u7136\u81ea\u5f97\uff0c\u5179\u4e43\u4eba\u795e\u4e4b\u6240\u5171\u803b\uff0c\u81f3\u4eba\u4e4b\u6240\u4e0d\u4e3a\uff0c\u65af\u76d6\u533b\u4e4b\u672c\u610f\u4e5f\u3002</p> <p>\u592b\u4e3a\u533b\u4e4b\u6cd5\uff0c\u4e0d\u5f97\u591a\u8bed\u8c03\u7b11\uff0c\u8c08\u8c11\u55a7\u54d7\uff0c\u9053\u8bf4\u662f\u975e\uff0c\u8bae\u8bba\u4eba\u7269\uff0c\u70ab\u8000\u58f0\u540d\uff0c\u8a3e\u6bc1\u8bf8\u533b\uff0c\u81ea\u77dc\u5df1\u5fb7\uff0c\u5076\u7136\u6cbb\u7625\u4e00\u75c5\uff0c\u5219\u6602\u5934\u6234\u9762\uff0c\u800c\u6709\u81ea\u8bb8\u4e4b\u8c8c\uff0c\u8c13\u5929\u4e0b\u65e0\u53cc\uff0c\u6b64\u533b\u4eba\u4e4b\u818f\u8093\u4e5f\u3002\u8001\u541b\u66f0\uff1a\u4eba\u884c\u9633\u5fb7\uff0c\u4eba\u81ea\u62a5\u4e4b\uff1b\u4eba\u884c\u9634\u5fb7\uff0c\u9b3c\u795e\u62a5\u4e4b\uff1b\u4eba\u884c\u9633\u6076\uff0c\u4eba\u81ea\u62a5\u4e4b\uff0c\u4eba\u884c\u9634\u6076\uff0c\u9b3c\u795e\u5bb3\u4e4b\u3002\u5bfb\u6b64\u8d30\u9014\uff0c\u9634\u9633\u62a5\u65bd\uff0c\u5c82\u8bec\u4e5f\u54c9\uff1f</p> <p>\u6240\u4ee5\u533b\u4eba\u4e0d\u5f97\u6043\u5df1\u6240\u957f\uff0c\u4e13\u5fc3\u7ecf\u7565\u8d22\u7269\uff0c\u4f46\u4f5c\u6551\u82e6\u4e4b\u5fc3\uff0c\u4e8e\u51a5\u8fd0\u9053\u4e2d\uff0c\u81ea\u611f\u591a\u798f\u8005\u8033\u3002\u53c8\u4e0d\u5f97\u4ee5\u5f7c\u5bcc\u8d35\uff0c\u5904\u4ee5\u73cd\u8d35\u4e4b\u836f\uff0c\u4ee4\u5f7c\u96be\u6c42\uff0c\u81ea\u7729\u529f\u80fd\uff0c\u8c05\u975e\u5fe0\u6055\u4e4b\u9053\u3002\u5fd7\u5b58\u6551\u6d4e\uff0c\u6545\u4ea6\u66f2\u788e\u8bba\u4e4b\uff0c\u5b66\u8005\u4e0d\u53ef\u803b\u8a00\u4e4b\u9119\u4fda\u4e5f\uff01</p>"},{"location":"blog/2023/10/20/reading/#_3","title":"\u957f\u5b89\u7684\u8354\u679d","text":"<p>\u9a6c\u4eb2\u738b\u7684\u5c0f\u77ed\u7bc7\uff0c\u529f\u529b\u8fd8\u662f\u4e00\u5982\u65e2\u5f80\u7684\u6df1\u539a\uff0c\u5510\u4ee3\u7684\u5b98\u804c\u8ba9\u4eba\u56de\u5230\u4e86\u300a\u957f\u5b89\u5341\u4e8c\u65f6\u8fb0\u300b\uff0c\u8bb2\u4e86\u4e00\u4e2a\u793e\u755c\u7684\u751f\u6d3b\uff0c\u4e00\u9a91\u7ea2\u5c18\u5983\u5b50\u7b11\uff0c\u6709\u4eba\u77e5\u662f\u8354\u679d\u6765\uff0c\u867d\u7136\u77ed\uff0c\u4f46\u662f\u56de\u5473\u65e0\u7a77</p>"},{"location":"blog/2023/10/20/reading/#_4","title":"\u9759\u9759\u7684\u987f\u6cb3","text":"<p>\u6709\u4e00\u70b9\u201c\u5927\u5730\u767d\u832b\u832b\u4e00\u7247\u771f\u5e72\u51c0\u201d\u7684\u611f\u89c9\uff0c\u5c55\u73b0\u4e86\u54e5\u8428\u514b\u7684\u98ce\u8c8c\u3002\u683c\u91cc\u9ad8\u5229\u00b7\u9ea6\u5217\u970d\u592b\u88ab\u65f6\u4ee3\u88f9\u631f\u7740\u3002\u611f\u89c9\u6211\u4eec\u4e5f\u662f\u4e00\u6837\uff0c\u8c01\u77e5\u9053\u80fd\u4e0d\u80fd\u505a\u51fa\u66f4\u597d\u7684\u9009\u62e9\u5462\u3002</p> <ol> <li> <p>\u4e66\u7684\u7d22\u4e66\u7801\u548c\u4e66\u67b6\u6839\u672c\u5bf9\u4e0d\u4e0a\uff0c\u548c\u4ee4\u5e0c\u5dee\u592a\u591a\u4e86\ud83d\udc4e\u00a0\u21a9</p> </li> </ol>"},{"location":"blog/2023/12/23/%E7%AC%AC17%E5%91%A8%E6%9C%89%E6%84%9F/","title":"\u7b2c17\u5468\u6709\u611f","text":"<p>\u5bf9\u5927\u5b66\u751f\u6d3b\u7684\u53cd\u601d</p>"},{"location":"blog/2023/12/23/%E7%AC%AC17%E5%91%A8%E6%9C%89%E6%84%9F/#_1","title":"\u7814\u7a76\u751f","text":"<p>\u4eca\u5929\u662f2023/12/23\uff0c\u7814\u7a76\u751f\u8003\u8bd5\u7b2c\u4e00\u5929\u3002\u5728\u56fe\u4e66\u9986\u770b\u4e86\u4e00\u4e2a\u534a\u70b9\u7684\u8f6f\u4ef6\u5de5\u7a0b\u548c\u5d4c\u5165\u5f0f\u3002\u611f\u89c9\u5f88\u865a\u65e0\u3002\u6765\u7684\u8def\u4e0a\u770b\u5230\u5b66\u6821\u7684\u53e3\u53f7\u79bb\u4e0d\u5f00\u4e0a\u5cb8\u3001\u7814\u4e00\u7b49\u8bcd\u6c47\uff0c\u7814\u7a76\u751f\u5728\u6211\u770b\u6765\u6ca1\u6709\u660e\u786e\u76ee\u7684\u5c31\u53bb\u8bfb\uff0c\u662f\u4e00\u4e2a\u5f88\u5750\u7262\u7684\u4e8b\u60c5\u3002\u5728\u76f8\u5bf9\u5c31\u4e1a\u5b9e\u529b\u597d\u4e00\u4e9b\u7684\u8f6f\u4ef6\uff0c\u5c1a\u4e14\u5982\u6b64\uff0c\u4f30\u8ba1\u8001\u4e1c\u5bb6\u5316\u5de5\u60f3\u8981\u6536\u83b7\u597d\u4e00\u70b9\u7684\u5de5\u8d44\u5c31\u66f4\u5f97\u6709\u4e2a\u7814\u7a76\u751f\u5b66\u5386\u3002\u7814\u7a76\u751f\u8d8a\u6765\u8d8a\u591a\uff0c\u5b66\u5386\u8d2c\u503c\u4f1a\u5230\u4ec0\u4e48\u5730\u6b65\u5462\uff1f\u4e5f\u8bb8\u5230\u793e\u4f1a\u4e0a\u624d\u80fd\u66f4\u597d\u7684\u4e86\u89e3\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u672a\u77e5\u7684\u672a\u6765\u54ea\u6709\u90a3\u4e48\u591a\u5cb8\u53bb\u4e0a\uff0c\u5168\u662f milestone \u5417\uff1f</p> <p>\u5ba3\u4f20\u5bf9\u8c61\u7684\u4fdd\u7814\u7237\u603b\u662f\u5b66\u4e60\u79d1\u7814\u793e\u5de5\u6837\u6837\u5f3a\uff0c\u6211\u60f3\u8d77\u6765\u5f53\u65f6\u5316\u5de5\u73ed\u7684\u5b66\u59d4\u8bc4\u4e0a\u4e86\u5341\u4f73\u5b66\u5b50\u3002\u5f53\u7136\u5f88\u597d\u3002\u4f53\u4f1a\u8bc4\u4ef7\u4f53\u7cfb\u6bd4\u8f83\u5355\u4e00\uff0c\u9664\u4e86\u641e\u5b66\u4e60\u6ca1\u60f3\u5230\u9636\u7ea7\u8de8\u8d8a\u7684\u529e\u6cd5\u3002\u4e0a\u4e86\u5927\u5b66\u6108\u52a0\u611f\u53d7\u4eba\u548c\u4eba\u7684\u80cc\u666f\u4e0d\u540c\uff0c\u597d\u4e00\u70b9\u7684\u73af\u5883\u4f1a\u6709\u66f4\u591a\u673a\u4f1a\u548c\u8bd5\u9519\uff0c\u5bb6\u5883\u5bcc\u88d5\u7684\u8fd8\u53ef\u4ee5\u9009\u62e9\u51fa\u56fd\uff0c\u56e0\u4e3a\u73b0\u5728\u8eab\u8fb9\u67093\u4e2a\u51c6\u5907\u96c5\u601d\uff08 T \u572811\u6708\u8003\u4e867.5\uff09\uff0c\u540c\u5bdd\u5ba4\u7684 Z \u73b0\u5728\u6309\u57f9\u517b\u65b9\u6848\u6309\u90e8\u5c31\u73ed\u7684\u524d\u8fdb\u3002\u4f30\u8ba1\u4e5f\u662f\u8003\u7814\u3002</p> <p>\u90fd\u8bf4\u5927\u4e09\u5e94\u8be5\u51b3\u5b9a\u597d\u65b9\u5411\u3002\u5230\u73b0\u5728\u4e5f\u6ca1\u9009\u597d\u3002\u603b\u4e4b\u5148\u628a\u7ee9\u70b9\u5377\u4e00\u4e0b\uff0c\u5bd2\u5047\u591a\u4e86\u89e3\u4e00\u4e9b\u65b9\u5411</p>"},{"location":"blog/2023/12/23/%E7%AC%AC17%E5%91%A8%E6%9C%89%E6%84%9F/#_2","title":"\u57f9\u517b","text":"<p>\u6211\u8ba4\u4e3a\u8981\u662f\u5b8c\u5168\u6309\u57f9\u517b\u65b9\u6848\u91cc\u5b66\uff0c\u4e0d\u81ea\u5df1\u591a\u4e86\u89e3\u5148\u8fdb\u7684\u66ff\u4ee3\u54c1\uff08 eg: \u4f18\u8d28\u8bfe\u7a0b\uff09\uff0c\u5c31\u4e1a\u662f\u6307\u4e0d\u4e0a\u4e86\u3002\u4e4b\u524d\u7684\u5c31\u4e1a\u5ba3\u8bb2\u4f1a\u7684\u540c\u5b66\u7ee9\u70b9\u6709\u4e9b\u662f\u5904\u4e8e\u4e2d\u4e0b\uff0c\u76f4\u63a5 all in \u5de5\u4f5c\u3002\u50cf\u6211\u8fd9\u79cd\u4f18\u67d4\u5be1\u65ad\uff0c\u4e0d\u4e0a\u4e0d\u4e0b\u7684\u4eba\u5c31\u4f1a\u60a3\u5f97\u60a3\u5931\uff0c\u9996\u9f20\u4e24\u7aef\u3002</p> <p>\u66f4\u5927\u7684\u9057\u61be\u662f\u4ece\u4e00\u89d2\u4e86\u89e3\u4e16\u754c\u540e\u53d1\u73b0\u81ea\u5df1\u7684\u65e0\u80fd\uff0c\u5b66\u4e86\u5feb2\u5e74\u8ba1\u7b97\u673a\u76f8\u5173\uff0c\u8fd8\u662f\u505c\u7559\u5728\u63a7\u5236\u53f0\uff0c\u8bed\u8a00\u65e2\u4e0d\u5e7f\u4e5f\u4e0d\u6df1\uff0c\u7b97\u6cd5\u4e5f\u662f\u5165\u95e8\u6c34\u5e73\uff0c\u633a\u5e9f\u7269\u7684\ud83d\ude30</p> <p>\u8fd8\u662f\u591a\u601d\u8003\u5427\uff0c\u6e05\u6670\u7684\u4f53\u4f1a\u6298\u78e8</p> <p>Man is only a reed, the weakest thing in nature; but he is a thinking reed.</p>"},{"location":"blog/2022/09/01/%E8%BD%AC%E4%B8%93%E4%B8%9A/","title":"\u8f6c\u4e13\u4e1a","text":"<p>\u8f6c\u4e13\u4e1a\u7ecf\u8fc7</p> <p>\u6628\u5929\u521a\u9762\u8bd5\u5b8c\uff0c\u95ee\u7684\u95ee\u9898\u633a\u6b63\u5e38\u7684\uff0c\u4f46\u662f\u81ea\u6211\u4ecb\u7ecd\u5199\u4e86\u672a\u6765\u5728\u7269\u8054\u7f51\u65b9\u5411\u6df1\u5165\u5b66\u4e60<code>\uff08\u6211\u770b\u5927\u7c7b\u57f9\u517b\u65b9\u6848\u91cc\u6709\u8fd9\u4e2a\u65b9\u5411\u7ed3\u679c\u5bc4\u4e86\uff09</code>\uff0c\u7ed3\u679c\u8001\u5e08\u8bf4\u7269\u8054\u7f51\u662f\u5728\u7f51\u7edc\u5de5\u7a0b\u91cc\u7684\uff0c\u90a3\u4e3a\u4ec0\u4e48\u8981\u62a5\u8f6f\u4ef6\u5de5\u7a0b\uff0c\u5931\u7b56\u4e86\uff0c\u786c\u7740\u5934\u76ae\u56de\u7b54\u8bf4\u5148\u628a\u8f6f\u4ef6\u57fa\u7840\u6253\u597d\uff0c\u7136\u540e\u8001\u5e08\u90fd\u7b11\u4e86\uff0c\u5c4b\u91cc\u5916\u5145\u6ee1\u4e86\u5feb\u6d3b\u7684\u7a7a\u6c14\u3002</p>"},{"location":"blog/2022/09/01/%E8%BD%AC%E4%B8%93%E4%B8%9A/#_1","title":"\u8d77\u56e0","text":"<p>\u751f\u5316\u73af\u6750\uff0c\u56db\u5927\u5929\u5751\u3002\u571f\u6728\u673a\u68b0\uff0c\u4e24\u5927\u62a4\u6cd5\u3002</p> <p>\u5f53\u65f6\u9009\u5316\u5de5\u4e0e\u5236\u836f\u7c7b\u6211\u7684\u6700\u5927\u539f\u56e0\u5c31\u662f\u9ad8\u8003\u8003\u7684\u5bc4\u4e86\u5c31\u5316\u5b66\u6b63\u5e38\u53d1\u6325\u4e86\uff0c\u7269\u740674\u3001\u5316\u5b6692\u3001\u751f\u726991.\u5fc3\u7070\u610f\u51b7\u5c31\u52a0\u4e0a\u4e86\u5316\u5de5\u4e0e\u5236\u836f\u7c7b\uff0c\u7136\u540e\u5c31\u771f\u6765\u4e86\u3002\u5f00\u5b66\u4e4b\u540e\u77e5\u4e4e\u529d\u9000\u4e5f\u770b\u4e86\u633a\u591a\u3002\u5c31\u79cd\u4e0b\u4e86run\u7684\u60f3\u6cd5\uff0c\u540e\u6765\u8ddf\u590d\u65e6\u7ecf\u6d4e\u5b66\u4e13\u4e1a\u5e26\u624b\u5b50\u5520\u4e86\uff0c\u4ed6\u4e5f\u5efa\u8bae\u6211\u5c3d\u65e9\u63d0\u6876\u8dd1\u8def\uff0c\uff08\u4ed6\u4e5f\u5410\u69fd\u91d1\u878d\u592a\u5377\u4e86\uff0c\u86cb\u7cd5\u90fd\u88ab\u5149\u534e\uff0c\u6d77\u5f52\u7b49\u4eba\u5206\u5b8c\u4e86\uff09\uff0c\u5f53\u65f6\u4ed6\u5efa\u8bae\u6211\uff1a1\u3001\u6da6\u8ba1\u7b97\u673a\uff1a2\u3001\u8003\u4e00\u4e2a\u91d1\u878d\u76f8\u5173\u7684\u65b9\u5411\uff0c\u5316\u5de5\u52a0\u91d1\u878d\u8d5b\u9053<code>\uff08\u6709\u7684\u8001\u677f\u9700\u8981\u65e2\u61c2\u91d1\u878d\u53c8\u61c2\u5316\u5de5\u7684\u4eba\uff09</code>3\u3001\u534e\u6da6\u4e07\u5bb6\ud83e\udd23\u3002\u4ece\u6b64\u5f00\u59cb\u8ba4\u771f\u8003\u8651\u4e86\u3002</p>"},{"location":"blog/2022/09/01/%E8%BD%AC%E4%B8%93%E4%B8%9A/#_2","title":"\u53d1\u5c55","text":"<p>\u5927\u4e00\u4e0a\u662f\u5728\u6da6\u4e0e\u4e0d\u6da6\u4e4b\u95f4\u5f98\u5f8a\uff0c\u5c24\u5176\u662f\u5e73\u9759\u7684\u751f\u6d3b\u4f1a\u8ba9\u4eba\u5b89\u9038\uff0c\u6210\u4e3a\u9e35\u9e1f<code>\uff08\u6211\u7684\u5ba4\u53cb\u8ddf\u6211\u5410\u69fd\u5df2\u7ecf\u8eba\u5e73\u4e86\uff0c\u5b9e\u5728\u4e0d\u884c\u5c31\u56de\u5bb6\u5f53\u8001\u5e08\uff1b\u5ba4\u53cb\u53ef\u80fd\u4f5c\u4e3a\u5316\u5de5\u884c\u4e1a\u7684\u82f1\u8bed\u7231\u597d\u8005\u9760\u753b\u753b\u4e3a\u81ea\u5df1\u84b8\u7684\u7b2c\u4e00\u7897\u7c73\u996d\ud83d\ude04\uff09</code>\u5927\u4e00\u4e0b\u662f80%\u7684\u60f3\u6cd5\u6da6\u4e86\u3002\u5728\u77e5\u4e4e\u4e0a\u4e5f\u95ee\u4e86\u5f80\u5e74\u7684\u5b66\u957f\u8f6c\u4e13\u4e1a\u7684\u8fc7\u7a0b \uff0c\u540e\u6765\u4e5f\u95ee\u4e86\u9b54\u672f\u793e\u56e2\u73b0\u4efb\u4f1a\u957f<code>\uff08\u6750\u6599-\u4eba\u5de5\u667a\u80fd\uff09</code>\uff0c\u8d34\u5427\u8001\u54e5\u4e5f\u770b\u4e86\u4e0d\u5c11\uff0c\u51b3\u5b9a\u6da6\u4e86\u3002\u5b66\u4e0d\u52a8\u4e86\uff0c\u5c31\u770b\u4e00\u770b\u529d\u9000\u7684\u6587\u7ae0\u3002\u5f88\u53ef\u60dc\uff0c\u9ad8\u6570\u4e0b\u6ca1\u60f3\u5230\u5085\u91cc\u53f6\u7ea7\u6570\u8003\u4e86\u5927\u9898\ud83e\udd21\u3002\u603b\u7684\u6765\u8bf4\uff0c\u6280\u4e0d\u5982\u4eba\u7518\u62dc\u4e0b\u98ce\u3002</p>"},{"location":"blog/2022/09/01/%E8%BD%AC%E4%B8%93%E4%B8%9A/#_3","title":"\u7533\u8bf7","text":"<p>\u5f00\u59cb\u7533\u8bf7\u7684\u8fc7\u7a0b 2022-8-15-10-32 \u8ba1\u79d116\uff0c\u81ea\u52a8\u531613\uff0c\u8f6f\u4ef67\uff0c\u4eba\u5de5\u667a\u80fd8 \u6700\u540e\u8f6f\u4ef6\u6bd4\u8f83\u5c11\u3002\u5c31\u62a5\u4e86\u8f6f\u4ef6\uff0c\u8ba1\u79d140\u4eba\u4e5f\u662f\u5377\u738b\u805a\u96c6\u5730\uff0c\u81ea\u52a8\u5316\u6ca1\u62a5\uff0c\u5168\u662f\u9634\u5175\uff0c\u6700\u540e\u6839\u672c\u6ca1\u62a5\u6ee1\u3002\u4eba\u5de5\u667a\u80fd\u540c\u81ea\u52a8\u5316\u3002</p> <p>\u63a5\u7740\u5c31\u662f\u51c6\u5907\u9762\u8bd5\u3002\u4e0d\u6253\u65e0\u51c6\u5907\u4e4b\u4ed7\u3002\u51c6\u5907\u4e86\u633a\u591a\u5c31\u81ea\u6211\u4ecb\u7ecd\u5168\u7528\u4e0a\u4e86\u3002\u591a\u51c6\u5907\u4e00\u70b9\u603b\u662f\u6ca1\u9519\u7684\u3002\u9762\u8bd5\u95ee\u9898\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a - \u81ea\u6211\u4ecb\u7ecd - \u6709\u6ca1\u6709\u4f53\u80b2\u7231\u597d\u3002\u6211\u5199\u7684\u5174\u8da3\u7231\u597d\u662f\u770b\u79d1\u5e7b\u5c0f\u8bf4\u548c\u5b66\u4e60\u9b54\u672f - \u5355\u7247\u673a\u8bfe\u5b66\u4e86\u4e9b\u4ec0\u4e48\u5e94\u7528\u3002\u7b80\u5386\u4e0a\u548c\u81ea\u6211\u4ecb\u7ecd\u90fd\u63d0\u53ca\u4e86\u5355\u7247\u673a\u539f\u7406\u53ca\u5e94\u7528\uff0c\u56de\u7b54\u5c31\u662f\u6d41\u6c34\u706f\u3002\u6570\u7801\u7ba1\u3002-\u7535\u673a\u3002\u5587\u53ed\uff08\u5176\u5b9e\u662f\u8702\u9e23\u5668\uff09\uff0c\u5355\u7247\u673a\u8001\u5e08\u9648\u80b2\u658c\u8bb2\u7684\u786e\u5b9e\u597d\uff0c\u7ed9\u5206\u4e5f\u9ad8\uff0c\u524d\u63d0\u662f\u4f5c\u4e1a\u90fd\u5b8c\u6210\u4e86 - \u5de5\u56fe\u8bfe\u8bbe\u5206\u6570\u6bd4\u8f83\u4f4e\uff0c\u662f\u4ec0\u4e48\u539f\u56e0\uff1f \u8003\u4e8669\uff0c70\u53ca\u4ee5\u4e0a\u53ef\u4ee5\u7528\u5927\u4f5c\u4e1a\u7533\u8bf7\u5de5\u4fe1\u90e8\u7684cad\u8bc1\u4e66\uff0c\u5230\u65f6\u5019\u8bfe\u4e0a\u5b8c\u4e86\u522b\u5148\u628a\u4f5c\u4e1a\u5220\u4e86\u3001\u8bfe\u7a0b\u7fa4\u9000\u4e86\u3002\u8fd9\u65b9\u9762\u771f\u7684\u4e0d\u592a\u64c5\u957f\uff0c\u671f\u672b\u8003\u8bd5\u5ba4\u53cb\u80fd\u63d0\u524d\u6211\u5feb40\u5206\u949f\u505a\u5b8c\u8fd8\u57fa\u672c\u90fd\u5bf9\uff0c\u621110\u4e2a\u9898\u90fd\u6ca1\u6765\u5f97\u53ca\u505a\u5b8c\uff0c\u6700\u540e\u5bf9\u4e86\u4e24\u4e2a\ud83d\ude05\uff0c\u4f46\u662f \u9762\u8bd5\u8fd8\u5f97\u53ca\u65f6\u8ddf\u4e0a\u81ea\u5df1\u5c06\u6765\u4f1a\u6539\u8fdb\u7684\u3002 - \u4e3a\u4ec0\u4e48\u6ca1\u9009\u62e9\u7f51\u7edc\u5de5\u7a0b - \u9b54\u672f\u4f1a\u7684\u591a\u5417\uff1f\u8fd9\u4e2a\u662f\u8001\u5e08\u5e2e\u6211\u89e3\u56f4\u4e86\uff0c\u7136\u540e\u5c31\u7ed3\u675f\u9762\u8bd5\u4e86 - \u8bf4\u51e0\u4e2a\u8fd9\u4e2a\u4e13\u4e1a\u7684\u8bfe\u7a0b\uff1f\u8fd9\u4e2a\u6ca1\u95ee\u6211\uff0c\u95ee\u7684\u53e6\u4e00\u4e2a\u540c\u5b66</p> <p>\u603b\u7ed3\uff1a\u6210\u7ee9\u597d\uff0c\u9762\u8bd5\u5c31\u4e0d\u4f1a\u4e3a\u96be\u4f60\u3002\u8001\u5e08\u5f88\u6709\u53ef\u80fd\u6839\u636e\u4f60\u7684\u81ea\u6211\u4ecb\u7ecd\u63d0\u95ee\uff0c\u522b\u6574\u90a3\u4e9b\u5047\u5927\u7a7a\u7684\uff0c\u4e07\u4e00\u4e0d\u61c2\u88c5\u61c2\u5c31\u5bc4\u4e86\u3002</p>"},{"location":"blog/2022/09/01/%E8%BD%AC%E4%B8%93%E4%B8%9A/#_4","title":"\u5c3e\u58f0","text":"<p>\u9762\u8bd5\u5b8c\u4e86\u5c31\u7b49\u7740\u7ed3\u679c\u51fa\u6765\u3002\u7136\u540e\u8fdb\u7fa4\uff0c\u642c\u5bbf\u820d</p> <p>\u9009\u62e9\u6bd4\u52aa\u529b\u66f4\u52a0\u91cd\u8981</p> <p>\u5316\u5de5</p> <p>\u6211\u662f\u5982\u4f55\u4e00\u6b65\u6b65\u8d70\u8fdb\u5316\u5de5\u8fd9\u4e2a\u5751\u7684\uff01</p> <p>\u7075\u56fe</p> <p>\u5408\u6210\u7814\u53d1\u5de5\u7a0b\u5e08</p> <p>\u6211\u662f\u4e2d\u79d1\u9662\u67d0\u6240\u6bd5\u4e1a\u7684\u7855\u58eb\uff0c\u53bb\u5e74\u6bd5\u4e1a\u6765\u5230\u73b0\u5728\u7684\u516c\u53f8\u3002\u6700\u8fd1\uff0c\u9886\u5bfc\u901a\u77e5\u6211\u6709\u4e00\u4e2a\u65b0\u9879\u76ee\u7b49\u7740\u6211\u6765\u505a\uff0c\u6211\u67e5\u4e86\u4e0b\u539f\u6599\u662f\u5267\u6bd2\u5316\u5b66\u54c1\u3002\u8fd1\u534a\u5e74\u6765\uff0c\u6bcf\u5929\u6d78\u6ce1\u5728\u542b\u6c1f\u6709\u673a\u8bd5\u5242\u6c1b\u56f4\u4e2d\uff0c\u5df2\u4f7f\u6211\u840c\u751f\u4e86\u8df3\u69fd\u7684\u60f3\u6cd5\uff0c\u5f53\u9886\u5bfc\u901a\u77e5\u6211\u8fd9\u4e2a\u65b0\u9879\u76ee\u540e\uff0c\u6211\u840c\u751f\u4e86\u8f6c\u884c\u7684\u60f3\u6cd5\u3002\u8f6c\u884c\u867d\u80fd\u4f7f\u6211\u4ece\u5316\u5de5\u8fd9\u4e2a\u5371\u9669\u884c\u5f53\u8131\u8eab\uff0c\u4f46\u4e5f\u610f\u5473\u7740\u672c\u79d1\u3001\u7855\u58eb\u4e03\u5e74\u7684\u5316\u5b66\u4e13\u4e1a\u5b66\u4e60\u767d\u8d39\u4e86\uff0c\u9700\u8981\u4ece\u5934\u5b66\u4e60\u5176\u4ed6\u884c\u4e1a\u7684\u77e5\u8bc6\u3002\u8d70\u5230\u4eca\u5929\u8fd9\u4e00\u6b65\uff0c\u4e0d\u5f97\u4e0d\u53cd\u601d\u6211\u662f\u600e\u6837\u4e00\u6b65\u6b65\u8d70\u8fdb\u5316\u5de5\u8fd9\u884c\u7684\u3002</p> <p>\u7b2c\u4e00\u6b65\u662f\u65e0\u77e5\uff0c\u9ad8\u8003\u9009\u53d6\u5927\u5b66\u4e13\u4e1a\u65f6\uff0c\u6211\u5e76\u4e0d\u77e5\u9053\u5927\u5b66\u4e13\u4e1a\u5bf9\u5de5\u4f5c\u7684\u5f71\u54cd\uff0c\u4e0d\u77e5\u9053\u5927\u5b66\u4e13\u4e1a\u8bfe\u7a0b\u662f\u600e\u4e48\u6559\u7684\u3001\u600e\u4e48\u5b66\u7684\u3001\u600e\u4e48\u8003\u8bd5\u7684\uff0c\u60f3\u5f53\u7136\u7684\u4ece\u8003\u8bd5\u96be\u6613\u7684\u89d2\u5ea6\u9009\u53d6\u4e86\u4e13\u4e1a\u3002\u9ad8\u4e2d\u4e4b\u524d\u5b66\u4e60\u5e76\u8003\u8bd5\u8fc7\u7684\u79d1\u76ee\u6709\u8bed\u6587\u3001\u6570\u5b66\u3001\u82f1\u8bed\u3001\u7269\u7406\u3001\u5316\u5b66\u3001\u751f\u7269\u3001\u653f\u6cbb\u3001\u5730\u7406\u3001\u5386\u53f2\uff0c\u9ad8\u4e2d\u65f6\u5206\u5230\u7406\u79d1\u73ed\uff0c\u5bf9\u4e13\u4e1a\u7684\u8ba4\u8bc6\u53ea\u80fd\u4ece\u8bed\u6587\u3001\u6570\u5b66\u3001\u82f1\u8bed\u3001\u7269\u7406\u3001\u5316\u5b66\u3001\u751f\u7269\u8fd9\u51e0\u95e8\u8bfe\u7a0b\u4e2d\u7aa5\u63a2\uff0c\u60f3\u5f53\u7136\u7684\u8ba4\u4e3a\u9ad8\u4e2d\u7406\u79d1\u751f\u5bf9\u5e94\u5927\u5b66\u4e13\u4e1a\u662f\u4e0e\u7269\u7406\u3001\u5316\u5b66\u3001\u751f\u7269\u8fd9\u4e09\u8005\u76f8\u5173\u7684\uff0c\u800c\u8fd9\u4e09\u79d1\u5bf9\u6211\u6765\u8bf4\u5316\u5b66\u6700\u6613\u8003\u8bd5\uff0c\u4e8e\u662f\u901a\u5411\u5316\u5de5\u8fd9\u884c\u7684\u7b2c\u4e00\u6b65\u8fc8\u5f00\u4e86\uff0c\u9ad8\u8003\u9009\u53d6\u4e86\u6797\u4ea7\u5316\u5de5\u8fd9\u4e2a\u4e13\u4e1a\u3002\u5316\u5de5\u4e4b\u524d\u6709\u201c\u6797\u4ea7\u201d\u662f\u56e0\u4e3a\uff0c\u5bb6\u5728\u519c\u6751\uff0c\u5c0f\u65f6\u5019\u7236\u4eb2\u957f\u671f\u4ece\u4e8b\u6797\u6728\u91c7\u4f10\u804c\u4e1a\uff0c\u5bf9\u6811\u6797\u6bd4\u8f83\u719f\u6089\u3002</p> <p>\u7b2c\u4e8c\u6b65\u662f\u77ed\u89c6\uff0c\u8981\u8bf4\u8fd9\u7b2c\u4e00\u6b65\u7684\u65e0\u77e5\u662f\u5ba2\u89c2\u73af\u5883\u9020\u6210\u7684\uff0c\u8fd9\u7b2c\u4e8c\u6b65\u7684\u77ed\u89c6\u7684\u786e\u662f\u4e2a\u4eba\u539f\u56e0\u9020\u6210\u7684\u3002\u8fdb\u5165\u5927\u4e00\u6211\u5df2\u4ece\u540c\u5b66\u90a3\u91cc\u77e5\u9053\u5927\u4e00\u4e0b\u5b66\u671f\u53ef\u4ee5\u8f6c\u4e13\u4e1a\uff0c\u5927\u4e00\u4e0a\u5b66\u671f\u9664\u4e86\u4e0a\u8bfe\u548c\u53c2\u52a0\u516c\u5171\u6d3b\u52a8\uff0c\u6211\u5927\u90e8\u5206\u65f6\u95f4\u6ce1\u5728\u5b66\u6821\u56fe\u4e66\u9986\uff0c\u5468\u672b\u53bb\u4fe1\u606f\u5de5\u7a0b\u5b66\u9662\u4e0a\u7f51\u73a9\u3002\u7531\u4e8e\u4e0d\u77e5\u9053\u5927\u5b66\u6bcf\u95e8\u8bfe\u7ed3\u675f\u540e\u8001\u5e08\u4f1a\u753b\u8003\u8bd5\u91cd\u70b9\uff0c\u8bfe\u7a0b\u591a\u3001\u5b66\u7684\u5feb\uff0c\u62c5\u5fc3\u671f\u672b\u8003\u8bd5\u901a\u4e0d\u8fc7\uff0c\u8bfe\u4f59\u6211\u8fd8\u7ecf\u5e38\u53bb\u56fe\u4e66\u9986\u627e\u4e60\u9898\u505a\uff0c\u6309\u9ad8\u4e2d\u7684\u601d\u8def\u7406\u89e3\u5212\u91cd\u70b9\u5c31\u662f\u63d0\u524d\u900f\u9732\u8003\u9898\u3002\u7531\u4e8e\u7528\u529b\u8fc7\u731b\uff0c\u5927\u4e00\u7b2c\u4e00\u5b66\u671f\u671f\u672b\u8003\u8bd5\u6211\u8003\u4e86\u4e13\u4e1a\u7b2c\u4e00\u3002\u7b2c\u4e8c\u5b66\u671f\u5f00\u5b66\u4e0d\u4e45\uff0c\u6709\u4e00\u5929\u73ed\u957f\u901a\u77e5\u6211\u4eec\u8981\u8bc4\u4e13\u4e1a\u5956\u5b66\u91d1\uff0c\u7b2c\u4e00\u6b21\u5b8c\u5168\u6309\u7167\u8003\u8bd5\u6210\u7ee9\u8bc4\u3002\u8fd9\u65f6\u5927\u5bb6\u624d\u5f00\u59cb\u5173\u6ce8\u5927\u5b66\u5956\u5b66\u91d1\u7684\u4e8b\uff0c\u81ea\u4ece\u77e5\u9053\u6709\u5956\u5b66\u91d1\u540e\uff0c\u8eab\u4e3a\u8d2b\u56f0\u751f\u7684\u6211\uff0c\u5927\u5b66\u5b66\u4e60\u3001\u8003\u8bd5\u5c31\u662f\u4e3a\u4e86\u5956\u5b66\u91d1\uff0c\u77ed\u89c6\u7684\u79cd\u5b50\u81ea\u6b64\u57cb\u4e0b\u3002\u6709\u4e00\u5929\uff0c\u5e73\u65f6\u5173\u7cfb\u633a\u597d\u7684\u8001\u6768\u544a\u8bc9\u6211\u4ed6\u8981\u8f6c\u4e13\u4e1a\uff0c\u95ee\u6211\u8f6c\u4e48\uff0c\u6211\u95ee\u4e86\u4ed6\u4e00\u4e9b\u8f6c\u4e13\u4e1a\u540e\u5b66\u5206\u7684\u95ee\u9898\uff0c\u4e86\u89e3\u5230\u8f6c\u4e13\u4e1a\u540e\u9700\u8981\u8865\u4f11\u4e00\u4e9b\u5176\u4ed6\u4e13\u4e1a\u5927\u4e00\u7b2c\u4e00\u5b66\u671f\u5b66\u8fc7\uff0c\u800c\u81ea\u5df1\u6ca1\u6709\u5b66\u8fc7\u7684\u8bfe\u7a0b\u3002\u540e\u6765\u6211\u6ca1\u6709\u8f6c\u4e13\u4e1a\uff0c\u5f53\u65f6\u662f\u51fa\u4e8e\u4e24\u70b9\u539f\u56e0\uff0c\u4e00\u662f\u4e0d\u60f3\u8865\u4f11\u8bfe\u7a0b\uff0c\u4e8c\u662f\u53d7\u5230\u5956\u5b66\u91d1\u7684\u8bf1\u60d1\uff0c\u800c\u8fd9\u7b2c\u4e8c\u70b9\u662f\u4e3b\u56e0\u3002\u8bc4\u5956\u5b66\u91d1\u65f6\uff0c\u6211\u4ece\u73ed\u957f\u90a3\u4e86\u89e3\u5230\uff0c\u5927\u4e00\u7ed3\u675f\u540e\u4f1a\u8bc4\u56fd\u5bb6\u5956\u5b66\u91d1\uff088000\u5143\uff09\uff0c\u6211\u4eec\u4e13\u4e1a\u6709\u4e00\u5230\u4e24\u4e2a\u540d\u989d\uff0c\u5982\u679c\u6211\u4fdd\u6301\u6210\u7ee9\u6709\u5f88\u5927\u53ef\u80fd\u62ff\u5230\u56fd\u5bb6\u5956\u5b66\u91d1\uff0c\u800c\u5f53\u65f6\u6211\u7b2c\u4e00\u5b66\u671f\u7684\u6210\u7ee9\u5df2\u7ecf\u9886\u5148\u3002\u6700\u7ec8\u6211\u5e76\u6ca1\u6709\u62ff\u5230\u56fd\u5bb6\u5956\u5b66\u91d1\uff0c\u56e0\u4e3a\u81ea\u4ece\u77e5\u9053\u6709\u5956\u5b66\u91d1\u8fd9\u56de\u4e8b\uff0c\u5973\u540c\u5b66\u53d1\u529b\u4e86\uff0c\u800c\u6211\u77e5\u9053\u8003\u8bd5\u4f1a\u5212\u91cd\u70b9\u540e\u677e\u61c8\u4e86\u3002</p> <p>\u7b2c\u4e09\u6b65\u662f\u60ef\u6027\uff0c\u7b2c\u4e00\u3001\u7b2c\u4e8c\u6b65\u6211\u80fd\u7528\u5f88\u660e\u786e\u7684\u8bcd\u8bed\u5f62\u5bb9\uff0c\u8fd9\u7b2c\u4e09\u6b65\u4e0d\u592a\u597d\u5f62\u5bb9\uff0c\u5c31\u7528\u60ef\u6027\u8fd9\u4e2a\u8bcd\u5427\u3002\u8fdb\u5165\u5927\u5b66\uff0c\u5165\u5b66\u5178\u793c\u4e0a\u9662\u957f\uff0c\u5c31\u7ed9\u6211\u4eec\u704c\u8f93\u4e86\u8003\u7814\u601d\u60f3\uff0c\u5927\u5b66\u56db\u5e74\uff0c\u6211\u4eec\u73ed\u4e3b\u4efb\uff08\u6211\u4eec\u5b66\u9662\u515a\u59d4\u526f\u4e66\u8bb0\uff09\u6bcf\u6b21\u5f00\u73ed\u4f1a\u90fd\u7ed9\u6211\u704c\u8f93\u7c7b\u4f3c\u7684\u601d\u60f3\u3002\u4ed6\u6bcf\u6b21\u5f00\u4f1a\u603b\u662f\u8bf4\u5e0c\u671b\u6211\u4eec\u73ed\u4e09\u5206\u4e4b\u4e00\u7559\u5b66\u3001\u4fdd\u7814\uff0c\u4e09\u5206\u4e4b\u4e00\u8003\u7814\u3002\u5927\u4e8c\u4e0b\u5b66\u671f\u5b66\u6821\u9f13\u52b1\u5927\u5bb6\u7533\u8bf7\u201c\u5927\u5b66\u751f\u521b\u65b0\u6027\u5b9e\u9a8c\u9879\u76ee\u201d\uff0c\u672c\u6765\u6211\u6ca1\u60f3\u7533\u8bf7\uff0c\u770b\u5230\u73ed\u91cc\u5927\u90e8\u5206\u4eba\u4e09\u3001\u4e94\u4e00\u7ec4\u7533\u8bf7\u4e86\uff0c\u5728\u5468\u56f4\u4eba\u7684\u9f13\u52a8\u4e0b\uff0c\u6211\u4e5f\u4e0e\u51e0\u4e2a\u540c\u5b66\u7ec4\u6210\u5c0f\u7ec4\u7533\u8bf7\u4e86\uff0c\u6211\u88ab\u63a8\u4e3a\u7ec4\u957f\uff0c\u867d\u7136\uff0c\u5728\u522b\u4eba\u6750\u6599\u5feb\u51c6\u5907\u5b8c\u65f6\uff0c\u6211\u4eec\u624d\u627e\u8001\u5e08\u3001\u51c6\u5907\u6750\u6599\uff0c\u4e0d\u88ab\u5468\u56f4\u4eba\u770b\u597d\u7684\u6211\u4eec\u7ec4\uff0c\u5374\u6700\u7ec8\u88ab\u8bc4\u4e3a\u56fd\u5bb6\u7ea7\u9879\u76ee\uff08\u5206\u4e09\u7ea7\uff1a\u9662\u7ea7\u3001\u6821\u7ea7\u3001\u56fd\u5bb6\u7ea7\uff09\uff0c\u5168\u6821\u8bc4\u51fa10\u4e2a\u56fd\u5bb6\u7ea7\u9879\u76ee\uff0c\u6211\u4eec\u7ec4\u6392\u7b2c\u56db\uff0c\u8fd9\u4ef6\u4e8b\u7ed9\u5927\u5bb6\u7559\u4e0b\u4e86\u6211\u9002\u5408\u641e\u5b66\u672f\u7814\u7a76\u7684\u5370\u8c61\uff08\u7814\u7a76\u751f\u8bfb\u5b8c\uff0c\u6211\u53d1\u73b0\u6211\u975e\u5e38\u4e0d\u9002\u5408\u641e\u5b66\u672f\u7814\u7a76\uff09\uff0c\u4e5f\u52a0\u5f3a\u4e86\u6211\u8bfb\u7814\u7684\u60ef\u6027\u3002\u5728\u8fd9\u79cd\u60ef\u6027\u7684\u4f5c\u7528\u4e0b\u6211\u8003\u4e86\u5316\u5de5\u4e13\u4e1a\u7684\u7814\u7a76\u751f\u3002</p> <p>\u7b2c\u56db\u6b65\u662f\u4e13\u4e1a\uff0c\u867d\u7136\uff0c\u8bfb\u7814\u671f\u95f4\u88ab\u6298\u817e\u7684\u4e0d\u8f7b\uff0c\u60f3\u8fc7\u9003\u79bb\u5316\u5de5\u884c\u5f53\uff0c\u4f46\u662f\uff0c\u6bd5\u4e1a\u627e\u5de5\u4f5c\u65f6\u53d1\u73b0\uff0c\u5927\u90e8\u5206\u5de5\u4f5c\u662f\u8981\u6c42\u4e13\u4e1a\u5bf9\u53e3\u7684\uff0c\u90a3\u79cd\u4e0d\u8981\u6c42\u4e13\u4e1a\u7684\u5de5\u4f5c\uff0c\u5bf9\u5b66\u5386\u4e5f\u6ca1\u6709\u4ec0\u4e48\u8981\u6c42\u3002\u653e\u5f03\u81ea\u5df1\u7684\u4e13\u4e1a\uff0c\u610f\u5473\u7740\u5927\u5b66\u3001\u7855\u58eb\u767d\u8bfb\u4e86\uff0c\u5bb6\u4eba\u662f\u53cd\u5bf9\u7684\u3002</p> <p>\u6709\u65f6\u5019\u771f\u60f3\u88f8\u8f9e\uff0c\u82b1\u4e00\u4e24\u5e74\u65f6\u95f4\u5c1d\u8bd5\u4e0b\u5176\u4ed6\u884c\u4e1a\uff0c\u6211\u77e5\u9053\u8fd9\u4f1a\u906d\u5230\u4ed6\u4eec\u7684\u53cd\u5bf9\uff01</p> <p>\u7f16\u8f91\u4e8e 2016-12-11 16:03</p>"},{"location":"frontend/hello-MkDocs/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"frontend/hello-MkDocs/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"frontend/hello-MkDocs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"frontend/hello-hexo/","title":"hexo","text":"<p>a brief guide to build your blog</p> <p>Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.</p>"},{"location":"frontend/hello-hexo/#quick-start","title":"Quick Start","text":""},{"location":"frontend/hello-hexo/#create-a-new-post","title":"Create a new post","text":"<pre><code>$ hexo new \"My New Post\"\n</code></pre> <p>More info: Writing</p>"},{"location":"frontend/hello-hexo/#run-server","title":"Run server","text":"<pre><code>$ hexo server\n</code></pre> <p>More info: Server</p>"},{"location":"frontend/hello-hexo/#generate-static-files","title":"Generate static files","text":"<pre><code>$ hexo generate\n</code></pre> <p>More info: Generating</p>"},{"location":"frontend/hello-hexo/#deploy-to-remote-sites","title":"Deploy to remote sites","text":"<pre><code>$ hexo deploy\n</code></pre> <p>More info: Deployment</p>"},{"location":"frontend/%E5%BB%BA%E7%AB%99/","title":"\u5efa\u7ad9","text":"<p>mkdocs\u81ea\u52a8\u5316\u4e0d\u80fd\u6210\u529f\u89e3\u51b3\u65b9\u6848</p> <ul> <li>mkdocs\u6211\u63a8\u8350\u6ca1\u5b66\u8fc7\u524d\u7aef\u7684\u4eba\uff0cvuepress\u548chexo\u66f4\u9002\u5408\u6709\u524d\u7aef\u7ecf\u9a8c\u7684\u4eba</li> <li>hugo\u914d\u7f6e\u8d77\u6765\u6bd4mkdocs\u590d\u6742\uff0c\u4f46\u662f\u751f\u6210\u901f\u5ea6\u975e\u5e38\u5feb\ud83d\udc4d</li> </ul> vuepress hexo mkdocs hugo \u5b89\u88c5 \u4e0d\u96be \u4e0d\u96be \u7b80\u5355 \u4e0d\u96be \u6027\u80fd \u7565\u900a\u4e00\u7b79 \u8f83\u597d \u597d \u901f\u5ea6\u5f88\u5feb \u7f8e\u89c2 \u5f88\u597d \u8f83\u597d \u8f83\u597d \u597d \u63d2\u4ef6 \u51fa\u95ee\u9898\u591a \u8fd8\u6ca1\u9047\u5230 \u7528\u4e86\u4e00\u4e2a \u672a\u5c1d\u8bd5 <p>\u4ee5\u4e0a\u5185\u5bb9\u4ec5\u4ee3\u8868\u4e2a\u4eba\u4f7f\u7528\u4f53\u9a8c\uff0c\u4e0d\u5177\u6709\u666e\u9002\u6027</p> <ul> <li>Hexo Fluid <ul> <li>\u5b98\u65b9\u6587\u6863</li> <li>eg: dogNew's Blog</li> </ul> </li> <li>hexo-theme-material-indigo <ul> <li>github</li> <li>eg: Javahiker's Homepage</li> </ul> </li> </ul>"},{"location":"tools/editor/","title":"editor","text":""},{"location":"tools/editor/#c","title":"C++","text":"<p>\u65e9\u65e5\u8fdc\u79bbM$C++\uff0c\u65e9\u65e5\u83b7\u5f97\u65b0\u751f\ud83d\ude0b</p> <p>\u4f7f\u7528clangd\u6253\u5f00\u6216\u5173\u95ed\u51fd\u6570\u53c2\u6570\u63d0\u793a(inlay hints)</p> <p><code>ctrl+shift+p;clangd:toggle inlay hints</code></p> <ul> <li>\u6559\u7a0b</li> <li>\u53ef\u80fd\u9047\u5230\u7684\u95ee\u9898\u53ca\u89e3\u51b3</li> </ul> \u8fc7\u65f6\u7248 <p>\u4f17\u6240\u5468\u77e5\uff0c\u53ef\u4ee5\u7528devC++\uff0cVisio Studio\uff0cvscode\u7b49\u7b49\u5199C++\uff0c\u4f46\u662fvscode\u53ef\u80fd\u4f1a\u8ba9\u4eba\u6298\u817e\u534a\u5929\u3002\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u62ff\u6765\u5c31\u7528\u7684\u529e\u6cd5</p> <p>\u6ce8\u610f</p> <p>\u524d\u63d0\uff1a\u9700\u8981\u5b89\u88c5\u597d<code>vscode</code>\uff0c<code>mingw64</code></p> <ol> <li> <p>\u914d\u7f6e\u6587\u4ef6\u5939</p> </li> <li> <p>\u5728<code>.vscode</code>\u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u4ee5\u4e0b\u4e09\u4e2a\u6587\u4ef6</p> <ol> <li><code>c_cpp_properties.json</code></li> <li><code>launch.json</code></li> <li><code>tasks.json</code></li> </ol> </li> <li> <p>\u590d\u5236\u7c98\u8d34\u4ee5\u4e0b</p> c_cpp_properties.jsonlaunch.jsontask.json <pre><code>{\n\"configurations\": [\n    {\n        \"name\": \"Win32\",\n        \"includePath\": [\n            \"${workspaceFolder}/**\"\n        ],\n        \"defines\": [\n            \"_DEBUG\",\n            \"UNICODE\",\n            \"_UNICODE\"\n        ],\n        \"compilerPath\": \"D:/C/vscode/gcc/mingw64/bin/g++.exe\",//\u4f60\u7684g++\u4f4d\u7f6e\n        \"cStandard\": \"gnu17\",\n        \"cppStandard\": \"gnu++14\",\n        \"intelliSenseMode\": \"windows-gcc-x64\"\n    }\n    ],\n\"version\": 4\n}\n</code></pre> <pre><code>{\n\"version\": \"0.2.0\",\n\"configurations\": [\n    {\n        \"name\": \"(gdb) \u5185\u90e8\u7ec8\u7aef\u542f\u52a8\",\n        \"type\": \"cppdbg\",\n        \"request\": \"launch\",\n        \"program\": \"${workspaceFolder}\\\\exe\\\\${fileBasenameNoExtension}.exe\",//\u66f4\u591a\u4fe1\u606f\u8bf7\u67e5\u770bgcc/g++\u7684\u624b\u518c\n        \"args\": [],\n        \"stopAtEntry\": true,\n        \"cwd\": \"${fileDirname}\",\n        \"environment\": [],\n        \"externalConsole\": false,\n\n        \"MIMode\": \"gdb\",\n        \"miDebuggerPath\": \"D:\\\\C\\\\vscode\\\\gcc\\\\mingw64\\\\bin\\\\gdb.exe\",\n        //\u4f60\u7684gdb\u4f4d\u7f6e\n        \"setupCommands\": [\n            {\n                \"description\": \"\u4e3a gdb \u542f\u7528\u6574\u9f50\u6253\u5370\",\n                \"text\": \"-enable-pretty-printing\",\n\n                \"ignoreFailures\": true\n            },\n            {\n                \"description\": \"\u5c06\u53cd\u6c47\u7f16\u98ce\u683c\u8bbe\u7f6e\u4e3a Intel\",\n                \"text\": \"-gdb-set disassembly-flavor intel\",\n                \"ignoreFailures\": true\n            }\n        ]\n    },\n    ]\n}\n</code></pre> <pre><code>{\n\"tasks\": [\n\n    {\n        \"type\": \"cppbuild\",\n        \"label\": \"g++.exe \",\n        \"command\": \"D:/C/vscode/gcc/mingw64/bin/g++.exe\",//\u5bf9\u5e94\u4f60\u7684g++\u4f4d\u7f6e\n        \"args\": [\n            \"-fdiagnostics-color=always\",\n            \"-g\",\n            \"${file}\",\n            \"-o\",\n            \"${workspaceFolder}\\\\exe\\\\${fileBasenameNoExtension}.exe\"\n        ],\n        \"options\": {\n            \"cwd\": \"D:/C/vscode/gcc/mingw64/bin\"\n        },\n        \"problemMatcher\": [\n            \"$gcc\"\n        ],\n        \"group\": {\n            \"kind\": \"build\",\n            \"isDefault\": true\n        },\n        \"detail\": \"\u8c03\u8bd5\u5668\u751f\u6210\u7684\u4efb\u52a1\u3002\"\n    }\n    ],\n    \"version\": \"2.0.0\"\n}\n</code></pre> </li> <li> <p>\u5728<code>sourcecode</code>\u6587\u4ef6\u5939\u5199\u6e90\u4ee3\u7801\u5373\u53ef</p> </li> </ol>"},{"location":"tools/editor/#markdown-preview-enhanced","title":"markdown preview enhanced","text":"<ul> <li>\u6253\u5370\u80cc\u666f\uff08\u8ba9\u4ee3\u7801\u5757\u80cc\u666f\u4e3a\u7070\u8272\uff09 \u6559\u7a0b</li> </ul>"},{"location":"tools/editor/#vscode","title":"\u66f4\u6362vscode\u7684\u4ee3\u7801\u989c\u8272","text":"<ol> <li> <p>\u627e\u5230\u5bf9\u5e94\u7684\u6587\u4ef6\u5939    \u9ed8\u8ba4\u4e3b\u9898     <code>D:\\C\\vscode\\Microsoft VS Code\\resources\\app\\extensions\\theme-defaults\\themes</code></p> </li> <li> <p>\u6253\u5f00json\u6587\u4ef6\uff0c\u4e3b\u8981\u4fee\u6539<code>\"tokenColors\"</code>\u8fd9\u4e00\u9879    \u53ef\u4ee5\u7528github dark\u7684\u5bf9\u5e94\u4fee\u6539</p> </li> </ol>"},{"location":"tools/editor/#vim","title":"vim","text":"\u64cd\u4f5c \u547d\u4ee4 \u590d\u5236 y \u9009\u4e2d\u540e\u590d\u5236\u5230\u7cfb\u7edf\u526a\u8d34\u677f \"+y \u7c98\u8d34 p \u64a4\u9500undo u \u91cd\u505aredo Ctrl-r visio block\u540e\u8fdb\u5165insert Shift-i <p>vim\u548c\u7cfb\u7edf\u526a\u8d34\u677f\u4ea4\u4e92</p>"},{"location":"tools/emojiCheetSheet/","title":"emoji-cheat-sheet","text":"<p>This cheat sheet is automatically generated from GitHub Emoji API and Unicode Full Emoji List.</p>"},{"location":"tools/emojiCheetSheet/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Smileys &amp; Emotion</li> <li>People &amp; Body</li> <li>Animals &amp; Nature</li> <li>Food &amp; Drink</li> <li>Travel &amp; Places</li> <li>Activities</li> <li>Objects</li> <li>Symbols</li> <li>Flags</li> <li>GitHub Custom Emoji</li> </ul>"},{"location":"tools/emojiCheetSheet/#smileys-emotion","title":"Smileys &amp; Emotion","text":"<ul> <li>Face Smiling</li> <li>Face Affection</li> <li>Face Tongue</li> <li>Face Hand</li> <li>Face Neutral Skeptical</li> <li>Face Sleepy</li> <li>Face Unwell</li> <li>Face Hat</li> <li>Face Glasses</li> <li>Face Concerned</li> <li>Face Negative</li> <li>Face Costume</li> <li>Cat Face</li> <li>Monkey Face</li> <li>Heart</li> <li>Emotion</li> </ul>"},{"location":"tools/emojiCheetSheet/#face-smiling","title":"Face Smiling","text":"ico shortcode ico shortcode top <code>:grinning:</code> <code>:smiley:</code> top top <code>:smile:</code> <code>:grin:</code> top top <code>:laughing:</code> <code>:satisfied:</code> <code>:sweat_smile:</code> top top <code>:rofl:</code> <code>:joy:</code> top top <code>:slightly_smiling_face:</code> <code>:upside_down_face:</code> top top <code>:wink:</code> <code>:blush:</code> top top <code>:innocent:</code> top"},{"location":"tools/emojiCheetSheet/#face-affection","title":"Face Affection","text":"ico shortcode ico shortcode top :smiling_face_with_three_hearts: <code>:smiling_face_with_three_hearts:</code> <code>:heart_eyes:</code> top top <code>:star_struck:</code> <code>:kissing_heart:</code> top top <code>:kissing:</code> <code>:relaxed:</code> top top <code>:kissing_closed_eyes:</code> <code>:kissing_smiling_eyes:</code> top top <code>:smiling_face_with_tear:</code> top"},{"location":"tools/emojiCheetSheet/#face-tongue","title":"Face Tongue","text":"ico shortcode ico shortcode top <code>:yum:</code> <code>:stuck_out_tongue:</code> top top <code>:stuck_out_tongue_winking_eye:</code> <code>:zany_face:</code> top top <code>:stuck_out_tongue_closed_eyes:</code> <code>:money_mouth_face:</code> top"},{"location":"tools/emojiCheetSheet/#face-hand","title":"Face Hand","text":"ico shortcode ico shortcode top :hugs: <code>:hugs:</code> :hand_over_mouth: <code>:hand_over_mouth:</code> top top <code>:shushing_face:</code> <code>:thinking:</code> top"},{"location":"tools/emojiCheetSheet/#face-neutral-skeptical","title":"Face Neutral Skeptical","text":"ico shortcode ico shortcode top <code>:zipper_mouth_face:</code> :raised_eyebrow: <code>:raised_eyebrow:</code> top top <code>:neutral_face:</code> <code>:expressionless:</code> top top <code>:no_mouth:</code> <code>:face_in_clouds:</code> top top <code>:smirk:</code> <code>:unamused:</code> top top :roll_eyes: <code>:roll_eyes:</code> <code>:grimacing:</code> top top <code>:face_exhaling:</code> <code>:lying_face:</code> top"},{"location":"tools/emojiCheetSheet/#face-sleepy","title":"Face Sleepy","text":"ico shortcode ico shortcode top <code>:relieved:</code> <code>:pensive:</code> top top <code>:sleepy:</code> <code>:drooling_face:</code> top top <code>:sleeping:</code> top"},{"location":"tools/emojiCheetSheet/#face-unwell","title":"Face Unwell","text":"ico shortcode ico shortcode top <code>:mask:</code> <code>:face_with_thermometer:</code> top top <code>:face_with_head_bandage:</code> <code>:nauseated_face:</code> top top :vomiting_face: <code>:vomiting_face:</code> <code>:sneezing_face:</code> top top <code>:hot_face:</code> <code>:cold_face:</code> top top <code>:woozy_face:</code> <code>:dizzy_face:</code> top top <code>:face_with_spiral_eyes:</code> <code>:exploding_head:</code> top"},{"location":"tools/emojiCheetSheet/#face-hat","title":"Face Hat","text":"ico shortcode ico shortcode top :cowboy_hat_face: <code>:cowboy_hat_face:</code> <code>:partying_face:</code> top top <code>:disguised_face:</code> top"},{"location":"tools/emojiCheetSheet/#face-glasses","title":"Face Glasses","text":"ico shortcode ico shortcode top <code>:sunglasses:</code> <code>:nerd_face:</code> top top :monocle_face: <code>:monocle_face:</code> top"},{"location":"tools/emojiCheetSheet/#face-concerned","title":"Face Concerned","text":"ico shortcode ico shortcode top <code>:confused:</code> <code>:worried:</code> top top <code>:slightly_frowning_face:</code> <code>:frowning_face:</code> top top <code>:open_mouth:</code> <code>:hushed:</code> top top <code>:astonished:</code> <code>:flushed:</code> top top <code>:pleading_face:</code> <code>:frowning:</code> top top <code>:anguished:</code> <code>:fearful:</code> top top <code>:cold_sweat:</code> <code>:disappointed_relieved:</code> top top <code>:cry:</code> <code>:sob:</code> top top <code>:scream:</code> <code>:confounded:</code> top top <code>:persevere:</code> <code>:disappointed:</code> top top <code>:sweat:</code> <code>:weary:</code> top top <code>:tired_face:</code> <code>:yawning_face:</code> top"},{"location":"tools/emojiCheetSheet/#face-negative","title":"Face Negative","text":"ico shortcode ico shortcode top <code>:triumph:</code> :pout: <code>:pout:</code> <code>:rage:</code> top top <code>:angry:</code> :cursing_face: <code>:cursing_face:</code> top top <code>:smiling_imp:</code> <code>:imp:</code> top top <code>:skull:</code> <code>:skull_and_crossbones:</code> top"},{"location":"tools/emojiCheetSheet/#face-costume","title":"Face Costume","text":"ico shortcode ico shortcode top <code>:hankey:</code> <code>:poop:</code> <code>:shit:</code> <code>:clown_face:</code> top top <code>:japanese_ogre:</code> <code>:japanese_goblin:</code> top top <code>:ghost:</code> <code>:alien:</code> top top <code>:space_invader:</code> <code>:robot:</code> top"},{"location":"tools/emojiCheetSheet/#cat-face","title":"Cat Face","text":"ico shortcode ico shortcode top <code>:smiley_cat:</code> <code>:smile_cat:</code> top top <code>:joy_cat:</code> <code>:heart_eyes_cat:</code> top top <code>:smirk_cat:</code> <code>:kissing_cat:</code> top top <code>:scream_cat:</code> <code>:crying_cat_face:</code> top top <code>:pouting_cat:</code> top"},{"location":"tools/emojiCheetSheet/#monkey-face","title":"Monkey Face","text":"ico shortcode ico shortcode top <code>:see_no_evil:</code> <code>:hear_no_evil:</code> top top <code>:speak_no_evil:</code> top"},{"location":"tools/emojiCheetSheet/#heart","title":"Heart","text":"ico shortcode ico shortcode top <code>:love_letter:</code> <code>:cupid:</code> top top <code>:gift_heart:</code> <code>:sparkling_heart:</code> top top <code>:heartpulse:</code> <code>:heartbeat:</code> top top <code>:revolving_hearts:</code> <code>:two_hearts:</code> top top <code>:heart_decoration:</code> :heavy_heart_exclamation: <code>:heavy_heart_exclamation:</code> top top <code>:broken_heart:</code> <code>:heart_on_fire:</code> top top <code>:mending_heart:</code> <code>:heart:</code> top top <code>:orange_heart:</code> <code>:yellow_heart:</code> top top <code>:green_heart:</code> <code>:blue_heart:</code> top top <code>:purple_heart:</code> <code>:brown_heart:</code> top top <code>:black_heart:</code> <code>:white_heart:</code> top"},{"location":"tools/emojiCheetSheet/#emotion","title":"Emotion","text":"ico shortcode ico shortcode top <code>:kiss:</code> <code>:100:</code> top top <code>:anger:</code> <code>:boom:</code> <code>:collision:</code> top top <code>:dizzy:</code> <code>:sweat_drops:</code> top top <code>:dash:</code> <code>:hole:</code> top top <code>:speech_balloon:</code> :eye_speech_bubble: <code>:eye_speech_bubble:</code> top top <code>:left_speech_bubble:</code> <code>:right_anger_bubble:</code> top top <code>:thought_balloon:</code> <code>:zzz:</code> top"},{"location":"tools/emojiCheetSheet/#people-body","title":"People &amp; Body","text":"<ul> <li>Hand Fingers Open</li> <li>Hand Fingers Partial</li> <li>Hand Single Finger</li> <li>Hand Fingers Closed</li> <li>Hands</li> <li>Hand Prop</li> <li>Body Parts</li> <li>Person</li> <li>Person Gesture</li> <li>Person Role</li> <li>Person Fantasy</li> <li>Person Activity</li> <li>Person Sport</li> <li>Person Resting</li> <li>Family</li> <li>Person Symbol</li> </ul>"},{"location":"tools/emojiCheetSheet/#hand-fingers-open","title":"Hand Fingers Open","text":"ico shortcode ico shortcode top <code>:wave:</code> <code>:raised_back_of_hand:</code> top top <code>:raised_hand_with_fingers_splayed:</code> :hand: <code>:hand:</code> <code>:raised_hand:</code> top top <code>:vulcan_salute:</code> top"},{"location":"tools/emojiCheetSheet/#hand-fingers-partial","title":"Hand Fingers Partial","text":"ico shortcode ico shortcode top <code>:ok_hand:</code> <code>:pinched_fingers:</code> top top <code>:pinching_hand:</code> <code>:v:</code> top top :crossed_fingers: <code>:crossed_fingers:</code> <code>:love_you_gesture:</code> top top <code>:metal:</code> <code>:call_me_hand:</code> top"},{"location":"tools/emojiCheetSheet/#hand-single-finger","title":"Hand Single Finger","text":"ico shortcode ico shortcode top <code>:point_left:</code> <code>:point_right:</code> top top <code>:point_up_2:</code> :fu: <code>:fu:</code> <code>:middle_finger:</code> top top <code>:point_down:</code> <code>:point_up:</code> top"},{"location":"tools/emojiCheetSheet/#hand-fingers-closed","title":"Hand Fingers Closed","text":"ico shortcode ico shortcode top <code>:+1:</code> <code>:thumbsup:</code> <code>:-1:</code> <code>:thumbsdown:</code> top top <code>:fist:</code> <code>:fist_raised:</code> :facepunch: <code>:facepunch:</code> <code>:fist_oncoming:</code> <code>:punch:</code> top top :fist_left: <code>:fist_left:</code> :fist_right: <code>:fist_right:</code> top"},{"location":"tools/emojiCheetSheet/#hands","title":"Hands","text":"ico shortcode ico shortcode top <code>:clap:</code> <code>:raised_hands:</code> top top <code>:open_hands:</code> <code>:palms_up_together:</code> top top <code>:handshake:</code> <code>:pray:</code> top"},{"location":"tools/emojiCheetSheet/#hand-prop","title":"Hand Prop","text":"ico shortcode ico shortcode top <code>:writing_hand:</code> <code>:nail_care:</code> top top <code>:selfie:</code> top"},{"location":"tools/emojiCheetSheet/#body-parts","title":"Body Parts","text":"ico shortcode ico shortcode top <code>:muscle:</code> <code>:mechanical_arm:</code> top top <code>:mechanical_leg:</code> <code>:leg:</code> top top <code>:foot:</code> <code>:ear:</code> top top <code>:ear_with_hearing_aid:</code> <code>:nose:</code> top top <code>:brain:</code> <code>:anatomical_heart:</code> top top <code>:lungs:</code> <code>:tooth:</code> top top <code>:bone:</code> <code>:eyes:</code> top top <code>:eye:</code> <code>:tongue:</code> top top <code>:lips:</code> top"},{"location":"tools/emojiCheetSheet/#person","title":"Person","text":"ico shortcode ico shortcode top <code>:baby:</code> <code>:child:</code> top top <code>:boy:</code> <code>:girl:</code> top top <code>:adult:</code> <code>:blond_haired_person:</code> top top <code>:man:</code> <code>:bearded_person:</code> top top <code>:man_beard:</code> <code>:woman_beard:</code> top top :red_haired_man: <code>:red_haired_man:</code> :curly_haired_man: <code>:curly_haired_man:</code> top top :white_haired_man: <code>:white_haired_man:</code> :bald_man: <code>:bald_man:</code> top top <code>:woman:</code> :red_haired_woman: <code>:red_haired_woman:</code> top top <code>:person_red_hair:</code> :curly_haired_woman: <code>:curly_haired_woman:</code> top top <code>:person_curly_hair:</code> :white_haired_woman: <code>:white_haired_woman:</code> top top <code>:person_white_hair:</code> :bald_woman: <code>:bald_woman:</code> top top <code>:person_bald:</code> :blond_haired_woman: <code>:blond_haired_woman:</code> <code>:blonde_woman:</code> top top :blond_haired_man: <code>:blond_haired_man:</code> <code>:older_adult:</code> top top <code>:older_man:</code> <code>:older_woman:</code> top"},{"location":"tools/emojiCheetSheet/#person-gesture","title":"Person Gesture","text":"ico shortcode ico shortcode top :frowning_person: <code>:frowning_person:</code> :frowning_man: <code>:frowning_man:</code> top top :frowning_woman: <code>:frowning_woman:</code> <code>:pouting_face:</code> top top :pouting_man: <code>:pouting_man:</code> :pouting_woman: <code>:pouting_woman:</code> top top <code>:no_good:</code> :ng_man: <code>:ng_man:</code> <code>:no_good_man:</code> top top :ng_woman: <code>:ng_woman:</code> <code>:no_good_woman:</code> :ok_person: <code>:ok_person:</code> top top :ok_man: <code>:ok_man:</code> <code>:ok_woman:</code> top top <code>:information_desk_person:</code> <code>:tipping_hand_person:</code> :sassy_man: <code>:sassy_man:</code> <code>:tipping_hand_man:</code> top top :sassy_woman: <code>:sassy_woman:</code> <code>:tipping_hand_woman:</code> <code>:raising_hand:</code> top top :raising_hand_man: <code>:raising_hand_man:</code> :raising_hand_woman: <code>:raising_hand_woman:</code> top top <code>:deaf_person:</code> <code>:deaf_man:</code> top top <code>:deaf_woman:</code> <code>:bow:</code> top top :bowing_man: <code>:bowing_man:</code> :bowing_woman: <code>:bowing_woman:</code> top top <code>:facepalm:</code> <code>:man_facepalming:</code> top top <code>:woman_facepalming:</code> <code>:shrug:</code> top top <code>:man_shrugging:</code> <code>:woman_shrugging:</code> top"},{"location":"tools/emojiCheetSheet/#person-role","title":"Person Role","text":"ico shortcode ico shortcode top <code>:health_worker:</code> <code>:man_health_worker:</code> top top <code>:woman_health_worker:</code> <code>:student:</code> top top <code>:man_student:</code> <code>:woman_student:</code> top top <code>:teacher:</code> <code>:man_teacher:</code> top top <code>:woman_teacher:</code> <code>:judge:</code> top top <code>:man_judge:</code> <code>:woman_judge:</code> top top <code>:farmer:</code> <code>:man_farmer:</code> top top <code>:woman_farmer:</code> <code>:cook:</code> top top <code>:man_cook:</code> <code>:woman_cook:</code> top top <code>:mechanic:</code> <code>:man_mechanic:</code> top top <code>:woman_mechanic:</code> <code>:factory_worker:</code> top top <code>:man_factory_worker:</code> <code>:woman_factory_worker:</code> top top <code>:office_worker:</code> <code>:man_office_worker:</code> top top <code>:woman_office_worker:</code> <code>:scientist:</code> top top <code>:man_scientist:</code> <code>:woman_scientist:</code> top top <code>:technologist:</code> <code>:man_technologist:</code> top top <code>:woman_technologist:</code> <code>:singer:</code> top top <code>:man_singer:</code> <code>:woman_singer:</code> top top <code>:artist:</code> <code>:man_artist:</code> top top <code>:woman_artist:</code> <code>:pilot:</code> top top <code>:man_pilot:</code> <code>:woman_pilot:</code> top top <code>:astronaut:</code> <code>:man_astronaut:</code> top top <code>:woman_astronaut:</code> <code>:firefighter:</code> top top <code>:man_firefighter:</code> <code>:woman_firefighter:</code> top top <code>:cop:</code> <code>:police_officer:</code> :policeman: <code>:policeman:</code> top top :policewoman: <code>:policewoman:</code> <code>:detective:</code> top top :male_detective: <code>:male_detective:</code> :female_detective: <code>:female_detective:</code> top top <code>:guard:</code> <code>:guardsman:</code> top top :guardswoman: <code>:guardswoman:</code> <code>:ninja:</code> top top <code>:construction_worker:</code> :construction_worker_man: <code>:construction_worker_man:</code> top top :construction_worker_woman: <code>:construction_worker_woman:</code> <code>:prince:</code> top top <code>:princess:</code> :person_with_turban: <code>:person_with_turban:</code> top top <code>:man_with_turban:</code> :woman_with_turban: <code>:woman_with_turban:</code> top top <code>:man_with_gua_pi_mao:</code> <code>:woman_with_headscarf:</code> top top <code>:person_in_tuxedo:</code> <code>:man_in_tuxedo:</code> top top <code>:woman_in_tuxedo:</code> <code>:person_with_veil:</code> top top <code>:man_with_veil:</code> :bride_with_veil: <code>:bride_with_veil:</code> <code>:woman_with_veil:</code> top top <code>:pregnant_woman:</code> <code>:breast_feeding:</code> top top <code>:woman_feeding_baby:</code> <code>:man_feeding_baby:</code> top top <code>:person_feeding_baby:</code> top"},{"location":"tools/emojiCheetSheet/#person-fantasy","title":"Person Fantasy","text":"ico shortcode ico shortcode top <code>:angel:</code> <code>:santa:</code> top top <code>:mrs_claus:</code> <code>:mx_claus:</code> top top <code>:superhero:</code> :superhero_man: <code>:superhero_man:</code> top top :superhero_woman: <code>:superhero_woman:</code> <code>:supervillain:</code> top top :supervillain_man: <code>:supervillain_man:</code> :supervillain_woman: <code>:supervillain_woman:</code> top top <code>:mage:</code> :mage_man: <code>:mage_man:</code> top top :mage_woman: <code>:mage_woman:</code> <code>:fairy:</code> top top :fairy_man: <code>:fairy_man:</code> :fairy_woman: <code>:fairy_woman:</code> top top <code>:vampire:</code> :vampire_man: <code>:vampire_man:</code> top top :vampire_woman: <code>:vampire_woman:</code> <code>:merperson:</code> top top <code>:merman:</code> <code>:mermaid:</code> top top <code>:elf:</code> :elf_man: <code>:elf_man:</code> top top :elf_woman: <code>:elf_woman:</code> <code>:genie:</code> top top :genie_man: <code>:genie_man:</code> :genie_woman: <code>:genie_woman:</code> top top <code>:zombie:</code> :zombie_man: <code>:zombie_man:</code> top top :zombie_woman: <code>:zombie_woman:</code> top"},{"location":"tools/emojiCheetSheet/#person-activity","title":"Person Activity","text":"ico shortcode ico shortcode top <code>:massage:</code> :massage_man: <code>:massage_man:</code> top top :massage_woman: <code>:massage_woman:</code> <code>:haircut:</code> top top :haircut_man: <code>:haircut_man:</code> :haircut_woman: <code>:haircut_woman:</code> top top <code>:walking:</code> :walking_man: <code>:walking_man:</code> top top :walking_woman: <code>:walking_woman:</code> :standing_person: <code>:standing_person:</code> top top :standing_man: <code>:standing_man:</code> :standing_woman: <code>:standing_woman:</code> top top :kneeling_person: <code>:kneeling_person:</code> :kneeling_man: <code>:kneeling_man:</code> top top :kneeling_woman: <code>:kneeling_woman:</code> <code>:person_with_probing_cane:</code> top top <code>:man_with_probing_cane:</code> <code>:woman_with_probing_cane:</code> top top <code>:person_in_motorized_wheelchair:</code> <code>:man_in_motorized_wheelchair:</code> top top <code>:woman_in_motorized_wheelchair:</code> <code>:person_in_manual_wheelchair:</code> top top <code>:man_in_manual_wheelchair:</code> <code>:woman_in_manual_wheelchair:</code> top top <code>:runner:</code> <code>:running:</code> :running_man: <code>:running_man:</code> top top :running_woman: <code>:running_woman:</code> <code>:dancer:</code> <code>:woman_dancing:</code> top top <code>:man_dancing:</code> :business_suit_levitating: <code>:business_suit_levitating:</code> top top <code>:dancers:</code> :dancing_men: <code>:dancing_men:</code> top top :dancing_women: <code>:dancing_women:</code> :sauna_person: <code>:sauna_person:</code> top top :sauna_man: <code>:sauna_man:</code> :sauna_woman: <code>:sauna_woman:</code> top top :climbing: <code>:climbing:</code> :climbing_man: <code>:climbing_man:</code> top top :climbing_woman: <code>:climbing_woman:</code> top"},{"location":"tools/emojiCheetSheet/#person-sport","title":"Person Sport","text":"ico shortcode ico shortcode top <code>:person_fencing:</code> <code>:horse_racing:</code> top top <code>:skier:</code> <code>:snowboarder:</code> top top :golfing: <code>:golfing:</code> :golfing_man: <code>:golfing_man:</code> top top :golfing_woman: <code>:golfing_woman:</code> <code>:surfer:</code> top top :surfing_man: <code>:surfing_man:</code> :surfing_woman: <code>:surfing_woman:</code> top top <code>:rowboat:</code> :rowing_man: <code>:rowing_man:</code> top top :rowing_woman: <code>:rowing_woman:</code> <code>:swimmer:</code> top top :swimming_man: <code>:swimming_man:</code> :swimming_woman: <code>:swimming_woman:</code> top top :bouncing_ball_person: <code>:bouncing_ball_person:</code> :basketball_man: <code>:basketball_man:</code> <code>:bouncing_ball_man:</code> top top :basketball_woman: <code>:basketball_woman:</code> <code>:bouncing_ball_woman:</code> :weight_lifting: <code>:weight_lifting:</code> top top :weight_lifting_man: <code>:weight_lifting_man:</code> :weight_lifting_woman: <code>:weight_lifting_woman:</code> top top <code>:bicyclist:</code> :biking_man: <code>:biking_man:</code> top top :biking_woman: <code>:biking_woman:</code> <code>:mountain_bicyclist:</code> top top :mountain_biking_man: <code>:mountain_biking_man:</code> :mountain_biking_woman: <code>:mountain_biking_woman:</code> top top :cartwheeling: <code>:cartwheeling:</code> <code>:man_cartwheeling:</code> top top <code>:woman_cartwheeling:</code> <code>:wrestling:</code> top top <code>:men_wrestling:</code> <code>:women_wrestling:</code> top top <code>:water_polo:</code> <code>:man_playing_water_polo:</code> top top <code>:woman_playing_water_polo:</code> :handball_person: <code>:handball_person:</code> top top <code>:man_playing_handball:</code> <code>:woman_playing_handball:</code> top top :juggling_person: <code>:juggling_person:</code> <code>:man_juggling:</code> top top <code>:woman_juggling:</code> top"},{"location":"tools/emojiCheetSheet/#person-resting","title":"Person Resting","text":"ico shortcode ico shortcode top :lotus_position: <code>:lotus_position:</code> :lotus_position_man: <code>:lotus_position_man:</code> top top :lotus_position_woman: <code>:lotus_position_woman:</code> <code>:bath:</code> top top :sleeping_bed: <code>:sleeping_bed:</code> top"},{"location":"tools/emojiCheetSheet/#family","title":"Family","text":"ico shortcode ico shortcode top <code>:people_holding_hands:</code> <code>:two_women_holding_hands:</code> top top <code>:couple:</code> <code>:two_men_holding_hands:</code> top top <code>:couplekiss:</code> :couplekiss_man_woman: <code>:couplekiss_man_woman:</code> top top :couplekiss_man_man: <code>:couplekiss_man_man:</code> :couplekiss_woman_woman: <code>:couplekiss_woman_woman:</code> top top <code>:couple_with_heart:</code> <code>:couple_with_heart_woman_man:</code> top top :couple_with_heart_man_man: <code>:couple_with_heart_man_man:</code> :couple_with_heart_woman_woman: <code>:couple_with_heart_woman_woman:</code> top top <code>:family:</code> <code>:family_man_woman_boy:</code> top top :family_man_woman_girl: <code>:family_man_woman_girl:</code> :family_man_woman_girl_boy: <code>:family_man_woman_girl_boy:</code> top top :family_man_woman_boy_boy: <code>:family_man_woman_boy_boy:</code> :family_man_woman_girl_girl: <code>:family_man_woman_girl_girl:</code> top top :family_man_man_boy: <code>:family_man_man_boy:</code> :family_man_man_girl: <code>:family_man_man_girl:</code> top top :family_man_man_girl_boy: <code>:family_man_man_girl_boy:</code> :family_man_man_boy_boy: <code>:family_man_man_boy_boy:</code> top top :family_man_man_girl_girl: <code>:family_man_man_girl_girl:</code> :family_woman_woman_boy: <code>:family_woman_woman_boy:</code> top top :family_woman_woman_girl: <code>:family_woman_woman_girl:</code> :family_woman_woman_girl_boy: <code>:family_woman_woman_girl_boy:</code> top top :family_woman_woman_boy_boy: <code>:family_woman_woman_boy_boy:</code> :family_woman_woman_girl_girl: <code>:family_woman_woman_girl_girl:</code> top top <code>:family_man_boy:</code> <code>:family_man_boy_boy:</code> top top <code>:family_man_girl:</code> <code>:family_man_girl_boy:</code> top top <code>:family_man_girl_girl:</code> <code>:family_woman_boy:</code> top top <code>:family_woman_boy_boy:</code> <code>:family_woman_girl:</code> top top <code>:family_woman_girl_boy:</code> <code>:family_woman_girl_girl:</code> top"},{"location":"tools/emojiCheetSheet/#person-symbol","title":"Person Symbol","text":"ico shortcode ico shortcode top <code>:speaking_head:</code> <code>:bust_in_silhouette:</code> top top <code>:busts_in_silhouette:</code> <code>:people_hugging:</code> top top <code>:footprints:</code> top"},{"location":"tools/emojiCheetSheet/#animals-nature","title":"Animals &amp; Nature","text":"<ul> <li>Animal Mammal</li> <li>Animal Bird</li> <li>Animal Amphibian</li> <li>Animal Reptile</li> <li>Animal Marine</li> <li>Animal Bug</li> <li>Plant Flower</li> <li>Plant Other</li> </ul>"},{"location":"tools/emojiCheetSheet/#animal-mammal","title":"Animal Mammal","text":"ico shortcode ico shortcode top <code>:monkey_face:</code> <code>:monkey:</code> top top <code>:gorilla:</code> <code>:orangutan:</code> top top <code>:dog:</code> <code>:dog2:</code> top top <code>:guide_dog:</code> <code>:service_dog:</code> top top <code>:poodle:</code> <code>:wolf:</code> top top <code>:fox_face:</code> <code>:raccoon:</code> top top <code>:cat:</code> <code>:cat2:</code> top top <code>:black_cat:</code> <code>:lion:</code> top top <code>:tiger:</code> <code>:tiger2:</code> top top <code>:leopard:</code> <code>:horse:</code> top top <code>:racehorse:</code> <code>:unicorn:</code> top top <code>:zebra:</code> <code>:deer:</code> top top <code>:bison:</code> <code>:cow:</code> top top <code>:ox:</code> <code>:water_buffalo:</code> top top <code>:cow2:</code> <code>:pig:</code> top top <code>:pig2:</code> <code>:boar:</code> top top <code>:pig_nose:</code> <code>:ram:</code> top top <code>:sheep:</code> <code>:goat:</code> top top <code>:dromedary_camel:</code> <code>:camel:</code> top top <code>:llama:</code> <code>:giraffe:</code> top top <code>:elephant:</code> <code>:mammoth:</code> top top <code>:rhinoceros:</code> <code>:hippopotamus:</code> top top <code>:mouse:</code> <code>:mouse2:</code> top top <code>:rat:</code> <code>:hamster:</code> top top <code>:rabbit:</code> <code>:rabbit2:</code> top top <code>:chipmunk:</code> <code>:beaver:</code> top top <code>:hedgehog:</code> <code>:bat:</code> top top <code>:bear:</code> <code>:polar_bear:</code> top top <code>:koala:</code> <code>:panda_face:</code> top top <code>:sloth:</code> <code>:otter:</code> top top <code>:skunk:</code> <code>:kangaroo:</code> top top <code>:badger:</code> <code>:feet:</code> <code>:paw_prints:</code> top"},{"location":"tools/emojiCheetSheet/#animal-bird","title":"Animal Bird","text":"ico shortcode ico shortcode top <code>:turkey:</code> <code>:chicken:</code> top top <code>:rooster:</code> <code>:hatching_chick:</code> top top <code>:baby_chick:</code> <code>:hatched_chick:</code> top top <code>:bird:</code> <code>:penguin:</code> top top <code>:dove:</code> <code>:eagle:</code> top top <code>:duck:</code> <code>:swan:</code> top top <code>:owl:</code> <code>:dodo:</code> top top <code>:feather:</code> <code>:flamingo:</code> top top <code>:peacock:</code> <code>:parrot:</code> top"},{"location":"tools/emojiCheetSheet/#animal-amphibian","title":"Animal Amphibian","text":"ico shortcode top <code>:frog:</code> top"},{"location":"tools/emojiCheetSheet/#animal-reptile","title":"Animal Reptile","text":"ico shortcode ico shortcode top <code>:crocodile:</code> <code>:turtle:</code> top top <code>:lizard:</code> <code>:snake:</code> top top <code>:dragon_face:</code> <code>:dragon:</code> top top <code>:sauropod:</code> :t-rex: <code>:t-rex:</code> top"},{"location":"tools/emojiCheetSheet/#animal-marine","title":"Animal Marine","text":"ico shortcode ico shortcode top <code>:whale:</code> <code>:whale2:</code> top top <code>:dolphin:</code> <code>:flipper:</code> <code>:seal:</code> top top <code>:fish:</code> <code>:tropical_fish:</code> top top <code>:blowfish:</code> <code>:shark:</code> top top <code>:octopus:</code> <code>:shell:</code> top"},{"location":"tools/emojiCheetSheet/#animal-bug","title":"Animal Bug","text":"ico shortcode ico shortcode top <code>:snail:</code> <code>:butterfly:</code> top top <code>:bug:</code> <code>:ant:</code> top top <code>:bee:</code> <code>:honeybee:</code> <code>:beetle:</code> top top <code>:lady_beetle:</code> <code>:cricket:</code> top top <code>:cockroach:</code> <code>:spider:</code> top top <code>:spider_web:</code> <code>:scorpion:</code> top top <code>:mosquito:</code> <code>:fly:</code> top top <code>:worm:</code> <code>:microbe:</code> top"},{"location":"tools/emojiCheetSheet/#plant-flower","title":"Plant Flower","text":"ico shortcode ico shortcode top <code>:bouquet:</code> <code>:cherry_blossom:</code> top top <code>:white_flower:</code> <code>:rosette:</code> top top <code>:rose:</code> <code>:wilted_flower:</code> top top <code>:hibiscus:</code> <code>:sunflower:</code> top top <code>:blossom:</code> <code>:tulip:</code> top"},{"location":"tools/emojiCheetSheet/#plant-other","title":"Plant Other","text":"ico shortcode ico shortcode top <code>:seedling:</code> <code>:potted_plant:</code> top top <code>:evergreen_tree:</code> <code>:deciduous_tree:</code> top top <code>:palm_tree:</code> <code>:cactus:</code> top top <code>:ear_of_rice:</code> <code>:herb:</code> top top <code>:shamrock:</code> <code>:four_leaf_clover:</code> top top <code>:maple_leaf:</code> <code>:fallen_leaf:</code> top top <code>:leaves:</code> <code>:mushroom:</code> top"},{"location":"tools/emojiCheetSheet/#food-drink","title":"Food &amp; Drink","text":"<ul> <li>Food Fruit</li> <li>Food Vegetable</li> <li>Food Prepared</li> <li>Food Asian</li> <li>Food Marine</li> <li>Food Sweet</li> <li>Drink</li> <li>Dishware</li> </ul>"},{"location":"tools/emojiCheetSheet/#food-fruit","title":"Food Fruit","text":"ico shortcode ico shortcode top <code>:grapes:</code> <code>:melon:</code> top top <code>:watermelon:</code> :mandarin: <code>:mandarin:</code> <code>:orange:</code> <code>:tangerine:</code> top top <code>:lemon:</code> <code>:banana:</code> top top <code>:pineapple:</code> <code>:mango:</code> top top <code>:apple:</code> <code>:green_apple:</code> top top <code>:pear:</code> <code>:peach:</code> top top <code>:cherries:</code> <code>:strawberry:</code> top top <code>:blueberries:</code> <code>:kiwi_fruit:</code> top top <code>:tomato:</code> <code>:olive:</code> top top <code>:coconut:</code> top"},{"location":"tools/emojiCheetSheet/#food-vegetable","title":"Food Vegetable","text":"ico shortcode ico shortcode top <code>:avocado:</code> <code>:eggplant:</code> top top <code>:potato:</code> <code>:carrot:</code> top top <code>:corn:</code> <code>:hot_pepper:</code> top top <code>:bell_pepper:</code> <code>:cucumber:</code> top top <code>:leafy_green:</code> <code>:broccoli:</code> top top <code>:garlic:</code> <code>:onion:</code> top top <code>:peanuts:</code> <code>:chestnut:</code> top"},{"location":"tools/emojiCheetSheet/#food-prepared","title":"Food Prepared","text":"ico shortcode ico shortcode top <code>:bread:</code> <code>:croissant:</code> top top <code>:baguette_bread:</code> <code>:flatbread:</code> top top <code>:pretzel:</code> <code>:bagel:</code> top top <code>:pancakes:</code> <code>:waffle:</code> top top <code>:cheese:</code> <code>:meat_on_bone:</code> top top <code>:poultry_leg:</code> <code>:cut_of_meat:</code> top top <code>:bacon:</code> <code>:hamburger:</code> top top <code>:fries:</code> <code>:pizza:</code> top top <code>:hotdog:</code> <code>:sandwich:</code> top top <code>:taco:</code> <code>:burrito:</code> top top <code>:tamale:</code> <code>:stuffed_flatbread:</code> top top <code>:falafel:</code> <code>:egg:</code> top top :fried_egg: <code>:fried_egg:</code> <code>:shallow_pan_of_food:</code> top top <code>:stew:</code> <code>:fondue:</code> top top <code>:bowl_with_spoon:</code> <code>:green_salad:</code> top top <code>:popcorn:</code> <code>:butter:</code> top top <code>:salt:</code> <code>:canned_food:</code> top"},{"location":"tools/emojiCheetSheet/#food-asian","title":"Food Asian","text":"ico shortcode ico shortcode top <code>:bento:</code> <code>:rice_cracker:</code> top top <code>:rice_ball:</code> <code>:rice:</code> top top <code>:curry:</code> <code>:ramen:</code> top top <code>:spaghetti:</code> <code>:sweet_potato:</code> top top <code>:oden:</code> <code>:sushi:</code> top top <code>:fried_shrimp:</code> <code>:fish_cake:</code> top top <code>:moon_cake:</code> <code>:dango:</code> top top <code>:dumpling:</code> <code>:fortune_cookie:</code> top top <code>:takeout_box:</code> top"},{"location":"tools/emojiCheetSheet/#food-marine","title":"Food Marine","text":"ico shortcode ico shortcode top <code>:crab:</code> <code>:lobster:</code> top top <code>:shrimp:</code> <code>:squid:</code> top top <code>:oyster:</code> top"},{"location":"tools/emojiCheetSheet/#food-sweet","title":"Food Sweet","text":"ico shortcode ico shortcode top <code>:icecream:</code> <code>:shaved_ice:</code> top top <code>:ice_cream:</code> <code>:doughnut:</code> top top <code>:cookie:</code> <code>:birthday:</code> top top <code>:cake:</code> <code>:cupcake:</code> top top <code>:pie:</code> <code>:chocolate_bar:</code> top top <code>:candy:</code> <code>:lollipop:</code> top top <code>:custard:</code> <code>:honey_pot:</code> top"},{"location":"tools/emojiCheetSheet/#drink","title":"Drink","text":"ico shortcode ico shortcode top <code>:baby_bottle:</code> :milk_glass: <code>:milk_glass:</code> top top <code>:coffee:</code> <code>:teapot:</code> top top <code>:tea:</code> <code>:sake:</code> top top <code>:champagne:</code> <code>:wine_glass:</code> top top <code>:cocktail:</code> <code>:tropical_drink:</code> top top <code>:beer:</code> <code>:beers:</code> top top :clinking_glasses: <code>:clinking_glasses:</code> <code>:tumbler_glass:</code> top top <code>:cup_with_straw:</code> <code>:bubble_tea:</code> top top <code>:beverage_box:</code> <code>:mate:</code> top top <code>:ice_cube:</code> top"},{"location":"tools/emojiCheetSheet/#dishware","title":"Dishware","text":"ico shortcode ico shortcode top <code>:chopsticks:</code> :plate_with_cutlery: <code>:plate_with_cutlery:</code> top top <code>:fork_and_knife:</code> <code>:spoon:</code> top top :hocho: <code>:hocho:</code> <code>:knife:</code> <code>:amphora:</code> top"},{"location":"tools/emojiCheetSheet/#travel-places","title":"Travel &amp; Places","text":"<ul> <li>Place Map</li> <li>Place Geographic</li> <li>Place Building</li> <li>Place Religious</li> <li>Place Other</li> <li>Transport Ground</li> <li>Transport Water</li> <li>Transport Air</li> <li>Hotel</li> <li>Time</li> <li>Sky &amp; Weather</li> </ul>"},{"location":"tools/emojiCheetSheet/#place-map","title":"Place Map","text":"ico shortcode ico shortcode top <code>:earth_africa:</code> <code>:earth_americas:</code> top top <code>:earth_asia:</code> <code>:globe_with_meridians:</code> top top <code>:world_map:</code> <code>:japan:</code> top top <code>:compass:</code> top"},{"location":"tools/emojiCheetSheet/#place-geographic","title":"Place Geographic","text":"ico shortcode ico shortcode top <code>:mountain_snow:</code> <code>:mountain:</code> top top <code>:volcano:</code> <code>:mount_fuji:</code> top top <code>:camping:</code> <code>:beach_umbrella:</code> top top <code>:desert:</code> <code>:desert_island:</code> top top <code>:national_park:</code> top"},{"location":"tools/emojiCheetSheet/#place-building","title":"Place Building","text":"ico shortcode ico shortcode top <code>:stadium:</code> <code>:classical_building:</code> top top <code>:building_construction:</code> <code>:bricks:</code> top top <code>:rock:</code> <code>:wood:</code> top top <code>:hut:</code> <code>:houses:</code> top top :derelict_house: <code>:derelict_house:</code> <code>:house:</code> top top <code>:house_with_garden:</code> <code>:office:</code> top top <code>:post_office:</code> <code>:european_post_office:</code> top top <code>:hospital:</code> <code>:bank:</code> top top <code>:hotel:</code> <code>:love_hotel:</code> top top <code>:convenience_store:</code> <code>:school:</code> top top <code>:department_store:</code> <code>:factory:</code> top top <code>:japanese_castle:</code> <code>:european_castle:</code> top top <code>:wedding:</code> <code>:tokyo_tower:</code> top top <code>:statue_of_liberty:</code> top"},{"location":"tools/emojiCheetSheet/#place-religious","title":"Place Religious","text":"ico shortcode ico shortcode top <code>:church:</code> <code>:mosque:</code> top top <code>:hindu_temple:</code> <code>:synagogue:</code> top top <code>:shinto_shrine:</code> <code>:kaaba:</code> top"},{"location":"tools/emojiCheetSheet/#place-other","title":"Place Other","text":"ico shortcode ico shortcode top <code>:fountain:</code> <code>:tent:</code> top top <code>:foggy:</code> <code>:night_with_stars:</code> top top <code>:cityscape:</code> <code>:sunrise_over_mountains:</code> top top <code>:sunrise:</code> <code>:city_sunset:</code> top top <code>:city_sunrise:</code> <code>:bridge_at_night:</code> top top <code>:hotsprings:</code> <code>:carousel_horse:</code> top top <code>:ferris_wheel:</code> <code>:roller_coaster:</code> top top <code>:barber:</code> <code>:circus_tent:</code> top"},{"location":"tools/emojiCheetSheet/#transport-ground","title":"Transport Ground","text":"ico shortcode ico shortcode top <code>:steam_locomotive:</code> <code>:railway_car:</code> top top <code>:bullettrain_side:</code> <code>:bullettrain_front:</code> top top <code>:train2:</code> <code>:metro:</code> top top <code>:light_rail:</code> <code>:station:</code> top top <code>:tram:</code> <code>:monorail:</code> top top <code>:mountain_railway:</code> <code>:train:</code> top top <code>:bus:</code> <code>:oncoming_bus:</code> top top <code>:trolleybus:</code> <code>:minibus:</code> top top <code>:ambulance:</code> <code>:fire_engine:</code> top top <code>:police_car:</code> <code>:oncoming_police_car:</code> top top <code>:taxi:</code> <code>:oncoming_taxi:</code> top top :car: <code>:car:</code> <code>:red_car:</code> <code>:oncoming_automobile:</code> top top <code>:blue_car:</code> <code>:pickup_truck:</code> top top <code>:truck:</code> <code>:articulated_lorry:</code> top top <code>:tractor:</code> <code>:racing_car:</code> top top <code>:motorcycle:</code> <code>:motor_scooter:</code> top top <code>:manual_wheelchair:</code> <code>:motorized_wheelchair:</code> top top <code>:auto_rickshaw:</code> <code>:bike:</code> top top <code>:kick_scooter:</code> <code>:skateboard:</code> top top <code>:roller_skate:</code> <code>:busstop:</code> top top <code>:motorway:</code> <code>:railway_track:</code> top top <code>:oil_drum:</code> <code>:fuelpump:</code> top top <code>:rotating_light:</code> <code>:traffic_light:</code> top top <code>:vertical_traffic_light:</code> <code>:stop_sign:</code> top top <code>:construction:</code> top"},{"location":"tools/emojiCheetSheet/#transport-water","title":"Transport Water","text":"ico shortcode ico shortcode top <code>:anchor:</code> :boat: <code>:boat:</code> <code>:sailboat:</code> top top <code>:canoe:</code> <code>:speedboat:</code> top top <code>:passenger_ship:</code> <code>:ferry:</code> top top <code>:motor_boat:</code> <code>:ship:</code> top"},{"location":"tools/emojiCheetSheet/#transport-air","title":"Transport Air","text":"ico shortcode ico shortcode top <code>:airplane:</code> <code>:small_airplane:</code> top top :flight_departure: <code>:flight_departure:</code> :flight_arrival: <code>:flight_arrival:</code> top top <code>:parachute:</code> <code>:seat:</code> top top <code>:helicopter:</code> <code>:suspension_railway:</code> top top <code>:mountain_cableway:</code> <code>:aerial_tramway:</code> top top :artificial_satellite: <code>:artificial_satellite:</code> <code>:rocket:</code> top top <code>:flying_saucer:</code> top"},{"location":"tools/emojiCheetSheet/#hotel","title":"Hotel","text":"ico shortcode ico shortcode top <code>:bellhop_bell:</code> <code>:luggage:</code> top"},{"location":"tools/emojiCheetSheet/#time","title":"Time","text":"ico shortcode ico shortcode top <code>:hourglass:</code> <code>:hourglass_flowing_sand:</code> top top <code>:watch:</code> <code>:alarm_clock:</code> top top <code>:stopwatch:</code> <code>:timer_clock:</code> top top :mantelpiece_clock: <code>:mantelpiece_clock:</code> <code>:clock12:</code> top top <code>:clock1230:</code> <code>:clock1:</code> top top <code>:clock130:</code> <code>:clock2:</code> top top <code>:clock230:</code> <code>:clock3:</code> top top <code>:clock330:</code> <code>:clock4:</code> top top <code>:clock430:</code> <code>:clock5:</code> top top <code>:clock530:</code> <code>:clock6:</code> top top <code>:clock630:</code> <code>:clock7:</code> top top <code>:clock730:</code> <code>:clock8:</code> top top <code>:clock830:</code> <code>:clock9:</code> top top <code>:clock930:</code> <code>:clock10:</code> top top <code>:clock1030:</code> <code>:clock11:</code> top top <code>:clock1130:</code> top"},{"location":"tools/emojiCheetSheet/#sky-weather","title":"Sky &amp; Weather","text":"ico shortcode ico shortcode top <code>:new_moon:</code> <code>:waxing_crescent_moon:</code> top top <code>:first_quarter_moon:</code> :moon: <code>:moon:</code> <code>:waxing_gibbous_moon:</code> top top <code>:full_moon:</code> <code>:waning_gibbous_moon:</code> top top <code>:last_quarter_moon:</code> <code>:waning_crescent_moon:</code> top top <code>:crescent_moon:</code> <code>:new_moon_with_face:</code> top top <code>:first_quarter_moon_with_face:</code> <code>:last_quarter_moon_with_face:</code> top top <code>:thermometer:</code> <code>:sunny:</code> top top <code>:full_moon_with_face:</code> <code>:sun_with_face:</code> top top <code>:ringed_planet:</code> <code>:star:</code> top top <code>:star2:</code> <code>:stars:</code> top top <code>:milky_way:</code> <code>:cloud:</code> top top <code>:partly_sunny:</code> :cloud_with_lightning_and_rain: <code>:cloud_with_lightning_and_rain:</code> top top :sun_behind_small_cloud: <code>:sun_behind_small_cloud:</code> :sun_behind_large_cloud: <code>:sun_behind_large_cloud:</code> top top :sun_behind_rain_cloud: <code>:sun_behind_rain_cloud:</code> <code>:cloud_with_rain:</code> top top <code>:cloud_with_snow:</code> <code>:cloud_with_lightning:</code> top top <code>:tornado:</code> <code>:fog:</code> top top <code>:wind_face:</code> <code>:cyclone:</code> top top <code>:rainbow:</code> <code>:closed_umbrella:</code> top top :open_umbrella: <code>:open_umbrella:</code> <code>:umbrella:</code> top top :parasol_on_ground: <code>:parasol_on_ground:</code> <code>:zap:</code> top top <code>:snowflake:</code> :snowman_with_snow: <code>:snowman_with_snow:</code> top top <code>:snowman:</code> <code>:comet:</code> top top <code>:fire:</code> <code>:droplet:</code> top top <code>:ocean:</code> top"},{"location":"tools/emojiCheetSheet/#activities","title":"Activities","text":"<ul> <li>Event</li> <li>Award Medal</li> <li>Sport</li> <li>Game</li> <li>Arts &amp; Crafts</li> </ul>"},{"location":"tools/emojiCheetSheet/#event","title":"Event","text":"ico shortcode ico shortcode top <code>:jack_o_lantern:</code> <code>:christmas_tree:</code> top top <code>:fireworks:</code> <code>:sparkler:</code> top top <code>:firecracker:</code> <code>:sparkles:</code> top top <code>:balloon:</code> <code>:tada:</code> top top <code>:confetti_ball:</code> <code>:tanabata_tree:</code> top top <code>:bamboo:</code> <code>:dolls:</code> top top <code>:flags:</code> <code>:wind_chime:</code> top top <code>:rice_scene:</code> <code>:red_envelope:</code> top top <code>:ribbon:</code> <code>:gift:</code> top top <code>:reminder_ribbon:</code> <code>:tickets:</code> top top <code>:ticket:</code> top"},{"location":"tools/emojiCheetSheet/#award-medal","title":"Award Medal","text":"ico shortcode ico shortcode top :medal_military: <code>:medal_military:</code> <code>:trophy:</code> top top :medal_sports: <code>:medal_sports:</code> :1st_place_medal: <code>:1st_place_medal:</code> top top :2nd_place_medal: <code>:2nd_place_medal:</code> :3rd_place_medal: <code>:3rd_place_medal:</code> top"},{"location":"tools/emojiCheetSheet/#sport","title":"Sport","text":"ico shortcode ico shortcode top <code>:soccer:</code> <code>:baseball:</code> top top <code>:softball:</code> <code>:basketball:</code> top top <code>:volleyball:</code> <code>:football:</code> top top <code>:rugby_football:</code> <code>:tennis:</code> top top <code>:flying_disc:</code> <code>:bowling:</code> top top <code>:cricket_game:</code> <code>:field_hockey:</code> top top <code>:ice_hockey:</code> <code>:lacrosse:</code> top top <code>:ping_pong:</code> <code>:badminton:</code> top top <code>:boxing_glove:</code> <code>:martial_arts_uniform:</code> top top <code>:goal_net:</code> <code>:golf:</code> top top <code>:ice_skate:</code> <code>:fishing_pole_and_fish:</code> top top <code>:diving_mask:</code> <code>:running_shirt_with_sash:</code> top top <code>:ski:</code> <code>:sled:</code> top top <code>:curling_stone:</code> top"},{"location":"tools/emojiCheetSheet/#game","title":"Game","text":"ico shortcode ico shortcode top <code>:dart:</code> <code>:yo_yo:</code> top top <code>:kite:</code> <code>:gun:</code> top top <code>:8ball:</code> <code>:crystal_ball:</code> top top <code>:magic_wand:</code> <code>:video_game:</code> top top <code>:joystick:</code> <code>:slot_machine:</code> top top <code>:game_die:</code> <code>:jigsaw:</code> top top <code>:teddy_bear:</code> :pinata: <code>:pinata:</code> top top <code>:nesting_dolls:</code> <code>:spades:</code> top top <code>:hearts:</code> <code>:diamonds:</code> top top <code>:clubs:</code> <code>:chess_pawn:</code> top top <code>:black_joker:</code> <code>:mahjong:</code> top top <code>:flower_playing_cards:</code> top"},{"location":"tools/emojiCheetSheet/#arts-crafts","title":"Arts &amp; Crafts","text":"ico shortcode ico shortcode top <code>:performing_arts:</code> :framed_picture: <code>:framed_picture:</code> top top <code>:art:</code> <code>:thread:</code> top top <code>:sewing_needle:</code> <code>:yarn:</code> top top <code>:knot:</code> top"},{"location":"tools/emojiCheetSheet/#objects","title":"Objects","text":"<ul> <li>Clothing</li> <li>Sound</li> <li>Music</li> <li>Musical Instrument</li> <li>Phone</li> <li>Computer</li> <li>Light &amp; Video</li> <li>Book Paper</li> <li>Money</li> <li>Mail</li> <li>Writing</li> <li>Office</li> <li>Lock</li> <li>Tool</li> <li>Science</li> <li>Medical</li> <li>Household</li> <li>Other Object</li> </ul>"},{"location":"tools/emojiCheetSheet/#clothing","title":"Clothing","text":"ico shortcode ico shortcode top <code>:eyeglasses:</code> <code>:dark_sunglasses:</code> top top <code>:goggles:</code> <code>:lab_coat:</code> top top <code>:safety_vest:</code> <code>:necktie:</code> top top <code>:shirt:</code> <code>:tshirt:</code> <code>:jeans:</code> top top <code>:scarf:</code> <code>:gloves:</code> top top <code>:coat:</code> <code>:socks:</code> top top <code>:dress:</code> <code>:kimono:</code> top top <code>:sari:</code> <code>:one_piece_swimsuit:</code> top top :swim_brief: <code>:swim_brief:</code> <code>:shorts:</code> top top <code>:bikini:</code> <code>:womans_clothes:</code> top top <code>:purse:</code> <code>:handbag:</code> top top <code>:pouch:</code> :shopping: <code>:shopping:</code> top top <code>:school_satchel:</code> <code>:thong_sandal:</code> top top <code>:mans_shoe:</code> <code>:shoe:</code> <code>:athletic_shoe:</code> top top <code>:hiking_boot:</code> <code>:flat_shoe:</code> top top <code>:high_heel:</code> <code>:sandal:</code> top top <code>:ballet_shoes:</code> <code>:boot:</code> top top <code>:crown:</code> <code>:womans_hat:</code> top top <code>:tophat:</code> <code>:mortar_board:</code> top top <code>:billed_cap:</code> <code>:military_helmet:</code> top top :rescue_worker_helmet: <code>:rescue_worker_helmet:</code> <code>:prayer_beads:</code> top top <code>:lipstick:</code> <code>:ring:</code> top top <code>:gem:</code> top"},{"location":"tools/emojiCheetSheet/#sound","title":"Sound","text":"ico shortcode ico shortcode top <code>:mute:</code> <code>:speaker:</code> top top <code>:sound:</code> <code>:loud_sound:</code> top top <code>:loudspeaker:</code> <code>:mega:</code> top top <code>:postal_horn:</code> <code>:bell:</code> top top <code>:no_bell:</code> top"},{"location":"tools/emojiCheetSheet/#music","title":"Music","text":"ico shortcode ico shortcode top <code>:musical_score:</code> <code>:musical_note:</code> top top <code>:notes:</code> <code>:studio_microphone:</code> top top <code>:level_slider:</code> <code>:control_knobs:</code> top top <code>:microphone:</code> <code>:headphones:</code> top top <code>:radio:</code> top"},{"location":"tools/emojiCheetSheet/#musical-instrument","title":"Musical Instrument","text":"ico shortcode ico shortcode top <code>:saxophone:</code> <code>:accordion:</code> top top <code>:guitar:</code> <code>:musical_keyboard:</code> top top <code>:trumpet:</code> <code>:violin:</code> top top <code>:banjo:</code> <code>:drum:</code> top top <code>:long_drum:</code> top"},{"location":"tools/emojiCheetSheet/#phone","title":"Phone","text":"ico shortcode ico shortcode top :iphone: <code>:iphone:</code> <code>:calling:</code> top top :phone: <code>:phone:</code> <code>:telephone:</code> <code>:telephone_receiver:</code> top top <code>:pager:</code> <code>:fax:</code> top"},{"location":"tools/emojiCheetSheet/#computer","title":"Computer","text":"ico shortcode ico shortcode top <code>:battery:</code> <code>:electric_plug:</code> top top <code>:computer:</code> <code>:desktop_computer:</code> top top <code>:printer:</code> <code>:keyboard:</code> top top :computer_mouse: <code>:computer_mouse:</code> <code>:trackball:</code> top top <code>:minidisc:</code> <code>:floppy_disk:</code> top top <code>:cd:</code> <code>:dvd:</code> top top <code>:abacus:</code> top"},{"location":"tools/emojiCheetSheet/#light-video","title":"Light &amp; Video","text":"ico shortcode ico shortcode top <code>:movie_camera:</code> :film_strip: <code>:film_strip:</code> top top <code>:film_projector:</code> <code>:clapper:</code> top top <code>:tv:</code> <code>:camera:</code> top top :camera_flash: <code>:camera_flash:</code> <code>:video_camera:</code> top top <code>:vhs:</code> <code>:mag:</code> top top <code>:mag_right:</code> <code>:candle:</code> top top <code>:bulb:</code> <code>:flashlight:</code> top top <code>:izakaya_lantern:</code> <code>:lantern:</code> <code>:diya_lamp:</code> top"},{"location":"tools/emojiCheetSheet/#book-paper","title":"Book Paper","text":"ico shortcode ico shortcode top <code>:notebook_with_decorative_cover:</code> <code>:closed_book:</code> top top <code>:book:</code> <code>:open_book:</code> <code>:green_book:</code> top top <code>:blue_book:</code> <code>:orange_book:</code> top top <code>:books:</code> <code>:notebook:</code> top top <code>:ledger:</code> <code>:page_with_curl:</code> top top <code>:scroll:</code> <code>:page_facing_up:</code> top top <code>:newspaper:</code> :newspaper_roll: <code>:newspaper_roll:</code> top top <code>:bookmark_tabs:</code> <code>:bookmark:</code> top top <code>:label:</code> top"},{"location":"tools/emojiCheetSheet/#money","title":"Money","text":"ico shortcode ico shortcode top <code>:moneybag:</code> <code>:coin:</code> top top <code>:yen:</code> <code>:dollar:</code> top top <code>:euro:</code> <code>:pound:</code> top top <code>:money_with_wings:</code> <code>:credit_card:</code> top top <code>:receipt:</code> <code>:chart:</code> top"},{"location":"tools/emojiCheetSheet/#mail","title":"Mail","text":"ico shortcode ico shortcode top <code>:envelope:</code> <code>:e-mail:</code> <code>:email:</code> top top <code>:incoming_envelope:</code> <code>:envelope_with_arrow:</code> top top <code>:outbox_tray:</code> <code>:inbox_tray:</code> top top <code>:package:</code> <code>:mailbox:</code> top top <code>:mailbox_closed:</code> <code>:mailbox_with_mail:</code> top top <code>:mailbox_with_no_mail:</code> <code>:postbox:</code> top top <code>:ballot_box:</code> top"},{"location":"tools/emojiCheetSheet/#writing","title":"Writing","text":"ico shortcode ico shortcode top <code>:pencil2:</code> <code>:black_nib:</code> top top <code>:fountain_pen:</code> <code>:pen:</code> top top <code>:paintbrush:</code> <code>:crayon:</code> top top <code>:memo:</code> <code>:pencil:</code> top"},{"location":"tools/emojiCheetSheet/#office","title":"Office","text":"ico shortcode ico shortcode top <code>:briefcase:</code> <code>:file_folder:</code> top top <code>:open_file_folder:</code> <code>:card_index_dividers:</code> top top <code>:date:</code> <code>:calendar:</code> top top :spiral_notepad: <code>:spiral_notepad:</code> :spiral_calendar: <code>:spiral_calendar:</code> top top <code>:card_index:</code> <code>:chart_with_upwards_trend:</code> top top <code>:chart_with_downwards_trend:</code> <code>:bar_chart:</code> top top <code>:clipboard:</code> <code>:pushpin:</code> top top <code>:round_pushpin:</code> <code>:paperclip:</code> top top <code>:paperclips:</code> <code>:straight_ruler:</code> top top <code>:triangular_ruler:</code> <code>:scissors:</code> top top <code>:card_file_box:</code> <code>:file_cabinet:</code> top top <code>:wastebasket:</code> top"},{"location":"tools/emojiCheetSheet/#lock","title":"Lock","text":"ico shortcode ico shortcode top <code>:lock:</code> <code>:unlock:</code> top top <code>:lock_with_ink_pen:</code> <code>:closed_lock_with_key:</code> top top <code>:key:</code> <code>:old_key:</code> top"},{"location":"tools/emojiCheetSheet/#tool","title":"Tool","text":"ico shortcode ico shortcode top <code>:hammer:</code> <code>:axe:</code> top top <code>:pick:</code> <code>:hammer_and_pick:</code> top top <code>:hammer_and_wrench:</code> <code>:dagger:</code> top top <code>:crossed_swords:</code> <code>:bomb:</code> top top <code>:boomerang:</code> <code>:bow_and_arrow:</code> top top <code>:shield:</code> <code>:carpentry_saw:</code> top top <code>:wrench:</code> <code>:screwdriver:</code> top top <code>:nut_and_bolt:</code> <code>:gear:</code> top top <code>:clamp:</code> <code>:balance_scale:</code> top top <code>:probing_cane:</code> <code>:link:</code> top top <code>:chains:</code> <code>:hook:</code> top top <code>:toolbox:</code> <code>:magnet:</code> top top <code>:ladder:</code> top"},{"location":"tools/emojiCheetSheet/#science","title":"Science","text":"ico shortcode ico shortcode top <code>:alembic:</code> <code>:test_tube:</code> top top <code>:petri_dish:</code> <code>:dna:</code> top top <code>:microscope:</code> <code>:telescope:</code> top top <code>:satellite:</code> top"},{"location":"tools/emojiCheetSheet/#medical","title":"Medical","text":"ico shortcode ico shortcode top <code>:syringe:</code> <code>:drop_of_blood:</code> top top <code>:pill:</code> <code>:adhesive_bandage:</code> top top <code>:stethoscope:</code> top"},{"location":"tools/emojiCheetSheet/#household","title":"Household","text":"ico shortcode ico shortcode top <code>:door:</code> <code>:elevator:</code> top top <code>:mirror:</code> <code>:window:</code> top top <code>:bed:</code> <code>:couch_and_lamp:</code> top top <code>:chair:</code> <code>:toilet:</code> top top <code>:plunger:</code> <code>:shower:</code> top top <code>:bathtub:</code> <code>:mouse_trap:</code> top top <code>:razor:</code> <code>:lotion_bottle:</code> top top <code>:safety_pin:</code> <code>:broom:</code> top top <code>:basket:</code> <code>:roll_of_paper:</code> top top <code>:bucket:</code> <code>:soap:</code> top top <code>:toothbrush:</code> <code>:sponge:</code> top top <code>:fire_extinguisher:</code> <code>:shopping_cart:</code> top"},{"location":"tools/emojiCheetSheet/#other-object","title":"Other Object","text":"ico shortcode ico shortcode top <code>:smoking:</code> <code>:coffin:</code> top top <code>:headstone:</code> <code>:funeral_urn:</code> top top <code>:nazar_amulet:</code> <code>:moyai:</code> top top <code>:placard:</code> top"},{"location":"tools/emojiCheetSheet/#symbols","title":"Symbols","text":"<ul> <li>Transport Sign</li> <li>Warning</li> <li>Arrow</li> <li>Religion</li> <li>Zodiac</li> <li>Av Symbol</li> <li>Gender</li> <li>Math</li> <li>Punctuation</li> <li>Currency</li> <li>Other Symbol</li> <li>Keycap</li> <li>Alphanum</li> <li>Geometric</li> </ul>"},{"location":"tools/emojiCheetSheet/#transport-sign","title":"Transport Sign","text":"ico shortcode ico shortcode top <code>:atm:</code> <code>:put_litter_in_its_place:</code> top top <code>:potable_water:</code> <code>:wheelchair:</code> top top <code>:mens:</code> <code>:womens:</code> top top <code>:restroom:</code> <code>:baby_symbol:</code> top top <code>:wc:</code> <code>:passport_control:</code> top top <code>:customs:</code> <code>:baggage_claim:</code> top top <code>:left_luggage:</code> top"},{"location":"tools/emojiCheetSheet/#warning","title":"Warning","text":"ico shortcode ico shortcode top <code>:warning:</code> <code>:children_crossing:</code> top top <code>:no_entry:</code> <code>:no_entry_sign:</code> top top <code>:no_bicycles:</code> <code>:no_smoking:</code> top top <code>:do_not_litter:</code> <code>:non-potable_water:</code> top top <code>:no_pedestrians:</code> <code>:no_mobile_phones:</code> top top <code>:underage:</code> <code>:radioactive:</code> top top <code>:biohazard:</code> top"},{"location":"tools/emojiCheetSheet/#arrow","title":"Arrow","text":"ico shortcode ico shortcode top <code>:arrow_up:</code> <code>:arrow_upper_right:</code> top top <code>:arrow_right:</code> <code>:arrow_lower_right:</code> top top <code>:arrow_down:</code> <code>:arrow_lower_left:</code> top top <code>:arrow_left:</code> <code>:arrow_upper_left:</code> top top <code>:arrow_up_down:</code> <code>:left_right_arrow:</code> top top <code>:leftwards_arrow_with_hook:</code> <code>:arrow_right_hook:</code> top top <code>:arrow_heading_up:</code> <code>:arrow_heading_down:</code> top top <code>:arrows_clockwise:</code> <code>:arrows_counterclockwise:</code> top top <code>:back:</code> <code>:end:</code> top top <code>:on:</code> <code>:soon:</code> top top <code>:top:</code> top"},{"location":"tools/emojiCheetSheet/#religion","title":"Religion","text":"ico shortcode ico shortcode top <code>:place_of_worship:</code> <code>:atom_symbol:</code> top top <code>:om:</code> <code>:star_of_david:</code> top top <code>:wheel_of_dharma:</code> <code>:yin_yang:</code> top top <code>:latin_cross:</code> <code>:orthodox_cross:</code> top top <code>:star_and_crescent:</code> <code>:peace_symbol:</code> top top <code>:menorah:</code> <code>:six_pointed_star:</code> top"},{"location":"tools/emojiCheetSheet/#zodiac","title":"Zodiac","text":"ico shortcode ico shortcode top <code>:aries:</code> <code>:taurus:</code> top top <code>:gemini:</code> <code>:cancer:</code> top top <code>:leo:</code> <code>:virgo:</code> top top <code>:libra:</code> <code>:scorpius:</code> top top <code>:sagittarius:</code> <code>:capricorn:</code> top top <code>:aquarius:</code> <code>:pisces:</code> top top <code>:ophiuchus:</code> top"},{"location":"tools/emojiCheetSheet/#av-symbol","title":"Av Symbol","text":"ico shortcode ico shortcode top <code>:twisted_rightwards_arrows:</code> <code>:repeat:</code> top top <code>:repeat_one:</code> <code>:arrow_forward:</code> top top <code>:fast_forward:</code> :next_track_button: <code>:next_track_button:</code> top top :play_or_pause_button: <code>:play_or_pause_button:</code> <code>:arrow_backward:</code> top top <code>:rewind:</code> :previous_track_button: <code>:previous_track_button:</code> top top <code>:arrow_up_small:</code> <code>:arrow_double_up:</code> top top <code>:arrow_down_small:</code> <code>:arrow_double_down:</code> top top <code>:pause_button:</code> <code>:stop_button:</code> top top <code>:record_button:</code> :eject_button: <code>:eject_button:</code> top top <code>:cinema:</code> <code>:low_brightness:</code> top top <code>:high_brightness:</code> <code>:signal_strength:</code> top top <code>:vibration_mode:</code> <code>:mobile_phone_off:</code> top"},{"location":"tools/emojiCheetSheet/#gender","title":"Gender","text":"ico shortcode ico shortcode top <code>:female_sign:</code> <code>:male_sign:</code> top top <code>:transgender_symbol:</code> top"},{"location":"tools/emojiCheetSheet/#math","title":"Math","text":"ico shortcode ico shortcode top <code>:heavy_multiplication_x:</code> <code>:heavy_plus_sign:</code> top top <code>:heavy_minus_sign:</code> <code>:heavy_division_sign:</code> top top <code>:infinity:</code> top"},{"location":"tools/emojiCheetSheet/#punctuation","title":"Punctuation","text":"ico shortcode ico shortcode top <code>:bangbang:</code> <code>:interrobang:</code> top top <code>:question:</code> <code>:grey_question:</code> top top <code>:grey_exclamation:</code> <code>:exclamation:</code> <code>:heavy_exclamation_mark:</code> top top <code>:wavy_dash:</code> top"},{"location":"tools/emojiCheetSheet/#currency","title":"Currency","text":"ico shortcode ico shortcode top <code>:currency_exchange:</code> <code>:heavy_dollar_sign:</code> top"},{"location":"tools/emojiCheetSheet/#other-symbol","title":"Other Symbol","text":"ico shortcode ico shortcode top <code>:medical_symbol:</code> <code>:recycle:</code> top top <code>:fleur_de_lis:</code> <code>:trident:</code> top top <code>:name_badge:</code> <code>:beginner:</code> top top <code>:o:</code> <code>:white_check_mark:</code> top top <code>:ballot_box_with_check:</code> <code>:heavy_check_mark:</code> top top <code>:x:</code> <code>:negative_squared_cross_mark:</code> top top <code>:curly_loop:</code> <code>:loop:</code> top top <code>:part_alternation_mark:</code> <code>:eight_spoked_asterisk:</code> top top <code>:eight_pointed_black_star:</code> <code>:sparkle:</code> top top <code>:copyright:</code> <code>:registered:</code> top top <code>:tm:</code> top"},{"location":"tools/emojiCheetSheet/#keycap","title":"Keycap","text":"ico shortcode ico shortcode top <code>:hash:</code> <code>:asterisk:</code> top top <code>:zero:</code> <code>:one:</code> top top <code>:two:</code> <code>:three:</code> top top <code>:four:</code> <code>:five:</code> top top <code>:six:</code> <code>:seven:</code> top top <code>:eight:</code> <code>:nine:</code> top top <code>:keycap_ten:</code> top"},{"location":"tools/emojiCheetSheet/#alphanum","title":"Alphanum","text":"ico shortcode ico shortcode top <code>:capital_abcd:</code> <code>:abcd:</code> top top <code>:1234:</code> <code>:symbols:</code> top top <code>:abc:</code> <code>:a:</code> top top <code>:ab:</code> <code>:b:</code> top top <code>:cl:</code> <code>:cool:</code> top top <code>:free:</code> <code>:information_source:</code> top top <code>:id:</code> <code>:m:</code> top top <code>:new:</code> <code>:ng:</code> top top <code>:o2:</code> <code>:ok:</code> top top <code>:parking:</code> <code>:sos:</code> top top <code>:up:</code> <code>:vs:</code> top top <code>:koko:</code> <code>:sa:</code> top top <code>:u6708:</code> <code>:u6709:</code> top top <code>:u6307:</code> <code>:ideograph_advantage:</code> top top <code>:u5272:</code> <code>:u7121:</code> top top <code>:u7981:</code> <code>:accept:</code> top top <code>:u7533:</code> <code>:u5408:</code> top top <code>:u7a7a:</code> <code>:congratulations:</code> top top <code>:secret:</code> <code>:u55b6:</code> top top <code>:u6e80:</code> top"},{"location":"tools/emojiCheetSheet/#geometric","title":"Geometric","text":"ico shortcode ico shortcode top <code>:red_circle:</code> <code>:orange_circle:</code> top top <code>:yellow_circle:</code> <code>:green_circle:</code> top top :large_blue_circle: <code>:large_blue_circle:</code> <code>:purple_circle:</code> top top <code>:brown_circle:</code> <code>:black_circle:</code> top top <code>:white_circle:</code> <code>:red_square:</code> top top <code>:orange_square:</code> <code>:yellow_square:</code> top top <code>:green_square:</code> <code>:blue_square:</code> top top <code>:purple_square:</code> <code>:brown_square:</code> top top <code>:black_large_square:</code> <code>:white_large_square:</code> top top <code>:black_medium_square:</code> <code>:white_medium_square:</code> top top <code>:black_medium_small_square:</code> <code>:white_medium_small_square:</code> top top <code>:black_small_square:</code> <code>:white_small_square:</code> top top <code>:large_orange_diamond:</code> <code>:large_blue_diamond:</code> top top <code>:small_orange_diamond:</code> <code>:small_blue_diamond:</code> top top <code>:small_red_triangle:</code> <code>:small_red_triangle_down:</code> top top <code>:diamond_shape_with_a_dot_inside:</code> <code>:radio_button:</code> top top <code>:white_square_button:</code> <code>:black_square_button:</code> top"},{"location":"tools/emojiCheetSheet/#flags","title":"Flags","text":"<ul> <li>Flag</li> <li>Country Flag</li> <li>Subdivision Flag</li> </ul>"},{"location":"tools/emojiCheetSheet/#flag","title":"Flag","text":"ico shortcode ico shortcode top <code>:checkered_flag:</code> <code>:triangular_flag_on_post:</code> top top <code>:crossed_flags:</code> <code>:black_flag:</code> top top <code>:white_flag:</code> <code>:rainbow_flag:</code> top top <code>:transgender_flag:</code> <code>:pirate_flag:</code> top"},{"location":"tools/emojiCheetSheet/#country-flag","title":"Country Flag","text":"ico shortcode ico shortcode top :ascension_island: <code>:ascension_island:</code> :andorra: <code>:andorra:</code> top top :united_arab_emirates: <code>:united_arab_emirates:</code> :afghanistan: <code>:afghanistan:</code> top top :antigua_barbuda: <code>:antigua_barbuda:</code> :anguilla: <code>:anguilla:</code> top top :albania: <code>:albania:</code> :armenia: <code>:armenia:</code> top top :angola: <code>:angola:</code> :antarctica: <code>:antarctica:</code> top top :argentina: <code>:argentina:</code> :american_samoa: <code>:american_samoa:</code> top top :austria: <code>:austria:</code> :australia: <code>:australia:</code> top top :aruba: <code>:aruba:</code> :aland_islands: <code>:aland_islands:</code> top top :azerbaijan: <code>:azerbaijan:</code> :bosnia_herzegovina: <code>:bosnia_herzegovina:</code> top top :barbados: <code>:barbados:</code> :bangladesh: <code>:bangladesh:</code> top top :belgium: <code>:belgium:</code> :burkina_faso: <code>:burkina_faso:</code> top top :bulgaria: <code>:bulgaria:</code> :bahrain: <code>:bahrain:</code> top top :burundi: <code>:burundi:</code> :benin: <code>:benin:</code> top top :st_barthelemy: <code>:st_barthelemy:</code> :bermuda: <code>:bermuda:</code> top top :brunei: <code>:brunei:</code> :bolivia: <code>:bolivia:</code> top top :caribbean_netherlands: <code>:caribbean_netherlands:</code> :brazil: <code>:brazil:</code> top top :bahamas: <code>:bahamas:</code> :bhutan: <code>:bhutan:</code> top top :bouvet_island: <code>:bouvet_island:</code> :botswana: <code>:botswana:</code> top top :belarus: <code>:belarus:</code> :belize: <code>:belize:</code> top top :canada: <code>:canada:</code> :cocos_islands: <code>:cocos_islands:</code> top top :congo_kinshasa: <code>:congo_kinshasa:</code> :central_african_republic: <code>:central_african_republic:</code> top top :congo_brazzaville: <code>:congo_brazzaville:</code> :switzerland: <code>:switzerland:</code> top top :cote_divoire: <code>:cote_divoire:</code> :cook_islands: <code>:cook_islands:</code> top top <code>:chile:</code> :cameroon: <code>:cameroon:</code> top top <code>:cn:</code> :colombia: <code>:colombia:</code> top top :clipperton_island: <code>:clipperton_island:</code> :costa_rica: <code>:costa_rica:</code> top top :cuba: <code>:cuba:</code> :cape_verde: <code>:cape_verde:</code> top top :curacao: <code>:curacao:</code> :christmas_island: <code>:christmas_island:</code> top top :cyprus: <code>:cyprus:</code> :czech_republic: <code>:czech_republic:</code> top top <code>:de:</code> :diego_garcia: <code>:diego_garcia:</code> top top :djibouti: <code>:djibouti:</code> :denmark: <code>:denmark:</code> top top :dominica: <code>:dominica:</code> :dominican_republic: <code>:dominican_republic:</code> top top :algeria: <code>:algeria:</code> :ceuta_melilla: <code>:ceuta_melilla:</code> top top :ecuador: <code>:ecuador:</code> :estonia: <code>:estonia:</code> top top :egypt: <code>:egypt:</code> :western_sahara: <code>:western_sahara:</code> top top :eritrea: <code>:eritrea:</code> <code>:es:</code> top top :ethiopia: <code>:ethiopia:</code> <code>:eu:</code> <code>:european_union:</code> top top :finland: <code>:finland:</code> :fiji: <code>:fiji:</code> top top :falkland_islands: <code>:falkland_islands:</code> :micronesia: <code>:micronesia:</code> top top :faroe_islands: <code>:faroe_islands:</code> <code>:fr:</code> top top :gabon: <code>:gabon:</code> <code>:gb:</code> <code>:uk:</code> top top :grenada: <code>:grenada:</code> :georgia: <code>:georgia:</code> top top :french_guiana: <code>:french_guiana:</code> :guernsey: <code>:guernsey:</code> top top :ghana: <code>:ghana:</code> :gibraltar: <code>:gibraltar:</code> top top :greenland: <code>:greenland:</code> :gambia: <code>:gambia:</code> top top :guinea: <code>:guinea:</code> :guadeloupe: <code>:guadeloupe:</code> top top :equatorial_guinea: <code>:equatorial_guinea:</code> :greece: <code>:greece:</code> top top :south_georgia_south_sandwich_islands: <code>:south_georgia_south_sandwich_islands:</code> :guatemala: <code>:guatemala:</code> top top :guam: <code>:guam:</code> :guinea_bissau: <code>:guinea_bissau:</code> top top :guyana: <code>:guyana:</code> :hong_kong: <code>:hong_kong:</code> top top :heard_mcdonald_islands: <code>:heard_mcdonald_islands:</code> :honduras: <code>:honduras:</code> top top :croatia: <code>:croatia:</code> :haiti: <code>:haiti:</code> top top :hungary: <code>:hungary:</code> :canary_islands: <code>:canary_islands:</code> top top <code>:indonesia:</code> :ireland: <code>:ireland:</code> top top :israel: <code>:israel:</code> :isle_of_man: <code>:isle_of_man:</code> top top :india: <code>:india:</code> :british_indian_ocean_territory: <code>:british_indian_ocean_territory:</code> top top :iraq: <code>:iraq:</code> :iran: <code>:iran:</code> top top :iceland: <code>:iceland:</code> <code>:it:</code> top top :jersey: <code>:jersey:</code> :jamaica: <code>:jamaica:</code> top top :jordan: <code>:jordan:</code> <code>:jp:</code> top top :kenya: <code>:kenya:</code> :kyrgyzstan: <code>:kyrgyzstan:</code> top top :cambodia: <code>:cambodia:</code> :kiribati: <code>:kiribati:</code> top top :comoros: <code>:comoros:</code> :st_kitts_nevis: <code>:st_kitts_nevis:</code> top top :north_korea: <code>:north_korea:</code> <code>:kr:</code> top top :kuwait: <code>:kuwait:</code> :cayman_islands: <code>:cayman_islands:</code> top top :kazakhstan: <code>:kazakhstan:</code> :laos: <code>:laos:</code> top top :lebanon: <code>:lebanon:</code> :st_lucia: <code>:st_lucia:</code> top top :liechtenstein: <code>:liechtenstein:</code> :sri_lanka: <code>:sri_lanka:</code> top top :liberia: <code>:liberia:</code> :lesotho: <code>:lesotho:</code> top top :lithuania: <code>:lithuania:</code> :luxembourg: <code>:luxembourg:</code> top top :latvia: <code>:latvia:</code> :libya: <code>:libya:</code> top top :morocco: <code>:morocco:</code> :monaco: <code>:monaco:</code> top top :moldova: <code>:moldova:</code> :montenegro: <code>:montenegro:</code> top top :st_martin: <code>:st_martin:</code> :madagascar: <code>:madagascar:</code> top top :marshall_islands: <code>:marshall_islands:</code> :macedonia: <code>:macedonia:</code> top top :mali: <code>:mali:</code> :myanmar: <code>:myanmar:</code> top top :mongolia: <code>:mongolia:</code> :macau: <code>:macau:</code> top top :northern_mariana_islands: <code>:northern_mariana_islands:</code> :martinique: <code>:martinique:</code> top top :mauritania: <code>:mauritania:</code> :montserrat: <code>:montserrat:</code> top top :malta: <code>:malta:</code> :mauritius: <code>:mauritius:</code> top top :maldives: <code>:maldives:</code> :malawi: <code>:malawi:</code> top top :mexico: <code>:mexico:</code> :malaysia: <code>:malaysia:</code> top top :mozambique: <code>:mozambique:</code> :namibia: <code>:namibia:</code> top top :new_caledonia: <code>:new_caledonia:</code> :niger: <code>:niger:</code> top top :norfolk_island: <code>:norfolk_island:</code> <code>:nigeria:</code> top top :nicaragua: <code>:nicaragua:</code> :netherlands: <code>:netherlands:</code> top top :norway: <code>:norway:</code> :nepal: <code>:nepal:</code> top top :nauru: <code>:nauru:</code> :niue: <code>:niue:</code> top top :new_zealand: <code>:new_zealand:</code> :oman: <code>:oman:</code> top top :panama: <code>:panama:</code> :peru: <code>:peru:</code> top top :french_polynesia: <code>:french_polynesia:</code> :papua_new_guinea: <code>:papua_new_guinea:</code> top top :philippines: <code>:philippines:</code> :pakistan: <code>:pakistan:</code> top top :poland: <code>:poland:</code> :st_pierre_miquelon: <code>:st_pierre_miquelon:</code> top top :pitcairn_islands: <code>:pitcairn_islands:</code> :puerto_rico: <code>:puerto_rico:</code> top top :palestinian_territories: <code>:palestinian_territories:</code> :portugal: <code>:portugal:</code> top top :palau: <code>:palau:</code> :paraguay: <code>:paraguay:</code> top top :qatar: <code>:qatar:</code> :reunion: <code>:reunion:</code> top top :romania: <code>:romania:</code> :serbia: <code>:serbia:</code> top top <code>:ru:</code> :rwanda: <code>:rwanda:</code> top top :saudi_arabia: <code>:saudi_arabia:</code> :solomon_islands: <code>:solomon_islands:</code> top top :seychelles: <code>:seychelles:</code> :sudan: <code>:sudan:</code> top top :sweden: <code>:sweden:</code> :singapore: <code>:singapore:</code> top top :st_helena: <code>:st_helena:</code> :slovenia: <code>:slovenia:</code> top top :svalbard_jan_mayen: <code>:svalbard_jan_mayen:</code> :slovakia: <code>:slovakia:</code> top top :sierra_leone: <code>:sierra_leone:</code> :san_marino: <code>:san_marino:</code> top top :senegal: <code>:senegal:</code> :somalia: <code>:somalia:</code> top top :suriname: <code>:suriname:</code> :south_sudan: <code>:south_sudan:</code> top top :sao_tome_principe: <code>:sao_tome_principe:</code> :el_salvador: <code>:el_salvador:</code> top top :sint_maarten: <code>:sint_maarten:</code> :syria: <code>:syria:</code> top top :swaziland: <code>:swaziland:</code> :tristan_da_cunha: <code>:tristan_da_cunha:</code> top top :turks_caicos_islands: <code>:turks_caicos_islands:</code> :chad: <code>:chad:</code> top top :french_southern_territories: <code>:french_southern_territories:</code> :togo: <code>:togo:</code> top top :thailand: <code>:thailand:</code> :tajikistan: <code>:tajikistan:</code> top top :tokelau: <code>:tokelau:</code> :timor_leste: <code>:timor_leste:</code> top top <code>:turkmenistan:</code> :tunisia: <code>:tunisia:</code> top top :tonga: <code>:tonga:</code> <code>:tr:</code> top top :trinidad_tobago: <code>:trinidad_tobago:</code> <code>:tuvalu:</code> top top :taiwan: <code>:taiwan:</code> :tanzania: <code>:tanzania:</code> top top :ukraine: <code>:ukraine:</code> :uganda: <code>:uganda:</code> top top :us_outlying_islands: <code>:us_outlying_islands:</code> <code>:united_nations:</code> top top <code>:us:</code> :uruguay: <code>:uruguay:</code> top top :uzbekistan: <code>:uzbekistan:</code> :vatican_city: <code>:vatican_city:</code> top top :st_vincent_grenadines: <code>:st_vincent_grenadines:</code> :venezuela: <code>:venezuela:</code> top top :british_virgin_islands: <code>:british_virgin_islands:</code> :us_virgin_islands: <code>:us_virgin_islands:</code> top top :vietnam: <code>:vietnam:</code> :vanuatu: <code>:vanuatu:</code> top top :wallis_futuna: <code>:wallis_futuna:</code> :samoa: <code>:samoa:</code> top top :kosovo: <code>:kosovo:</code> :yemen: <code>:yemen:</code> top top :mayotte: <code>:mayotte:</code> :south_africa: <code>:south_africa:</code> top top :zambia: <code>:zambia:</code> :zimbabwe: <code>:zimbabwe:</code> top"},{"location":"tools/emojiCheetSheet/#subdivision-flag","title":"Subdivision Flag","text":"ico shortcode ico shortcode top <code>:england:</code> <code>:scotland:</code> top top <code>:wales:</code> top"},{"location":"tools/emojiCheetSheet/#github-custom-emoji","title":"GitHub Custom Emoji","text":"ico shortcode ico shortcode top :accessibility: <code>:accessibility:</code> <code>:atom:</code> top top :basecamp: <code>:basecamp:</code> :basecampy: <code>:basecampy:</code> top top :bowtie: <code>:bowtie:</code> :dependabot: <code>:dependabot:</code> top top :electron: <code>:electron:</code> :feelsgood: <code>:feelsgood:</code> top top :finnadie: <code>:finnadie:</code> :fishsticks: <code>:fishsticks:</code> top top :goberserk: <code>:goberserk:</code> :godmode: <code>:godmode:</code> top top :hurtrealbad: <code>:hurtrealbad:</code> :neckbeard: <code>:neckbeard:</code> top top :octocat: <code>:octocat:</code> :rage1: <code>:rage1:</code> top top :rage2: <code>:rage2:</code> :rage3: <code>:rage3:</code> top top :rage4: <code>:rage4:</code> :shipit: <code>:shipit:</code> top top :suspect: <code>:suspect:</code> :trollface: <code>:trollface:</code> top"},{"location":"tools/git/","title":"git\u4f7f\u7528","text":"<p>\u63a8\u8350</p> <p>\u73a9\u6e38\u620f\u5b66git</p> <p>git\u547d\u4ee4\u5c0f\u8d34\u58eb</p> <p>github\u5b98\u65b9\u6587\u6863</p> <p>gitignore\u6587\u6863</p> <p>\u7cbe\u901aGit\uff08\u7b2c2\u7248\uff09Soctt Chacon    Ben Straub</p> <p>linux\u547d\u4ee4</p> <p>\u6253\u6d88\u5b66\u4e60\u5174\u8da3\u7684\u4e00\u4e2a\u56e0\u7d20\u662f\u7f51\u7edc\u8fde\u63a5\u95ee\u9898\uff0c\u7b49\u5f04\u660e\u767d\uff0c\u7cbe\u529b\u4e5f\u8017\u6ca1\u4e86 </p>"},{"location":"tools/git/#_1","title":"\u57fa\u7840\u547d\u4ee4","text":"<p><code>git staus -s</code></p> <ul> <li>\u5de6\u8fb9\u6807\u8bb0\uff1a\u662f\u5426\u6682\u5b58</li> <li>\u53f3\u8fb9\u6807\u8bb0\uff1a\u662f\u5426\u4fee\u6539</li> </ul> <pre><code> M readme.md\n?? latex-tutorial-chinese-master/\n</code></pre> <p><code>git rm --cached readme.md</code></p> <ul> <li>\u4ece\u6682\u5b58\u533a\u79fb\u9664\u3002\u548c<code>git restore --staged &lt;file&gt;</code>\u5f88\u50cf</li> <li>(\u56e0\u4e3a--cached\u548c--staged\u662f\u540c\u4e49\u8bcd)</li> </ul> <p><code>git mv from.md to.md</code> \u91cd\u547d\u540d\uff0c\u76f8\u5f53\u4e8e3\u6761\u6307\u4ee4</p> <pre><code>$ mv from.md to.md\n$ git rm from.md\n$ git add to.md\n</code></pre> <p><code>git diff</code> </p> <ul> <li>\u4e0d\u5e26\u53c2\u6570\uff1a\u5de5\u4f5c\u76ee\u5f55\u7684\u5185\u5bb9\u548c\u6682\u5b58\u533a\u6bd4\u8f83</li> <li>\u5e26\u53c2\u6570\uff1a\u6682\u5b58\u533a\u548c\u4e0a\u4e00\u6b21\u63d0\u4ea4\u6bd4\u8f83 eg\uff1a<code>git diff --stage(\u6216\u8005--cached)</code></li> </ul> <p><code>git log --pretty=\"%h - %an,%ar : %s\"</code></p> <ul> <li>\u6682\u65f6\u81ea\u5b9a\u4e49\u683c\u5f0f</li> </ul> <p><code>git log --pretty=format:\"%h - %an,%ar : %s\"</code></p> <ul> <li>\u6c38\u4e45\u81ea\u5b9a\u4e49\u8f93\u51fa\u683c\u5f0f</li> </ul> \u547d\u4ee4 \u8bf4\u660e git commit -m \"test of git commit message\" git commit -a -m \"change something\" \u8df3\u8fc7git add\u76f4\u63a5\u63d0\u4ea4 git log -p -2 \u67e5\u770b\u6700\u8fd12\u6b21\u63d0\u4ea4\u6240\u5f15\u5165\u7684\u5dee\u5f02\uff08-2 -p\u6ca1\u6709\u987a\u5e8f\u8981\u6c42\uff09 git log --stat \u67e5\u770b\u7edf\u8ba1\u4fe1\u606f git log nameA nameB --not nameC \u5728A\u6216B\u4e2d\uff0c\u4f46\u4e0d\u5728C\u4e2d\u7684\u63d0\u4ea4"},{"location":"tools/git/#_2","title":"\u8fdc\u7a0b\u4ed3\u5e93","text":"<p>\u67e5\u770b\u8fdc\u7a0b</p> \u547d\u4ee4 \u8bf4\u660e git remote -v git remote show gitexer git remote add gitexer git@github.com:beautifulwq/gitexercise.git"},{"location":"tools/git/#_3","title":"\u8fdc\u7a0b\u64cd\u4f5c","text":"\u547d\u4ee4 \u8bf4\u660e git fetch gitexer \u628a\u672c\u5730\u6ca1\u6709\u7684\u53d6\u8fc7\u6765\uff0c\u4f46\u662f\u4e0d\u5408\u5e76 git pull git push remote-name branch-name \u672c\u5730\u5230\u8fdc\u7a0b git remote rename old new \u540c\u65f6\u4f1a\u6539\u8fdc\u7a0b\u5206\u652f\u540d\u79f0 git remote rm"},{"location":"tools/git/#tag","title":"tag","text":"\u547d\u4ee4 \u8bf4\u660e git tag \u67e5\u770b\u6807\u8bb0 git tag -a v0.1 \u6253\u6807\u8bb0 git show v0.1 show git tag -a v0.09 a3nb3ah1(\u6821\u9a8c\u548c) \u8865\u52a0\u6807\u8bb0 git push gitexer v0.1 \u63a8\u9001\u6807\u7b7e git push gitexer --tags \u63a8\u9001\u6240\u6709\u6807\u7b7e"},{"location":"tools/git/#_4","title":"\u522b\u540d","text":"\u547d\u4ee4 \u8bf4\u660e git config --global alias.st status git st git config --global alias.last 'log -1 HEAD' git last"},{"location":"tools/git/#_5","title":"\u5206\u652f","text":"\u547d\u4ee4 \u8bf4\u660e git branch \u67e5\u770b\u5206\u652f git branch -v git branch --merged \u67e5\u770b\u5df2\u7ecf\u5408\u5e76\u4e86\u7684\u5206\u652f git branch --no-merged \u67e5\u770b\u6ca1\u5408\u5e76\u7684\u5206\u652f git checkout \u5207\u6362\u5206\u652f git branch testing \u521b\u5efa\u5206\u652f git checkout -b hotfix \u76f8\u5f53\u4e8egit branch hotfix git checkout hotfix git branch -d hotfix \u5220\u9664branch <p>git checkout &amp;&amp; git switch</p> <p>\u5916\u90e8\u94fe\u63a5</p>"},{"location":"tools/git/#rebase","title":"\u53d8\u57fa rebase","text":"<p>\u53d8\u57fa\u65f6\u7684 <code>reword</code> \u548c <code>edit</code>\u7684\u533a\u522b</p> <ul> <li><code>reword</code> \u53ea\u6539\u53d8commit\u7684\u4fe1\u606f\uff0c\u4e0d\u6539\u53d8\u6587\u4ef6\u7684\u4fee\u6539\u5185\u5bb9</li> <li><code>edit</code> \u4e24\u8005\u90fd\u6539\u53d8</li> </ul> <p>\u597d\u5904\u633a\u591a\uff0c\u5efa\u8bae\u770b\u4e66\u4e0a\u7684\u56fe\u3002\u63a8\u8350\u5728\u672c\u5730\u53d8\u57fa\uff0c\u4f46\u662f\u4e0d\u8981\u5bf9\u5df2\u7ecf\u63a8\u9001\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\u7684\u63d0\u4ea4\u8fdb\u884c\u53d8\u57fa\u3002</p> <p>\u6211\u7684\u7406\u89e3\u662f\u53ef\u4ee5\u628a\u5e76\u884c\u7684\u5206\u652f\u5408\u5e76\u6210\u770b\u8d77\u6765\u7ebf\u6027\u8fdb\u884c\u7684\uff0c\u66f4\u52a0\u4eba\u6027\u5316</p> <p><code>git pull --rebase</code>\u53ef\u80fd\u4f1a\u89e3\u51b3\u6709\u4eba\u5728\u8fdc\u7a0b\u53d8\u57fa\uff0c\u4f60\u53c8\u8981\u62c9\u53d6\u7684\u95ee\u9898 </p>"},{"location":"tools/git/#git","title":"git \u4ea4\u4e92\u5f0f","text":"\u547d\u4ee4 \u8bf4\u660e git add -i \u8fdb\u5165\u4ea4\u4e92\u5f0f"},{"location":"tools/git/#patch","title":"\u8865\u4e01 patch","text":"<p>git add -patch|\u8fdb\u5165\u8865\u4e01\u6a21\u5f0f\u6216\u8005\u5148\u8fdb\u4ea4\u4e92\u5f0f\u518d\u8fdb\u8865\u4e01\u6a21\u5f0f</p>"},{"location":"tools/git/#stash","title":"\u50a8\u85cf stash","text":"\u547d\u4ee4 \u8bf4\u660e git stash \u50a8\u85cf git stash list \u67e5\u770b\u50a8\u85cf git stash apply \u5e94\u7528\u6700\u65b0\u7684\u4e00\u6b21,\u4e5f\u53ef\u4ee5\u52a0\u53c2\u6570\u6765\u6307\u5b9a\u67d0\u4e00\u6b21 git stash drop stash@{0} \u5220\u9664\u50a8\u85cf git stash --keep-index \u4e0d\u50a8\u85cf\u5df2\u7ecfgit add\u7684\u5185\u5bb9 git stash --include-untracked \u540c\u65f6\u50a8\u85cf\u672a\u8ddf\u8e2a\u7684\u6587\u4ef6 git stash -u \u540c\u4e0a git stash branch newbrname \u4ece\u50a8\u85cf\u521b\u5efa\u5206\u652f\uff08\u7701\u65f6\u7701\u529b\uff09"},{"location":"tools/git/#clean","title":"\u6e05\u7406\u5de5\u4f5c\u76ee\u5f55 clean","text":"\u547d\u4ee4 \u8bf4\u660e git clean \u5220\u9664\u6240\u6709\u672a\u8ddf\u8e2a\u7684\u6587\u4ef6 git clean -d -n \u9884\u89c8\u4f1a\u5220\u9664\u54ea\u4e9b git clean -x \u8fde.gitignore\u91cc\u5ffd\u7565\u7684\u6587\u4ef6\u4e5f\u4f1a\u5220\u9664 <p>Info</p> <ul> <li>\u53ef\u4ee5\u5148\u7528<code>-n</code>\u53c2\u6570\u5148\u9884\u89c8\u5220\u9664\u54ea\u4e9b\u6587\u4ef6</li> <li>\u53ef\u4ee5\u7528<code>-i</code>\u53c2\u6570\u4ea4\u4e92\u5f0f\u5730\u5220\u9664</li> </ul>"},{"location":"tools/git/#_6","title":"\u4fee\u6539\u63d0\u4ea4\u4fe1\u606f","text":"\u547d\u4ee4 \u8bf4\u660e git commit --amend \u4fee\u6539\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u4fe1\u606f\uff0c\u4f46\u662f\u4f1a\u6539\u53d8sha1\u503c\uff0c\u7c7b\u4f3c\u4e00\u6b21\u5fae\u578b\u53d8\u57fa <p><code>git cherry-pick</code>\u9009\u62e9\u6027\u7684rebase</p> :x \u548c :wq \u7684\u533a\u522b <p>(1) :wq \u5f3a\u5236\u6027\u5199\u5165\u6587\u4ef6\u5e76\u9000\u51fa\uff08\u5b58\u76d8\u5e76\u9000\u51fa write and quite\uff09\u3002\u5373\u4f7f\u6587\u4ef6\u6ca1\u6709\u88ab\u4fee\u6539\u4e5f\u5f3a\u5236\u5199\u5165\uff0c\u5e76\u66f4\u65b0\u6587\u4ef6\u7684\u4fee\u6539\u65f6\u95f4\u3002 (2) :x \u5199\u5165\u6587\u4ef6\u5e76\u9000\u51fa\u3002\u4ec5\u5f53\u6587\u4ef6\u88ab\u4fee\u6539\u65f6\u624d\u5199\u5165\uff0c\u5e76\u66f4\u65b0\u6587\u4ef6\u4fee\u6539\u65f6\u95f4\uff1b\u5426\u5219\u4e0d\u4f1a\u66f4\u65b0\u6587\u4ef6\u4fee\u6539\u65f6\u95f4\u3002 \u8fd9\u4e24\u8005\u4e00\u822c\u60c5\u51b5\u4e0b\u6ca1\u4ec0\u4e48\u4e0d\u4e00\u6837\uff0c\u4f46\u662f\u5728\u7f16\u7a0b\u65b9\u9762\uff0c\u5bf9\u7f16\u8f91\u6e90\u6587\u4ef6\u53ef\u80fd\u4f1a\u4ea7\u751f\u91cd\u8981\u5f71\u54cd\u3002\u56e0\u4e3a\u6587\u4ef6\u5373\u4f7f\u6ca1\u6709\u4fee\u6539\uff0c\":wq\" \u5f3a\u5236\u66f4\u65b0\u6587\u4ef6\u7684\u4fee\u6539\u65f6\u95f4\uff0c \u8fd9\u6837\u4f1a\u8ba9 make \u7f16\u8bd1\u6574\u4e2a\u9879\u76ee\u65f6\u4ee5\u4e3a\u6587\u4ef6\u88ab\u4fee\u6539\u8fc7\u4e86\uff0c\u7136\u540e\u5c31\u5f97\u91cd\u65b0\u7f16\u8bd1\u94fe\u63a5\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002\u8fd9\u53ef\u80fd\u4f1a\u4ea7\u751f\u8ba9\u4eba\u8bef\u89e3\u7684\u540e\u679c\uff0c\u5f53\u7136\u4e5f\u4ea7\u751f\u4e86\u4e0d\u5fc5\u8981\u7684\u7cfb\u7edf\u8d44\u6e90\u82b1\u9500\u3002\u4e0d\u8fc7\u50cf\u662f\u7248\u672c\u63a7\u5236\u7684\u8f6f\u4ef6\u4e00\u822c\u9996\u9009\u8fd8\u662f\u6bd4\u8f83\u6587\u4ef6\u5185\u5bb9\uff0c\u4fee\u6539\u65f6\u95f4\u4e00\u822c\u4e0d\u52a0\u4ee5\u7406\u4f1a\u3002</p> <p>revert vs amend</p>"},{"location":"tools/linux/","title":"Linux tricks","text":""},{"location":"tools/linux/#dotfiles","title":"dotfiles","text":"<p>\u7ecf\u5e38\u91cd\u88c5\u7cfb\u7edf/\u865a\u62df\u673a\u7684\u670b\u53cb\u4eec\u53ef\u80fd\u7ecf\u5e38\u9047\u5230\u5b89\u88c5 <code>vimrc</code> \u7b49\u914d\u7f6e\u7684\u82e6\u607c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u4f60 </p> <ul> <li>\u4ed3\u5e93\u94fe\u63a5</li> <li>quick start</li> </ul>"},{"location":"blog/archive/2023/","title":"2023","text":""},{"location":"blog/archive/2022/","title":"2022","text":""},{"location":"blog/category/life/","title":"life","text":""}]}